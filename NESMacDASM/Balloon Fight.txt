; Source generated by NESMacDASM
; Questions, comments, bugs:  e-mail pairofrooks@gmail.com
;
; FILENAME: Balloon Fight.NES, File Size: 32767, ORG: $8000
;---------------------------------------------------------------------------
; NMI/VBlank vector (nmi:) at $C08A
; RESET vector (main:) at $C000
; IRQ/BRK vector (irq:) at $00ED
;
; Standard 16-byte Header:
; $4E $45 $53 $1A	: 'NES '
.inesprg $02 ; 2 banks of code (16K per bank)
.ineschr $01 ; 1 banks of data (8K per bank)
;
; 00000001	 ($01) ; ROM Control Byte #1
; |  |||||                               
; |  ||||+- 1=Vertical mirroring         
; |  |||+-- 0=(SRAM disabled)            
; |  ||+--- 0=(no 512-byte trainer)      
; |  |+---- 0=(no four-screen mirroring) 
; |  |                                   
; +--+----- $0=lower 4-bits of mapper#  
;
; 01000100	 ($44) ; ROM Control Byte #2
; |  |                                   
; +--+----- $4=upper 4-bits of mapper#
;
.inesmap $40 ; Mapper #64
; $69 $73 $6B $44 $75 $64 $65 $21 ; unused? 

$8000	LDA #$00	;
$8002	STA $2000	;PPU setup #1
$8005	STA $2001	;PPU setup #2
$8008	LDA $2002	;PPU status
$800B	BPL $8008	;
$800D	SEI		;
$800E	CLD		;
$800F	LDX #$ff	;
$8011	TXS		;
$8012	LDX #$12	;
$8014	LDA #$00	;
$8016	STA $00,X	;
$8018	INX		;
$8019	BNE $8016	;
$801B	LDX #$02	;
$801D	LDA $07FA,X	;
$8020	CMP $C078,X	;
$8023	BNE $802A	;
$8025	DEX		;
$8026	BPL $801D	;
$8028	BMI $806D	;
$802A	LDX #$00	;
$802C	TXA		;
$802D	STA $00,X	;
$802F	STA $0700,X	;
$8032	INX		;
$8033	BNE $802D	;
$8035	LDA #$32	;
$8037	STA $15  	;
$8039	LDA #$32	;
$803B	JSR $D6D4	;
$803E	LDA #$00	;
$8040	STA $46  	;
$8042	JSR $C56F	;
$8045	DEC $15  	;
$8047	BNE $8039	;
$8049	LDX #$0e	;
$804B	LDA $C07B,X	;
$804E	STA $0629,X	;
$8051	DEX		;
$8052	BPL $804B	;
$8054	LDX #$04	;
$8056	LDA #$00	;
$8058	STA $03,X	;
$805A	DEX		;
$805B	BPL $8056	;
$805D	LDA #$00	;
$805F	JSR $D6D4	;
$8062	LDX #$02	;
$8064	LDA $C078,X	;
$8067	STA $07FA,X	;
$806A	DEX		;
$806B	BPL $8064	;
$806D	LDA #$1e	;
$806F	STA $01  	;
$8071	LDA #$90	;
$8073	STA $00  	;
$8075	JMP $F1CA	;

$8078	PHA		;
$8079	EOR ($4C,X)	;
$807B	BRK		;
$807C	BRK		;
$807D	BRK		;
$807E	ORA ($00,X)	;
$8080	BRK		;
$8081	BRK		;
$8082	BRK		;
$8083	ORA ($00,X)	;
$8085	BRK		;
$8086	BRK		;
$8087	ORA $02  	;
$8089	BRK		;
$808A	PHA		;
$808B	TXA		;
$808C	PHA		;
$808D	TYA		;
$808E	PHA		;
$808F	LDA #$00	;
$8091	STA $2003	;SPR-RAM address select
$8094	LDA #$02	;
$8096	STA $4014	;Sprite DMA trigger
$8099	LDA $52  	;
$809B	CMP $53  	;
$809D	BEQ $80A2	;
$809F	JSR $C172	;
$80A2	JSR $D603	;
$80A5	JSR $D78E	;
$80A8	INC $19  	;
$80AA	LDA #$20	;
$80AC	STA $2006	;VRAM address select
$80AF	LDA #$00	;
$80B1	STA $2006	;VRAM address select
$80B4	LDA #$00	;
$80B6	STA $2005	;PPU scroll
$80B9	STA $2005	;PPU scroll
$80BC	JSR $FFF7	;
$80BF	LDA #$01	;
$80C1	STA $02  	;
$80C3	LDA $16  	;
$80C5	BEQ $80E7	;
$80C7	LDA $2002	;PPU status
$80CA	BMI $80C7	;
$80CC	LDX #$04	;
$80CE	LDY #$c6	;
$80D0	DEY		;
$80D1	BNE $80D0	;
$80D3	DEX		;
$80D4	BNE $80D0	;
$80D6	LDA $18  	;
$80D8	ORA $00  	;
$80DA	STA $2000	;PPU setup #1
$80DD	LDA $17  	;
$80DF	STA $2005	;PPU scroll
$80E2	LDA #$00	;
$80E4	STA $2005	;PPU scroll
$80E7	PLA		;
$80E8	TAY		;
$80E9	PLA		;
$80EA	TAX		;
$80EB	PLA		;
$80EC	RTI		;

$80ED	JMP $C0ED	;

$80F0	LDA $00  	;
$80F2	AND #$7f	;
$80F4	STA $2000	;PPU setup #1
$80F7	STA $00  	;
$80F9	RTS		;

$80FA	LDA $00  	;
$80FC	ORA #$80	;
$80FE	BNE $80F4	;
$8100	LDA #$00	;
$8102	PHA		;
$8103	JSR $F45B	;
$8106	PLA		;
$8107	STA $2001	;PPU setup #2
$810A	RTS		;

$810B	LDA $01  	;
$810D	BNE $8102	;
$810F	JSR $C14A	;
$8112	LDY #$00	;
$8114	LDA $0057,Y	;
$8117	STA $0300,X	;
$811A	INX		;
$811B	INY		;
$811C	CPY $56  	;
$811E	BNE $8114	;
$8120	STX $53  	;
$8122	RTS		;

$8123	LDA #$57	;
$8125	LDY #$00	;
$8127	STA $21  	;
$8129	STY $22  	;
$812B	TXA		;
$812C	PHA		;
$812D	LDY #$02	;
$812F	LDA ($21),Y	;
$8131	CLC		;
$8132	ADC #$03	;
$8134	STA $12  	;
$8136	LDX $53  	;
$8138	LDY #$00	;
$813A	LDA ($21),Y	;
$813C	STA $0300,X	;
$813F	INX		;
$8140	INY		;
$8141	CPY $12  	;
$8143	BNE $813A	;
$8145	STX $53  	;
$8147	PLA		;
$8148	TAX		;
$8149	RTS		;

$814A	LDX $53  	;
$814C	LDA #$00	;
$814E	STA $12  	;
$8150	LDA $55  	;
$8152	ASL A		;
$8153	ASL A		;
$8154	ASL A		;
$8155	ASL A		;
$8156	ROL $12  	;
$8158	ASL A		;
$8159	ROL $12  	;
$815B	ORA $54  	;
$815D	PHA		;
$815E	LDA $12  	;
$8160	ORA #$20	;
$8162	STA $0300,X	;
$8165	INX		;
$8166	PLA		;
$8167	STA $0300,X	;
$816A	INX		;
$816B	LDA $56  	;
$816D	STA $0300,X	;
$8170	INX		;
$8171	RTS		;

$8172	TYA		;
$8173	PHA		;
$8174	TXA		;
$8175	PHA		;
$8176	JSR $C17E	;
$8179	PLA		;
$817A	TAX		;
$817B	PLA		;
$817C	TAY		;
$817D	RTS		;

$817E	LDX $52  	;
$8180	LDA $0300,X	;
$8183	INX		;
$8184	STA $50  	;
$8186	STA $2006	;VRAM address select
$8189	LDA $0300,X	;
$818C	INX		;
$818D	STA $2006	;VRAM address select
$8190	LDY $0300,X	;
$8193	INX		;
$8194	LDA $0300,X	;
$8197	INX		;
$8198	STA $2007	;VRAM data
$819B	DEY		;
$819C	BNE $8194	;
$819E	LDA $50  	;
$81A0	CMP #$3f	;
$81A2	BNE $81B4	;
$81A4	LDA #$3f	;
$81A6	STA $2006	;VRAM address select
$81A9	LDA #$00	;
$81AB	STA $2006	;VRAM address select
$81AE	STA $2006	;VRAM address select
$81B1	STA $2006	;VRAM address select
$81B4	STX $52  	;
$81B6	CPX $53  	;
$81B8	BNE $817E	;
$81BA	RTS		;

$81BB	LDA #$20	;
$81BD	STA $F2  	;
$81BF	JSR $C51D	;
$81C2	JSR $C52F	;
$81C5	LDA #$ff	;
$81C7	STA $CD  	;
$81C9	LDA #$a3	;
$81CB	STA $23  	;
$81CD	LDA #$c4	;
$81CF	STA $24  	;
$81D1	LDA #$80	;
$81D3	STA $91  	;
$81D5	STA $0488	;
$81D8	LDA #$70	;
$81DA	STA $9A  	;
$81DC	JSR $CD40	;
$81DF	LDA #$00	;
$81E1	STA $41  	;
$81E3	STA $C9  	;
$81E5	STA $CA  	;
$81E7	STA $BA  	;
$81E9	STA $C5  	;
$81EB	STA $C8  	;
$81ED	JSR $F49B	;
$81F0	LDX #$13	;
$81F2	LDA #$ff	;
$81F4	STA $0530,X	;
$81F7	LDA #$f0	;
$81F9	STA $04A4,X	;
$81FC	DEX		;
$81FD	BPL $81F2	;
$81FF	JSR $F466	;
$8202	JSR $E687	;
$8205	LDA $C5  	;
$8207	BNE $820C	;
$8209	JSR $C6EF	;
$820C	LDA $19  	;
$820E	LSR A		;
$820F	BCS $8214	;
$8211	JMP $C2C6	; (in an if statement) 
$8214	LDA $C5  	;
$8216	BEQ $821D	;
$8218	DEC $C5  	;
$821A	JMP $C2C6	; (in an if statement) 
$821D	LDA $17  	;
$821F	BNE $8227	;
$8221	LDA $18  	;
$8223	EOR #$01	;
$8225	STA $18  	;
$8227	DEC $17  	;
$8229	LDA $0488	;
$822C	BEQ $8243	;
$822E	INC $0488	;
$8231	LDA $0488	;
$8234	CMP #$f0	;
$8236	BCC $823D	;
$8238	LDA #$00	;
$823A	STA $0488	;
$823D	LDA $BD  	;
$823F	BEQ $8243	;
$8241	INC $91  	;
$8243	LDX #$07	;
$8245	LDA $055D,X	;
$8248	BMI $8263	;
$824A	INC $0567,X	;
$824D	LDA $0567,X	;
$8250	CMP #$f8	;
$8252	BNE $8263	;
$8254	LDA #$ff	;
$8256	STA $055D,X	;
$8259	LDA #$f0	;
$825B	STA $057B,X	;
$825E	LDA #$00	;
$8260	STA $05CE	;
$8263	DEX		;
$8264	BPL $8245	;
$8266	LDX #$13	;
$8268	LDA $0530,X	;
$826B	BMI $827F	;
$826D	INC $0490,X	;
$8270	LDA $0490,X	;
$8273	CMP #$f8	;
$8275	BCC $827F	;
$8277	LDA #$f0	;
$8279	STA $04A4,X	;
$827C	STA $0530,X	;
$827F	DEX		;
$8280	BPL $8268	;
$8282	LDA $17  	;
$8284	AND #$07	;
$8286	BNE $82C6	;
$8288	LDX $88  	;
$828A	DEX		;
$828B	BMI $82C6	;
$828D	LDA #$00	;
$828F	STA $3E  	;
$8291	LDA #$01	;
$8293	JSR $D6D4	;
$8296	INC $C9  	;
$8298	LDA $C9  	;
$829A	AND #$1f	;
$829C	BNE $82B2	;
$829E	INC $CA  	;
$82A0	LDA $CA  	;
$82A2	CMP #$0a	;
$82A4	BNE $82B2	;
$82A6	LDA #$02	;
$82A8	STA $CA  	;
$82AA	LDY $BA  	;
$82AC	INY		;
$82AD	TYA		;
$82AE	AND #$03	;
$82B0	STA $BA  	;
$82B2	LDX $CA  	;
$82B4	LDA $C3B5,X	;
$82B7	ASL A		;
$82B8	TAY		;
$82B9	LDA $C3AB,Y	;
$82BC	STA $25  	;
$82BE	LDA $C3AC,Y	;
$82C1	STA $26  	;
$82C3	JSR $C3A8	;
$82C6	LDX #$07	;
$82C8	LDA $055D,X	;
$82CB	BMI $82E5	;
$82CD	JSR $CEC4	;
$82D0	LDA $05CD	;
$82D3	BEQ $82E5	;
$82D5	DEC $05CD	;
$82D8	INC $05CE	;
$82DB	TXA		;
$82DC	PHA		;
$82DD	LDA $0559	;
$82E0	JSR $D6D4	;
$82E3	PLA		;
$82E4	TAX		;
$82E5	JSR $CE25	;
$82E8	DEX		;
$82E9	BPL $82C8	;
$82EB	LDX #$13	;
$82ED	LDA $0530,X	;
$82F0	BMI $830D	;
$82F2	LDA $C5  	;
$82F4	BNE $830A	;
$82F6	JSR $C9AC	;
$82F9	LDA $04A4,X	;
$82FC	CMP #$02	;
$82FE	BCS $8303	;
$8300	JSR $CA45	;
$8303	CMP #$d8	;
$8305	BCC $830A	;
$8307	JSR $CA45	;
$830A	JSR $CB12	;
$830D	LDA $19  	;
$830F	AND #$07	;
$8311	LSR A		;
$8312	TAY		;
$8313	LDA $C9D3,Y	;
$8316	PHA		;
$8317	LDA $19  	;
$8319	LSR A		;
$831A	TXA		;
$831B	BCC $8323	;
$831D	STA $12  	;
$831F	LDA #$13	;
$8321	SBC $12  	;
$8323	ASL A		;
$8324	ASL A		;
$8325	TAY		;
$8326	PLA		;
$8327	STA $02B1,Y	;
$832A	LDA $04A4,X	;
$832D	STA $02B0,Y	;
$8330	LDA $0490,X	;
$8333	STA $02B3,Y	;
$8336	LDA #$00	;
$8338	STA $02B2,Y	;
$833B	DEX		;
$833C	BPL $82ED	;
$833E	LDA $05CE	;
$8341	CMP #$14	;
$8343	BCC $8365	;
$8345	INC $47  	;
$8347	LDA #$00	;
$8349	JSR $D6D4	;
$834C	DEC $47  	;
$834E	LDA #$10	;
$8350	STA $F2  	;
$8352	INC $C8  	;
$8354	JSR $D3E3	;
$8357	JSR $C51D	;
$835A	DEC $C8  	;
$835C	LDX #$64	;
$835E	JSR $F454	;
$8361	LDA #$20	;
$8363	STA $F2  	;
$8365	LDX #$f0	;
$8367	LDA $0488	;
$836A	BEQ $836E	;
$836C	LDX #$88	;
$836E	STX $0200	;
$8371	STX $0204	;
$8374	STA $0203	;
$8377	CLC		;
$8378	ADC #$08	;
$837A	STA $0207	;
$837D	LDA $19  	;
$837F	AND #$03	;
$8381	STA $0202	;
$8384	STA $0206	;
$8387	LDX #$e3	;
$8389	STX $0201	;
$838C	INX		;
$838D	STX $0205	;
$8390	LDA $88  	;
$8392	BMI $8397	;
$8394	JMP $C1FF	; (in an if statement) 
$8397	JSR $C56F	;
$839A	LDA #$01	;
$839C	STA $F0  	;
$839E	JSR $F45B	;
$83A1	LDA #$02	;
$83A3	STA $F2  	;
$83A5	JMP $F360	;

$83A8	JMP ($0025)	;
$83AB	.byte $bf	; INVALID OPCODE !!!
$83AC	.byte $c3	; INVALID OPCODE !!!
$83AD	SBC $34C3	;
$83B0	CPY $55  	;
$83B2	CPY $54  	;
$83B4	CPY $00  	;
$83B6	BRK		;
$83B7	.byte $02	; INVALID OPCODE !!!
$83B8	.byte $02	; INVALID OPCODE !!!
$83B9	.byte $02	; INVALID OPCODE !!!
$83BA	.byte $02	; INVALID OPCODE !!!
$83BB	.byte $02	; INVALID OPCODE !!!
$83BC	.byte $04	; INVALID OPCODE !!!
$83BD	.byte $03	; INVALID OPCODE !!!
$83BE	ORA ($A0,X)	;
$83C0	BRK		;
$83C1	LDA ($23),Y	;
$83C3	INC $23  	;
$83C5	BNE $83C9	;
$83C7	INC $24  	;
$83C9	TAX		;
$83CA	BEQ $83EC	;
$83CC	ASL A		;
$83CD	ASL A		;
$83CE	ASL A		;
$83CF	STA $15  	;
$83D1	LDA #$00	;
$83D3	STA $14  	;
$83D5	TXA		;
$83D6	AND #$c0	;
$83D8	CMP #$80	;
$83DA	BNE $83E2	;
$83DC	JSR $C461	;
$83DF	JMP $C3BF	; (in an if statement) 
$83E2	CMP #$00	;
$83E4	BNE $83EC	;
$83E6	JSR $C47C	;
$83E9	JMP $C3BF	; (in an if statement) 
$83EC	RTS		;

$83ED	JSR $F1A9	;
$83F0	AND #$7f	;
$83F2	CMP #$04	;
$83F4	BCC $8402	;
$83F6	CMP #$18	;
$83F8	BCS $8402	;
$83FA	ASL A		;
$83FB	ASL A		;
$83FC	ASL A		;
$83FD	STA $15  	;
$83FF	JSR $C461	;
$8402	JSR $F1A9	;
$8405	AND #$3f	;
$8407	CMP #$02	;
$8409	BCC $842F	;
$840B	CMP #$18	;
$840D	BCS $842F	;
$840F	ASL A		;
$8410	ASL A		;
$8411	ASL A		;
$8412	STA $15  	;
$8414	JSR $F1A9	;
$8417	AND #$3f	;
$8419	LDX $BA  	;
$841B	ADC $C430,X	;
$841E	STA $14  	;
$8420	JSR $C47C	;
$8423	JSR $F1A9	;
$8426	LSR A		;
$8427	BCC $8402	;
$8429	JSR $CA45	;
$842C	JMP $C402	; (in an if statement) 
$842F	RTS		;

$8430	JSR $4030	; unknown register 
$8433	RTS		;

$8434	JSR $F1A9	;
$8437	AND #$cf	;
$8439	BNE $83ED	;
$843B	LDY $89  	;
$843D	INY		;
$843E	BNE $83ED	;
$8440	LDA #$e6	;
$8442	STA $9B  	;
$8444	LDA $1B  	;
$8446	AND #$7f	;
$8448	ADC #$40	;
$844A	STA $92  	;
$844C	LDA #$80	;
$844E	STA $89  	;
$8450	LDA #$00	;
$8452	STA $80  	;
$8454	RTS		;

$8455	JSR $C402	;
$8458	JSR $F1A9	;
$845B	AND #$7f	;
$845D	STA $0508,X	;
$8460	RTS		;

$8461	LDX #$07	;
$8463	LDA $055D,X	;
$8466	BMI $846C	;
$8468	DEX		;
$8469	BPL $8463	;
$846B	RTS		; (within an if statement) 
$846C	LDA #$01	;
$846E	STA $055D,X	;
$8471	LDA #$00	;
$8473	STA $0567,X	;
$8476	LDA $15  	;
$8478	STA $057B,X	;
$847B	RTS		;

$847C	LDX #$13	;
$847E	LDA $0530,X	;
$8481	BMI $8487	;
$8483	DEX		;
$8484	BPL $847E	;
$8486	RTS		; (within an if statement) 
$8487	LDA #$00	;
$8489	STA $0530,X	;
$848C	STA $0490,X	;
$848F	STA $04F4,X	;
$8492	STA $0508,X	;
$8495	STA $04E0,X	;
$8498	LDA $14  	;
$849A	STA $051C,X	;
$849D	LDA $15  	;
$849F	STA $04A4,X	;
$84A2	RTS		;

$84A3	BRK		;
$84A4	BRK		;
$84A5	ORA #$00	;
$84A7	PHP		;
$84A8	STY $0700	;
$84AB	CLC		;
$84AC	BRK		;
$84AD	CLC		;
$84AE	BRK		;
$84AF	ORA $1A00,Y	;
$84B2	BRK		;
$84B3	STY $94  	;
$84B5	.byte $1a	; INVALID OPCODE !!!
$84B6	BRK		;
$84B7	.byte $1a	; INVALID OPCODE !!!
$84B8	BRK		;
$84B9	.byte $1a	; INVALID OPCODE !!!
$84BA	BRK		;
$84BB	.byte $0b	; INVALID OPCODE !!!
$84BC	.byte $12	; INVALID OPCODE !!!
$84BD	BRK		;
$84BE	.byte $0c	; INVALID OPCODE !!!
$84BF	.byte $13	; INVALID OPCODE !!!
$84C0	BRK		;
$84C1	ORA $0014	;
$84C4	.byte $14	; INVALID OPCODE !!!
$84C5	BRK		;
$84C6	BRK		;
$84C7	BCC $84C9	;
$84C9	.byte $07	; INVALID OPCODE !!!
$84CA	BRK		;
$84CB	.byte $07	; INVALID OPCODE !!!
$84CC	STY $0096	;
$84CF	PHP		;
$84D0	BRK		;
$84D1	ORA #$00	;
$84D3	BRK		;
$84D4	CLC		;
$84D5	BRK		;
$84D6	.byte $17	; INVALID OPCODE !!!
$84D7	BRK		;
$84D8	ASL $00,X	;
$84DA	BRK		;
$84DB	BRK		;
$84DC	BRK		;
$84DD	BRK		;
$84DE	BRK		;
$84DF	TXA		;
$84E0	BCC $84E2	;
$84E2	BRK		;
$84E3	BRK		;
$84E4	PHP		;
$84E5	BRK		;
$84E6	ORA #$98	;
$84E8	BRK		;
$84E9	ASL A		;
$84EA	BRK		;
$84EB	BRK		;
$84EC	BRK		;
$84ED	STX $8A  	;
$84EF	ORA $00,X	;
$84F1	.byte $14	; INVALID OPCODE !!!
$84F2	BRK		;
$84F3	STX $0013	;
$84F6	BRK		;
$84F7	.byte $03	; INVALID OPCODE !!!
$84F8	ORA $0D00	;
$84FB	ASL $0C00	;
$84FE	ORA $0D00	;
$8501	ORA $8600,Y	;
$8504	.byte $92	; INVALID OPCODE !!!
$8505	BRK		;
$8506	BRK		;
$8507	TYA		;
$8508	BRK		;
$8509	BRK		;
$850A	ASL A		;
$850B	.byte $12	; INVALID OPCODE !!!
$850C	BRK		;
$850D	ORA #$13	;
$850F	BRK		;
$8510	PHP		;
$8511	.byte $14	; INVALID OPCODE !!!
$8512	BRK		;
$8513	.byte $07	; INVALID OPCODE !!!
$8514	ORA $00,X	;
$8516	.byte $07	; INVALID OPCODE !!!
$8517	ASL $00,X	;
$8519	.byte $07	; INVALID OPCODE !!!
$851A	BRK		;
$851B	BRK		;
$851C	BRK		;
$851D	JSR $D0D8	;
$8520	ASL $0559	;
$8523	LDA $0559	;
$8526	ASL A		;
$8527	ASL A		;
$8528	ADC $0559	;
$852B	STA $0559	;
$852E	RTS		;

$852F	LDA #$00	;
$8531	STA $12  	;
$8533	LDA $12  	;
$8535	ASL A		;
$8536	ASL A		;
$8537	ADC $12  	;
$8539	STA $1D  	;
$853B	LDA #$07	;
$853D	STA $1E  	;
$853F	LDY #$04	;
$8541	LDA ($1D),Y	;
$8543	CMP $0003,Y	;
$8546	BCC $8559	;
$8548	BNE $854F	;
$854A	DEY		;
$854B	BPL $8541	;
$854D	BMI $8559	;
$854F	INC $12  	;
$8551	LDA $12  	;
$8553	CMP #$32	;
$8555	BNE $8533	;
$8557	DEC $12  	;
$8559	INC $12  	;
$855B	LDA $12  	;
$855D	PHA		;
$855E	STA $43  	;
$8560	LDY #$0a	;
$8562	JSR $D772	;
$8565	STA $4A  	;
$8567	LDA $43  	;
$8569	STA $49  	;
$856B	PLA		;
$856C	STA $12  	;
$856E	RTS		;

$856F	JSR $C52F	;
$8572	DEC $12  	;
$8574	LDA #$31	;
$8576	SEC		;
$8577	SBC $12  	;
$8579	STA $13  	;
$857B	ASL A		;
$857C	ASL A		;
$857D	ADC $13  	;
$857F	TAY		;
$8580	LDA $12  	;
$8582	ASL A		;
$8583	ASL A		;
$8584	ADC $12  	;
$8586	STA $1D  	;
$8588	CLC		;
$8589	ADC #$05	;
$858B	STA $1F  	;
$858D	LDA #$07	;
$858F	STA $1E  	;
$8591	STA $20  	;
$8593	TYA		;
$8594	BEQ $85A2	;
$8596	DEY		;
$8597	LDA ($1D),Y	;
$8599	STA ($1F),Y	;
$859B	DEY		;
$859C	BNE $8597	;
$859E	LDA ($1D),Y	;
$85A0	STA ($1F),Y	;
$85A2	LDY #$04	;
$85A4	LDA $0003,Y	;
$85A7	STA ($1D),Y	;
$85A9	DEY		;
$85AA	BPL $85A4	;
$85AC	RTS		;

$85AD	ORA ($02,X)	;
$85AF	.byte $03	; INVALID OPCODE !!!
$85B0	.byte $03	; INVALID OPCODE !!!
$85B1	.byte $02	; INVALID OPCODE !!!
$85B2	ORA ($FF,X)	;
$85B4	.byte $03	; INVALID OPCODE !!!
$85B5	.byte $04	; INVALID OPCODE !!!
$85B6	ORA $06  	;
$85B8	.byte $ff	; INVALID OPCODE !!!
$85B9	LDA $048D	;
$85BC	LSR A		;
$85BD	LSR A		;
$85BE	LSR A		;
$85BF	TAX		;
$85C0	LDA $048A	;
$85C3	BNE $85CB	;
$85C5	LDA $C5AD,X	;
$85C8	JMP $C5CE	; (in an if statement) 
$85CB	LDA $C5B1,X	;
$85CE	STA $87  	;
$85D0	LDX #$08	;
$85D2	JSR $E39A	;
$85D5	LDA $048C	;
$85D8	BEQ $8609	;
$85DA	LDX $048B	;
$85DD	LDA $048D	;
$85E0	CMP #$20	;
$85E2	BNE $85EA	;
$85E4	LDA #$ff	;
$85E6	STA $88,X	;
$85E8	BMI $8606	;
$85EA	BCS $8609	;
$85EC	LDA $0450	;
$85EF	BNE $85F8	;
$85F1	LDA $99  	;
$85F3	CLC		;
$85F4	ADC #$04	;
$85F6	BNE $85FD	;
$85F8	LDA $99  	;
$85FA	SEC		;
$85FB	SBC #$04	;
$85FD	STA $91,X	;
$85FF	LDA $A2  	;
$8601	SEC		;
$8602	SBC #$0a	;
$8604	STA $9A,X	;
$8606	JSR $E39A	;
$8609	RTS		;

$860A	LDA #$ff	;
$860C	STA $048B	;
$860F	LDX #$07	;
$8611	LDA $88,X	;
$8613	BMI $8621	;
$8615	LDA $9A,X	;
$8617	CMP #$b4	;
$8619	BCC $8621	;
$861B	LDA $91,X	;
$861D	CMP $99  	;
$861F	BEQ $8625	;
$8621	DEX		;
$8622	BPL $8611	;
$8624	RTS		; (within an if statement) 
$8625	STX $048B	;
$8628	LDA $0448,X	;
$862B	STA $0450	;
$862E	LDA #$00	;
$8630	STA $048A	;
$8633	STA $048D	;
$8636	STA $048C	;
$8639	STA $0489	;
$863C	LDA #$dc	;
$863E	STA $A2  	;
$8640	RTS		;

$8641	INC $99  	;
$8643	LDA $99  	;
$8645	CMP #$b1	;
$8647	BCC $864D	;
$8649	LDA #$40	;
$864B	STA $99  	;
$864D	RTS		;

$864E	LDA $0489	;
$8651	BNE $8665	;
$8653	DEC $A2  	;
$8655	LDA $A2  	;
$8657	CMP #$c4	;
$8659	BCS $8667	;
$865B	INC $A2  	;
$865D	INC $048A	;
$8660	INC $0489	;
$8663	BNE $8667	;
$8665	INC $A2  	;
$8667	INC $048D	;
$866A	LDA $048D	;
$866D	CMP #$18	;
$866F	BNE $8699	;
$8671	LDX $048B	;
$8674	LDA $88,X	;
$8676	BMI $8699	;
$8678	LDA $9A,X	;
$867A	CLC		;
$867B	ADC #$10	;
$867D	CMP $A2  	;
$867F	BCC $8699	;
$8681	LDY $0451,X	;
$8684	LDA $C6AE,Y	;
$8687	STA $0451,X	;
$868A	LDA #$00	;
$868C	STA $7F,X	;
$868E	STA $88,X	;
$8690	LDA $F2  	;
$8692	ORA #$40	;
$8694	STA $F2  	;
$8696	INC $048C	;
$8699	LDA $048A	;
$869C	BEQ $86AD	;
$869E	LDA $048D	;
$86A1	CMP #$28	;
$86A3	BEQ $86A9	;
$86A5	CMP #$30	;
$86A7	BNE $86AD	;
$86A9	LDA #$cc	;
$86AB	STA $A2  	;
$86AD	RTS		;

$86AE	PHP		;
$86AF	ORA #$0a	;
$86B1	.byte $0b	; INVALID OPCODE !!!
$86B2	PHP		;
$86B3	ORA #$0a	;
$86B5	.byte $0b	; INVALID OPCODE !!!
$86B6	PHP		;
$86B7	ORA #$0a	;
$86B9	.byte $0b	; INVALID OPCODE !!!
$86BA	LDA $0489	;
$86BD	BNE $86EE	;
$86BF	LDX $048B	;
$86C2	LDA $88,X	;
$86C4	BMI $86D6	;
$86C6	LDA $9A,X	;
$86C8	CMP #$b4	;
$86CA	BCC $86D6	;
$86CC	LDA $91,X	;
$86CE	CMP #$40	;
$86D0	BCC $86D6	;
$86D2	CMP #$b1	;
$86D4	BCC $86E4	;
$86D6	LDA #$30	;
$86D8	SEC		;
$86D9	SBC $048D	;
$86DC	STA $048D	;
$86DF	INC $0489	;
$86E2	BNE $86EE	;
$86E4	LDA $91,X	;
$86E6	STA $99  	;
$86E8	LDA $0448,X	;
$86EB	STA $0450	;
$86EE	RTS		;

$86EF	LDA $87  	;
$86F1	BPL $8703	;
$86F3	JSR $C641	;
$86F6	JSR $C60A	;
$86F9	LDA $048B	;
$86FC	BPL $86FF	;
$86FE	RTS		; (within an if statement) 
$86FF	LDA #$40	;
$8701	STA $F3  	;
$8703	JSR $C6BA	;
$8706	JSR $C64E	;
$8709	JMP $C5B9	;

$870C	LDX #$01	;
$870E	LDA #$ff	;
$8710	STA $0530,X	;
$8713	STA $0544,X	;
$8716	DEX		;
$8717	BPL $870E	;
$8719	JSR $C770	;
$871C	LDX $3C  	;
$871E	CPX #$18	;
$8720	BCC $8724	;
$8722	LDX #$18	;
$8724	LDA $C73E,X	;
$8727	STA $BA  	;
$8729	LDA $C757,X	;
$872C	STA $B8  	;
$872E	LDA #$f0	;
$8730	STA $02E0	;
$8733	STA $02E4	;
$8736	STA $02E8	;
$8739	LDA #$03	;
$873B	JMP $C84C	;

$873E	BRK		;
$873F	BRK		;
$8740	BRK		;
$8741	BRK		;
$8742	BRK		;
$8743	BRK		;
$8744	BRK		;
$8745	BRK		;
$8746	BRK		;
$8747	BRK		;
$8748	ORA ($01,X)	;
$874A	ORA ($01,X)	;
$874C	ORA ($01,X)	;
$874E	.byte $02	; INVALID OPCODE !!!
$874F	ORA ($01,X)	;
$8751	ORA ($01,X)	;
$8753	ORA ($01,X)	;
$8755	ORA ($01,X)	;
$8757	.byte $0f	; INVALID OPCODE !!!
$8758	.byte $0f	; INVALID OPCODE !!!
$8759	.byte $0c	; INVALID OPCODE !!!
$875A	.byte $0c	; INVALID OPCODE !!!
$875B	.byte $0c	; INVALID OPCODE !!!
$875C	.byte $0c	; INVALID OPCODE !!!
$875D	ASL A		;
$875E	ASL A		;
$875F	ASL A		;
$8760	ASL A		;
$8761	.byte $0c	; INVALID OPCODE !!!
$8762	.byte $0c	; INVALID OPCODE !!!
$8763	ASL A		;
$8764	ASL A		;
$8765	ASL A		;
$8766	PHP		;
$8767	ASL A		;
$8768	ASL A		;
$8769	PHP		;
$876A	PHP		;
$876B	PHP		;
$876C	PHP		;
$876D	PHP		;
$876E	PHP		;
$876F	ORA $A5  	;
$8771	.byte $a3	; INVALID OPCODE !!!
$8772	BPL $8777	;
$8774	STA $A4  	;
$8776	RTS		; (within an if statement) 
$8777	JSR $F1A9	;
$877A	CMP $A3  	;
$877C	BCC $8774	;
$877E	BEQ $8774	;
$8780	CLC		;
$8781	SBC $A3  	;
$8783	JMP $C77A	;

$8786	LDA $19  	;
$8788	AND #$7f	;
$878A	BEQ $878D	;
$878C	RTS		; (within an if statement) 
$878D	DEC $B8  	;
$878F	BNE $878C	;
$8791	LDX #$00	;
$8793	LDA $0530,X	;
$8796	BMI $87A3	;
$8798	INX		;
$8799	LDA $0530,X	;
$879C	BMI $87A3	;
$879E	LDA #$01	;
$87A0	STA $B8  	;
$87A2	RTS		; (within an if statement) 
$87A3	LDY $A4  	;
$87A5	STY $A5  	;
$87A7	BPL $87AA	;
$87A9	RTS		; (within an if statement) 
$87AA	LDA #$80	;
$87AC	STA $04B8,X	;
$87AF	STA $04CC,X	;
$87B2	LDA #$00	;
$87B4	STA $0530,X	;
$87B7	LDA $00B2,Y	;
$87BA	STA $0490,X	;
$87BD	LDA $00B5,Y	;
$87C0	STA $04A4,X	;
$87C3	LDY $BA  	;
$87C5	JSR $F1A9	;
$87C8	AND #$1f	;
$87CA	ADC $C895,Y	;
$87CD	STA $0508,X	;
$87D0	LDA $C8A1,Y	;
$87D3	STA $051C,X	;
$87D6	LDA $C89B,Y	;
$87D9	STA $04E0,X	;
$87DC	LDA $C8A7,Y	;
$87DF	STA $04F4,X	;
$87E2	JSR $F1A9	;
$87E5	AND #$03	;
$87E7	STA $0544,X	;
$87EA	TAY		;
$87EB	LDA $C88D,Y	;
$87EE	CLC		;
$87EF	ADC $0490,X	;
$87F2	STA $0490,X	;
$87F5	LDA $C891,Y	;
$87F8	CLC		;
$87F9	ADC $04A4,X	;
$87FC	STA $04A4,X	;
$87FF	LDA $C885,Y	;
$8802	BEQ $8807	;
$8804	JSR $CA33	;
$8807	LDA $C889,Y	;
$880A	BEQ $880F	;
$880C	JSR $CA4B	;
$880F	LDA $BA  	;
$8811	CMP #$05	;
$8813	BCS $8817	;
$8815	INC $BA  	;
$8817	LDA #$06	;
$8819	SEC		;
$881A	SBC $BA  	;
$881C	STA $B8  	;
$881E	LDA $F0  	;
$8820	ORA #$04	;
$8822	STA $F0  	;
$8824	JMP $C770	;

$8827	LDA $B8  	;
$8829	CMP #$01	;
$882B	BNE $8880	;
$882D	LDA $0530	;
$8830	BMI $883C	;
$8832	LDA $0531	;
$8835	BMI $883C	;
$8837	LDA #$02	;
$8839	STA $B8  	;
$883B	RTS		; (within an if statement) 
$883C	LDA $19  	;
$883E	AND #$7f	;
$8840	CMP #$40	;
$8842	BCC $8880	;
$8844	BNE $884C	;
$8846	LDA $F1  	;
$8848	ORA #$08	;
$884A	STA $F1  	;
$884C	AND #$03	;
$884E	TAX		;
$884F	LDA $C881,X	;
$8852	STA $5A  	;
$8854	LDX $A4  	;
$8856	BMI $8880	;
$8858	LDA #$23	;
$885A	STA $57  	;
$885C	LDA $A6,X	;
$885E	STA $58  	;
$8860	LDA #$01	;
$8862	STA $59  	;
$8864	JSR $C879	;
$8867	LDA $A9,X	;
$8869	STA $58  	;
$886B	JSR $C879	;
$886E	LDA $AC,X	;
$8870	STA $58  	;
$8872	JSR $C879	;
$8875	LDA $AF,X	;
$8877	STA $58  	;
$8879	LDA #$57	;
$887B	LDY #$00	;
$887D	JMP $C127	; (in an if statement) 
$8880	RTS		;

$8881	EOR $FF,X	;
$8883	BRK		;
$8884	.byte $ff	; INVALID OPCODE !!!
$8885	BRK		;
$8886	BRK		;
$8887	.byte $ff	; INVALID OPCODE !!!
$8888	.byte $ff	; INVALID OPCODE !!!
$8889	.byte $ff	; INVALID OPCODE !!!
$888A	BRK		;
$888B	BRK		;
$888C	.byte $ff	; INVALID OPCODE !!!
$888D	BPL $889F	;
$888F	BEQ $8881	;
$8891	DEC $2222,X	;
$8894	DEC $7060,X	; saved-to-battery RAM 
$8897	.byte $80	; INVALID OPCODE !!!
$8898	BCC $883A	;
$889A	BCS $889C	;
$889C	BRK		;
$889D	BRK		;
$889E	BRK		;
$889F	BRK		;
$88A0	BRK		;
$88A1	CPY #$f0	;
$88A3	JSR $8050	;
$88A6	BCS $88A8	;
$88A8	BRK		;
$88A9	ORA ($01,X)	;
$88AB	ORA ($01,X)	;
$88AD	LDX #$01	;
$88AF	LDA $0530,X	;
$88B2	BPL $88B7	;
$88B4	JMP $C9A5	; (in an if statement) 
$88B7	LDA $0544,X	;
$88BA	BMI $8937	;
$88BC	TAY		;
$88BD	TXA		;
$88BE	PHA		;
$88BF	LDX $A5  	;
$88C1	LDA $B2,X	;
$88C3	ADC $C9DB,Y	;
$88C6	STA $02E3	;
$88C9	STA $02E7	;
$88CC	STA $02EB	;
$88CF	LDA $B5,X	;
$88D1	ADC $C9EB,Y	;
$88D4	STA $02E0	;
$88D7	ADC $C9FB,Y	;
$88DA	STA $02E4	;
$88DD	ADC $C9FB,Y	;
$88E0	STA $02E8	;
$88E3	TYA		;
$88E4	AND #$03	;
$88E6	TAX		;
$88E7	TYA		;
$88E8	LSR A		;
$88E9	LSR A		;
$88EA	TAY		;
$88EB	LDA $19  	;
$88ED	LSR A		;
$88EE	LSR A		;
$88EF	BCS $88F5	;
$88F1	TYA		;
$88F2	ADC #$05	;
$88F4	TAY		;
$88F5	LDA $CA0B,Y	;
$88F8	STA $02E1	;
$88FB	LDA $CA15,Y	;
$88FE	STA $02E5	;
$8901	LDA $CA1F,Y	;
$8904	STA $02E9	;
$8907	LDA $CA29,X	;
$890A	STA $02E2	;
$890D	STA $02E6	;
$8910	STA $02EA	;
$8913	PLA		;
$8914	TAX		;
$8915	LDA $19  	;
$8917	AND #$07	;
$8919	BNE $892D	;
$891B	LDA $0544,X	;
$891E	CLC		;
$891F	ADC #$04	;
$8921	STA $0544,X	;
$8924	CMP #$14	;
$8926	BCC $892D	;
$8928	LDA #$ff	;
$892A	STA $0544,X	;
$892D	LDA $0544,X	;
$8930	CMP #$10	;
$8932	BCS $8937	;
$8934	JMP $C9A5	; (in an if statement) 
$8937	JSR $C9AC	;
$893A	LDA $0490,X	;
$893D	CMP #$02	;
$893F	BCS $8944	;
$8941	JSR $CA2D	;
$8944	LDA $0490,X	;
$8947	CMP #$f7	;
$8949	BCC $894E	;
$894B	JSR $CA2D	;
$894E	LDA $04A4,X	;
$8951	CMP #$02	;
$8953	BCS $8958	;
$8955	JSR $CA45	;
$8958	LDA $04A4,X	;
$895B	CMP #$e0	;
$895D	BCC $896C	;
$895F	LDA #$ff	;
$8961	STA $0530,X	;
$8964	LDA #$f0	;
$8966	STA $04A4,X	;
$8969	JMP $C9A5	; (in an if statement) 
$896C	JSR $CA5D	;
$896F	JSR $CB12	;
$8972	LDY $0530,X	;
$8975	INY		;
$8976	TYA		;
$8977	AND #$07	;
$8979	STA $0530,X	;
$897C	LDY $0530,X	;
$897F	LDA $C9D3,Y	;
$8982	STA $12  	;
$8984	TXA		;
$8985	ASL A		;
$8986	ASL A		;
$8987	CLC		;
$8988	TAY		;
$8989	LDA $04A4,X	;
$898C	CMP #$d0	;
$898E	STA $0200,Y	;
$8991	LDA $0490,X	;
$8994	STA $0203,Y	;
$8997	LDA $12  	;
$8999	STA $0201,Y	;
$899C	LDA #$00	;
$899E	BCC $89A2	;
$89A0	LDA #$20	;
$89A2	STA $0202,Y	;
$89A5	DEX		;
$89A6	BMI $89AB	;
$89A8	JMP $C8AF	; (in an if statement) 
$89AB	RTS		;

$89AC	LDA $0508,X	;
$89AF	CLC		;
$89B0	ADC $04B8,X	;
$89B3	STA $04B8,X	;
$89B6	LDA $04E0,X	;
$89B9	ADC $0490,X	;
$89BC	STA $0490,X	;
$89BF	LDA $051C,X	;
$89C2	CLC		;
$89C3	ADC $04CC,X	;
$89C6	STA $04CC,X	;
$89C9	LDA $04F4,X	;
$89CC	ADC $04A4,X	;
$89CF	STA $04A4,X	;
$89D2	RTS		;

$89D3	STA $9F9E,X	;
$89D6	.byte $9e	; INVALID OPCODE !!!
$89D7	STA $A1A0,X	;
$89DA	LDY #$08	;
$89DC	PHP		;
$89DD	BEQ $89CF	;
$89DF	PHP		;
$89E0	PHP		;
$89E1	BEQ $89D3	;
$89E3	PHP		;
$89E4	PHP		;
$89E5	BEQ $89D7	;
$89E7	PHP		;
$89E8	PHP		;
$89E9	BEQ $89DB	;
$89EB	INC $0A0A	;
$89EE	INC $0AEE	;
$89F1	ASL A		;
$89F2	INC $0AEE	;
$89F5	ASL A		;
$89F6	INC $0AEE	;
$89F9	ASL A		;
$89FA	INC $08F8	;
$89FD	PHP		;
$89FE	SED		;
$89FF	SED		;
$8A00	PHP		;
$8A01	PHP		;
$8A02	SED		;
$8A03	SED		;
$8A04	PHP		;
$8A05	PHP		;
$8A06	SED		;
$8A07	SED		;
$8A08	PHP		;
$8A09	PHP		;
$8A0A	SED		;
$8A0B	STA ($93),Y	;
$8A0D	.byte $97	; INVALID OPCODE !!!
$8A0E	.byte $97	; INVALID OPCODE !!!
$8A0F	.byte $fc	; INVALID OPCODE !!!
$8A10	.byte $92	; INVALID OPCODE !!!
$8A11	STA $9A,X	;
$8A13	TXS		;
$8A14	.byte $fc	; INVALID OPCODE !!!
$8A15	.byte $fc	; INVALID OPCODE !!!
$8A16	STY $98,X	;
$8A18	TYA		;
$8A19	.byte $fc	; INVALID OPCODE !!!
$8A1A	.byte $fc	; INVALID OPCODE !!!
$8A1B	STX $9B,Y 	;
$8A1D	.byte $9b	; INVALID OPCODE !!!
$8A1E	.byte $fc	; INVALID OPCODE !!!
$8A1F	.byte $fc	; INVALID OPCODE !!!
$8A20	.byte $fc	; INVALID OPCODE !!!
$8A21	STA $FC99,Y	;
$8A24	.byte $fc	; INVALID OPCODE !!!
$8A25	.byte $fc	; INVALID OPCODE !!!
$8A26	.byte $9c	; INVALID OPCODE !!!
$8A27	.byte $9c	; INVALID OPCODE !!!
$8A28	.byte $fc	; INVALID OPCODE !!!
$8A29	CPY #$40	;
$8A2B	BRK		;
$8A2C	.byte $80	; INVALID OPCODE !!!
$8A2D	LDA $F3  	;
$8A2F	ORA #$80	;
$8A31	STA $F3  	;
$8A33	LDA #$00	;
$8A35	SEC		;
$8A36	SBC $0508,X	;
$8A39	STA $0508,X	;
$8A3C	LDA #$00	;
$8A3E	SBC $04E0,X	;
$8A41	STA $04E0,X	;
$8A44	RTS		;

$8A45	LDA $F3  	;
$8A47	ORA #$80	;
$8A49	STA $F3  	;
$8A4B	LDA #$00	;
$8A4D	SEC		;
$8A4E	SBC $051C,X	;
$8A51	STA $051C,X	;
$8A54	LDA #$00	;
$8A56	SBC $04F4,X	;
$8A59	STA $04F4,X	;
$8A5C	RTS		;

$8A5D	LDY $CD  	;
$8A5F	LDA #$00	;
$8A61	STA $CC  	;
$8A63	LDA ($27),Y	;
$8A65	SEC		;
$8A66	SBC #$08	;
$8A68	CMP $04A4,X	;
$8A6B	BCS $8AD3	;
$8A6D	ADC #$03	;
$8A6F	CMP $04A4,X	;
$8A72	BCC $8A78	;
$8A74	LDA #$01	;
$8A76	BNE $8A88	;
$8A78	LDA ($29),Y	;
$8A7A	CMP $04A4,X	;
$8A7D	BCC $8AD3	;
$8A7F	SBC #$03	;
$8A81	CMP $04A4,X	;
$8A84	BCS $8AA3	;
$8A86	LDA #$02	;
$8A88	STA $CC  	;
$8A8A	LDA ($23),Y	;
$8A8C	CMP #$10	;
$8A8E	BEQ $8A98	;
$8A90	SEC		;
$8A91	SBC #$04	;
$8A93	CMP $0490,X	;
$8A96	BCS $8A9F	;
$8A98	LDA ($25),Y	;
$8A9A	CMP $0490,X	;
$8A9D	BCS $8AA3	;
$8A9F	LDA #$00	;
$8AA1	STA $CC  	;
$8AA3	LDA ($23),Y	;
$8AA5	CMP #$10	;
$8AA7	BEQ $8ABE	;
$8AA9	SEC		;
$8AAA	SBC #$08	;
$8AAC	CMP $0490,X	;
$8AAF	BCS $8AD3	;
$8AB1	ADC #$03	;
$8AB3	CMP $0490,X	;
$8AB6	BCC $8ABE	;
$8AB8	LDA $CC  	;
$8ABA	ORA #$04	;
$8ABC	BNE $8AD1	;
$8ABE	LDA ($25),Y	;
$8AC0	CMP #$ff	;
$8AC2	BEQ $8AD3	;
$8AC4	CMP $0490,X	;
$8AC7	BCC $8AD3	;
$8AC9	SBC #$03	;
$8ACB	BCS $8AD3	;
$8ACD	LDA $CC  	;
$8ACF	ORA #$08	;
$8AD1	STA $CC  	;
$8AD3	LDA $CC  	;
$8AD5	BNE $8ADE	;
$8AD7	DEY		;
$8AD8	BMI $8ADD	;
$8ADA	JMP $CA5F	; (in an if statement) 
$8ADD	RTS		; (within an if statement) 
$8ADE	LSR $CC  	;
$8AE0	BCC $8AEA	;
$8AE2	LDA $04F4,X	;
$8AE5	BMI $8AEA	;
$8AE7	JSR $CA45	;
$8AEA	LSR $CC  	;
$8AEC	BCC $8AF6	;
$8AEE	LDA $04F4,X	;
$8AF1	BPL $8AF6	;
$8AF3	JSR $CA45	;
$8AF6	LSR $CC  	;
$8AF8	BCC $8B02	;
$8AFA	LDA $04E0,X	;
$8AFD	BMI $8B02	;
$8AFF	JSR $CA2D	;
$8B02	LSR $CC  	;
$8B04	BCC $8B0E	;
$8B06	LDA $04E0,X	;
$8B09	BPL $8B0E	;
$8B0B	JSR $CA2D	;
$8B0E	JMP $CAD7	;

$8B11	RTS		;

$8B12	LDY #$01	;
$8B14	LDA $0088,Y	;
$8B17	BMI $8B66	;
$8B19	BEQ $8B66	;
$8B1B	LDA $00BD,Y	;
$8B1E	BNE $8B66	;
$8B20	LDA $0490,X	;
$8B23	SEC		;
$8B24	SBC $0091,Y	;
$8B27	JSR $F084	;
$8B2A	CMP #$08	;
$8B2C	BCS $8B66	;
$8B2E	LDA $04A4,X	;
$8B31	SEC		;
$8B32	SBC $009A,Y	;
$8B35	SEC		;
$8B36	SBC #$08	;
$8B38	JSR $F084	;
$8B3B	CMP #$0c	;
$8B3D	BCS $8B66	;
$8B3F	LDA #$00	;
$8B41	STA $0088,Y	;
$8B44	LDA #$01	;
$8B46	STA $007F,Y	;
$8B49	STA $00C1,Y	;
$8B4C	LDA #$0b	;
$8B4E	STA $0451,Y	;
$8B51	LDA #$20	;
$8B53	STA $045A,Y	;
$8B56	LDA $F0  	;
$8B58	ORA #$80	;
$8B5A	STA $F0  	;
$8B5C	LDA #$f0	;
$8B5E	STA $04A4,X	;
$8B61	LDA #$ff	;
$8B63	STA $0530,X	;
$8B66	DEY		;
$8B67	BPL $8B14	;
$8B69	RTS		;

$8B6A	LDX $05D1	;
$8B6D	BMI $8B9D	;
$8B6F	JSR $CB9E	;
$8B72	LDA $0604,X	;
$8B75	BEQ $8B9A	;
$8B77	TXA		;
$8B78	EOR $19  	;
$8B7A	AND #$01	;
$8B7C	BNE $8B9A	;
$8B7E	LDY $05FA,X	;
$8B81	INY		;
$8B82	TYA		;
$8B83	AND #$03	;
$8B85	STA $05FA,X	;
$8B88	JSR $CCC1	;
$8B8B	LDA $05FA,X	;
$8B8E	CMP #$01	;
$8B90	BNE $8B9A	;
$8B92	DEC $060E,X	;
$8B95	BNE $8B9A	;
$8B97	DEC $0604,X	;
$8B9A	DEX		;
$8B9B	BPL $8B6F	;
$8B9D	RTS		;

$8B9E	LDY #$07	;
$8BA0	LDA $0604,X	;
$8BA3	BNE $8BA8	;
$8BA5	JMP $CC30	; (in an if statement) 
$8BA8	LDA $0088,Y	;
$8BAB	BMI $8C25	;
$8BAD	BEQ $8C25	;
$8BAF	CPY #$02	;
$8BB1	BCC $8BB7	;
$8BB3	CMP #$01	;
$8BB5	BEQ $8C25	;
$8BB7	LDA $0091,Y	;
$8BBA	CLC		;
$8BBB	ADC #$08	;
$8BBD	SEC		;
$8BBE	SBC $05D2,X	;
$8BC1	STA $12  	;
$8BC3	JSR $F084	;
$8BC6	CMP #$12	;
$8BC8	BCS $8C25	;
$8BCA	LDA $009A,Y	;
$8BCD	CLC		;
$8BCE	ADC #$0c	;
$8BD0	SEC		;
$8BD1	SBC $05DC,X	;
$8BD4	STA $13  	;
$8BD6	JSR $F084	;
$8BD9	CMP #$12	;
$8BDB	BCS $8C25	;
$8BDD	LDA $12  	;
$8BDF	BMI $8BF2	;
$8BE1	CMP #$03	;
$8BE3	BCC $8C01	;
$8BE5	LDA #$02	;
$8BE7	STA $041B,Y	;
$8BEA	JSR $CC29	;
$8BED	JSR $EBB1	;
$8BF0	BNE $8C01	;
$8BF2	CMP #$fd	;
$8BF4	BCS $8C01	;
$8BF6	LDA #$fe	;
$8BF8	STA $041B,Y	;
$8BFB	JSR $EBB1	;
$8BFE	JSR $CC29	;
$8C01	LDA $13  	;
$8C03	BMI $8C16	;
$8C05	CMP #$03	;
$8C07	BCC $8C25	;
$8C09	LDA #$02	;
$8C0B	STA $042D,Y	;
$8C0E	JSR $EBA8	;
$8C11	JSR $CC29	;
$8C14	BNE $8C25	;
$8C16	CMP #$fd	;
$8C18	BCS $8C25	;
$8C1A	LDA #$fe	;
$8C1C	STA $042D,Y	;
$8C1F	JSR $EBA8	;
$8C22	JSR $CC29	;
$8C25	DEY		;
$8C26	BPL $8BA8	;
$8C28	RTS		;

$8C29	LDA $F1  	;
$8C2B	ORA #$02	;
$8C2D	STA $F1  	;
$8C2F	RTS		;

$8C30	LDA $0088,Y	;
$8C33	BMI $8CAE	;
$8C35	BEQ $8CAE	;
$8C37	CPY #$02	;
$8C39	BCC $8C69	;
$8C3B	LDA $05FA,X	;
$8C3E	CMP #$03	;
$8C40	BNE $8C69	;
$8C42	LDA $05D2,X	;
$8C45	SEC		;
$8C46	SBC #$0a	;
$8C48	CMP $0091,Y	;
$8C4B	BCS $8C69	;
$8C4D	ADC #$04	;
$8C4F	CMP $0091,Y	;
$8C52	BCC $8C69	;
$8C54	LDA $05DC,X	;
$8C57	SEC		;
$8C58	SBC #$1c	;
$8C5A	CMP $009A,Y	;
$8C5D	BCS $8C69	;
$8C5F	ADC #$04	;
$8C61	CMP $009A,Y	;
$8C64	BCC $8C69	;
$8C66	JSR $CCB5	;
$8C69	LDA $0091,Y	;
$8C6C	CLC		;
$8C6D	ADC #$08	;
$8C6F	SEC		;
$8C70	SBC $05D2,X	;
$8C73	JSR $F084	;
$8C76	STA $12  	;
$8C78	LDA $009A,Y	;
$8C7B	CLC		;
$8C7C	ADC #$0c	;
$8C7E	SEC		;
$8C7F	SBC $05DC,X	;
$8C82	JSR $F084	;
$8C85	STA $13  	;
$8C87	LDA $05FA,X	;
$8C8A	CMP #$03	;
$8C8C	BEQ $8C98	;
$8C8E	LDA $12  	;
$8C90	PHA		;
$8C91	LDA $13  	;
$8C93	STA $12  	;
$8C95	PLA		;
$8C96	STA $13  	;
$8C98	LDA $12  	;
$8C9A	CMP #$14	;
$8C9C	BCS $8CAE	;
$8C9E	LDA $13  	;
$8CA0	CMP #$0b	;
$8CA2	BCS $8CAE	;
$8CA4	LDA #$01	;
$8CA6	STA $0604,X	;
$8CA9	LDA #$32	;
$8CAB	STA $060E,X	;
$8CAE	DEY		;
$8CAF	BMI $8CB4	;
$8CB1	JMP $CC30	; (in an if statement) 
$8CB4	RTS		;

$8CB5	TXA		;
$8CB6	PHA		;
$8CB7	TYA		;
$8CB8	TAX		;
$8CB9	INC $CB  	;
$8CBB	JSR $E979	;
$8CBE	PLA		;
$8CBF	TAX		;
$8CC0	RTS		;

$8CC1	LDA $05F0,X	;
$8CC4	STA $57  	;
$8CC6	LDA $05E6,X	;
$8CC9	STA $58  	;
$8CCB	LDA #$03	;
$8CCD	STA $59  	;
$8CCF	LDY $05FA,X	;
$8CD2	LDA $CD1C,Y	;
$8CD5	STA $5A  	;
$8CD7	LDA $CD20,Y	;
$8CDA	STA $5B  	;
$8CDC	LDA $CD24,Y	;
$8CDF	STA $5C  	;
$8CE1	JSR $CD05	;
$8CE4	LDA $CD28,Y	;
$8CE7	STA $5A  	;
$8CE9	LDA $CD2C,Y	;
$8CEC	STA $5B  	;
$8CEE	LDA $CD30,Y	;
$8CF1	STA $5C  	;
$8CF3	JSR $CD05	;
$8CF6	LDA $CD34,Y	;
$8CF9	STA $5A  	;
$8CFB	LDA $CD38,Y	;
$8CFE	STA $5B  	;
$8D00	LDA $CD3C,Y	;
$8D03	STA $5C  	;
$8D05	TYA		;
$8D06	PHA		;
$8D07	LDA #$57	;
$8D09	LDY #$00	;
$8D0B	JSR $C127	;
$8D0E	PLA		;
$8D0F	TAY		;
$8D10	LDA $58  	;
$8D12	CLC		;
$8D13	ADC #$20	;
$8D15	STA $58  	;
$8D17	BCC $8D1B	;
$8D19	INC $57  	;
$8D1B	RTS		;

$8D1C	LDA ($24,X)	;
$8D1E	BIT $24  	;
$8D20	LDX #$9e	;
$8D22	.byte $ab	; INVALID OPCODE !!!
$8D23	BIT $24  	;
$8D25	BIT $AC  	;
$8D27	BIT $A3  	;
$8D29	BIT $AD  	;
$8D2B	TAY		;
$8D2C	LDY $9F  	;
$8D2E	LDX $A5A9	;
$8D31	BIT $AF  	;
$8D33	TAX		;
$8D34	BIT $24  	;
$8D36	BCS $8D5C	;
$8D38	LDX $A0  	;
$8D3A	LDA ($24),Y	;
$8D3C	.byte $a7	; INVALID OPCODE !!!
$8D3D	BIT $24  	;
$8D3F	BIT $A2  	;
$8D41	ORA #$a9	;
$8D43	.byte $ff	; INVALID OPCODE !!!
$8D44	STA $055D,X	;
$8D47	LDA #$f0	;
$8D49	STA $057B,X	;
$8D4C	DEX		;
$8D4D	BPL $8D42	;
$8D4F	RTS		; (within an if statement) 
$8D50	DEC $05CC	;
$8D53	BEQ $8D56	;
$8D55	RTS		; (within an if statement) 
$8D56	LDA $1B  	;
$8D58	AND #$3f	;
$8D5A	ADC #$28	;
$8D5C	STA $05CC	;
$8D5F	LDX #$09	;
$8D61	LDA $055D,X	;
$8D64	BMI $8D6A	;
$8D66	DEX		;
$8D67	BPL $8D61	;
$8D69	RTS		; (within an if statement) 
$8D6A	LDA #$00	;
$8D6C	STA $055D,X	;
$8D6F	STA $0599,X	;
$8D72	STA $058F,X	;
$8D75	LDA #$80	;
$8D77	STA $0571,X	;
$8D7A	STA $0585,X	;
$8D7D	LDA #$d0	;
$8D7F	STA $057B,X	;
$8D82	JSR $F1A9	;
$8D85	AND #$03	;
$8D87	TAY		;
$8D88	LDA $CEA4,Y	;
$8D8B	STA $0567,X	;
$8D8E	LDY #$00	;
$8D90	LDA $1B  	;
$8D92	STA $05B7,X	;
$8D95	BPL $8D98	;
$8D97	DEY		;
$8D98	TYA		;
$8D99	STA $05C1,X	;
$8D9C	DEC $05CB	;
$8D9F	RTS		;

$8DA0	LDX #$09	;
$8DA2	LDA $055D,X	;
$8DA5	BMI $8E18	;
$8DA7	BEQ $8DF2	;
$8DA9	LDA $0599,X	;
$8DAC	STA $12  	;
$8DAE	LDA $058F,X	;
$8DB1	STA $13  	;
$8DB3	JSR $F19C	;
$8DB6	LDA $05B7,X	;
$8DB9	CLC		;
$8DBA	ADC $12  	;
$8DBC	STA $05B7,X	;
$8DBF	STA $12  	;
$8DC1	LDA $05C1,X	;
$8DC4	ADC $13  	;
$8DC6	STA $05C1,X	;
$8DC9	STA $13  	;
$8DCB	JSR $F19C	;
$8DCE	LDA $0599,X	;
$8DD1	SEC		;
$8DD2	SBC $12  	;
$8DD4	STA $0599,X	;
$8DD7	LDA $058F,X	;
$8DDA	SBC $13  	;
$8DDC	STA $058F,X	;
$8DDF	LDA $0571,X	;
$8DE2	CLC		;
$8DE3	ADC $0599,X	;
$8DE6	STA $0571,X	;
$8DE9	LDA $0567,X	;
$8DEC	ADC $058F,X	;
$8DEF	STA $0567,X	;
$8DF2	LDA $0585,X	;
$8DF5	SEC		;
$8DF6	SBC $055A	;
$8DF9	STA $0585,X	;
$8DFC	BCS $8E01	;
$8DFE	DEC $057B,X	;
$8E01	LDA $057B,X	;
$8E04	CMP #$f0	;
$8E06	BEQ $8E13	;
$8E08	CMP #$a8	;
$8E0A	BCS $8E18	;
$8E0C	LDA #$01	;
$8E0E	STA $055D,X	;
$8E11	BNE $8E18	;
$8E13	LDA #$ff	;
$8E15	STA $055D,X	;
$8E18	JSR $CE25	;
$8E1B	JSR $CEC4	;
$8E1E	DEX		;
$8E1F	BMI $8E24	;
$8E21	JMP $CDA2	; (in an if statement) 
$8E24	RTS		;

$8E25	LDY $055D,X	;
$8E28	INY		;
$8E29	LDA $CEA8,Y	;
$8E2C	STA $13  	;
$8E2E	TXA		;
$8E2F	STA $12  	;
$8E31	ASL A		;
$8E32	ADC $12  	;
$8E34	ASL A		;
$8E35	ASL A		;
$8E36	TAY		;
$8E37	LDA $057B,X	;
$8E3A	STA $0250,Y	;
$8E3D	STA $0254,Y	;
$8E40	CLC		;
$8E41	ADC #$08	;
$8E43	STA $0258,Y	;
$8E46	LDA $0567,X	;
$8E49	STA $0253,Y	;
$8E4C	CLC		;
$8E4D	ADC #$04	;
$8E4F	STA $025B,Y	;
$8E52	CLC		;
$8E53	ADC #$04	;
$8E55	STA $0257,Y	;
$8E58	LDA $13  	;
$8E5A	STA $0252,Y	;
$8E5D	STA $0256,Y	;
$8E60	STA $025A,Y	;
$8E63	LDA $055D,X	;
$8E66	BMI $8E8F	;
$8E68	LDA #$a8	;
$8E6A	STA $0251,Y	;
$8E6D	LDA #$a9	;
$8E6F	STA $0255,Y	;
$8E72	LDA $19  	;
$8E74	LSR A		;
$8E75	LSR A		;
$8E76	LSR A		;
$8E77	LSR A		;
$8E78	AND #$07	;
$8E7A	STX $13  	;
$8E7C	TAX		;
$8E7D	LDA $CEAB,X	;
$8E80	STA $0259,Y	;
$8E83	LDA $025A,Y	;
$8E86	EOR $CEB3,X	;
$8E89	STA $025A,Y	;
$8E8C	LDX $13  	;
$8E8E	RTS		; (within an if statement) 
$8E8F	LDA #$f0	;
$8E91	STA $057B,X	;
$8E94	LDA #$ac	;
$8E96	STA $0251,Y	;
$8E99	LDA #$ad	;
$8E9B	STA $0255,Y	;
$8E9E	LDA #$fc	;
$8EA0	STA $0259,Y	;
$8EA3	RTS		;

$8EA4	JSR $A050	;
$8EA7	BNE $8EAB	;
$8EA9	.byte $22	; INVALID OPCODE !!!
$8EAA	.byte $02	; INVALID OPCODE !!!
$8EAB	TAX		;
$8EAC	.byte $ab	; INVALID OPCODE !!!
$8EAD	.byte $ab	; INVALID OPCODE !!!
$8EAE	TAX		;
$8EAF	TAX		;
$8EB0	.byte $ab	; INVALID OPCODE !!!
$8EB1	.byte $ab	; INVALID OPCODE !!!
$8EB2	TAX		;
$8EB3	BRK		;
$8EB4	BRK		;
$8EB5	RTI		;

$8EB6	RTI		;

$8EB7	RTI		;

$8EB8	RTI		;

$8EB9	BRK		;
$8EBA	BRK		;
$8EBB	.byte $fc	; INVALID OPCODE !!!
$8EBC	.byte $fc	; INVALID OPCODE !!!
$8EBD	.byte $df	; INVALID OPCODE !!!
$8EBE	.byte $fc	; INVALID OPCODE !!!
$8EBF	.byte $fc	; INVALID OPCODE !!!
$8EC0	CPX #$e2	;
$8EC2	SBC ($FC,X)	;
$8EC4	LDY #$01	;
$8EC6	LDA $0088,Y	;
$8EC9	BMI $8F05	;
$8ECB	BEQ $8F05	;
$8ECD	LDA $055D,X	;
$8ED0	BMI $8F08	;
$8ED2	LDA $009A,Y	;
$8ED5	CMP #$c0	;
$8ED7	BCS $8F05	;
$8ED9	SEC		;
$8EDA	SBC $057B,X	;
$8EDD	JSR $F084	;
$8EE0	CMP #$18	;
$8EE2	BCS $8F05	;
$8EE4	LDA $0091,Y	;
$8EE7	SEC		;
$8EE8	SBC $0567,X	;
$8EEB	JSR $F084	;
$8EEE	CMP #$10	;
$8EF0	BCS $8F05	;
$8EF2	LDA #$ff	;
$8EF4	STA $055D,X	;
$8EF7	LDA $05CD,Y	;
$8EFA	CLC		;
$8EFB	ADC #$01	;
$8EFD	STA $05CD,Y	;
$8F00	LDA #$02	;
$8F02	STA $F0  	;
$8F04	RTS		; (within an if statement) 
$8F05	DEY		;
$8F06	BPL $8EC6	;
$8F08	RTS		;

$8F09	LDA #$20	;
$8F0B	STA $F2  	;
$8F0D	JSR $D0D8	;
$8F10	JSR $CD40	;
$8F13	LDX $40  	;
$8F15	LDA $41,X	;
$8F17	BMI $8F1C	;
$8F19	JSR $F3A6	;
$8F1C	DEX		;
$8F1D	BPL $8F15	;
$8F1F	LDX #$00	;
$8F21	STX $BD  	;
$8F23	STX $BE  	;
$8F25	LDA #$14	;
$8F27	STA $05CB	;
$8F2A	JSR $F466	;
$8F2D	INC $4C  	;
$8F2F	JSR $D8D3	;
$8F32	JSR $E687	;
$8F35	LDA $05CB	;
$8F38	BEQ $8F3D	;
$8F3A	JSR $CD50	;
$8F3D	JSR $CDA0	;
$8F40	LDA $05CB	;
$8F43	BNE $8F2A	;
$8F45	LDX #$09	;
$8F47	LDA $055D,X	;
$8F4A	BPL $8F2A	;
$8F4C	DEX		;
$8F4D	BPL $8F47	;
$8F4F	LDA $19  	;
$8F51	BNE $8F2A	;
$8F53	JSR $D23C	;
$8F56	LDX #$02	;
$8F58	STX $46  	;
$8F5A	JSR $F454	;
$8F5D	LDA #$21	;
$8F5F	LDY #$d1	;
$8F61	JSR $C127	;
$8F64	LDA #$50	;
$8F66	LDY #$d1	;
$8F68	JSR $C127	;
$8F6B	LDA #$5b	;
$8F6D	LDY #$d1	;
$8F6F	JSR $C127	;
$8F72	LDX $40  	;
$8F74	LDA #$20	;
$8F76	STA $91,X	;
$8F78	LDA $D194,X	;
$8F7B	STA $9A,X	;
$8F7D	LDA #$03	;
$8F7F	STA $7F,X	;
$8F81	LDA #$01	;
$8F83	STA $0448,X	;
$8F86	JSR $F3A6	;
$8F89	JSR $E39A	;
$8F8C	DEX		;
$8F8D	BPL $8F74	;
$8F8F	LDA #$44	;
$8F91	STA $0567	;
$8F94	STA $0568	;
$8F97	LDA #$54	;
$8F99	STA $057B	;
$8F9C	LDA #$74	;
$8F9E	STA $057C	;
$8FA1	LDA #$01	;
$8FA3	STA $055D	;
$8FA6	STA $055E	;
$8FA9	LDX $40  	;
$8FAB	JSR $CE25	;
$8FAE	DEX		;
$8FAF	BPL $8FAB	;
$8FB1	JSR $F452	;
$8FB4	LDA #$2b	;
$8FB6	STA $57  	;
$8FB8	LDA #$24	;
$8FBA	STA $58  	;
$8FBC	STA $59  	;
$8FBE	LDA #$0c	;
$8FC0	STA $54  	;
$8FC2	LDA #$0b	;
$8FC4	STA $55  	;
$8FC6	LDA #$05	;
$8FC8	STA $56  	;
$8FCA	LDA $05CD	;
$8FCD	JSR $D1BF	;
$8FD0	LDA $40  	;
$8FD2	BEQ $8FDE	;
$8FD4	LDA #$0f	;
$8FD6	STA $55  	;
$8FD8	LDA $05CE	;
$8FDB	JSR $D1BF	;
$8FDE	JSR $F452	;
$8FE1	LDA $0559	;
$8FE4	STA $57  	;
$8FE6	LDA #$00	;
$8FE8	STA $58  	;
$8FEA	STA $59  	;
$8FEC	LDA #$08	;
$8FEE	STA $54  	;
$8FF0	LDA #$0b	;
$8FF2	STA $55  	;
$8FF4	LDA #$03	;
$8FF6	STA $56  	;
$8FF8	LDA $0559	;
$8FFB	JSR $C10F	;
$8FFE	LDA $40  	;
$9000	BEQ $9009	;
$9002	LDA #$0f	;
$9004	STA $55  	;
$9006	JSR $C10F	;
$9009	LDA #$ff	;
$900B	STA $055D	;
$900E	STA $055E	;
$9011	LDX $40  	;
$9013	JSR $CE25	;
$9016	DEX		;
$9017	BPL $9013	;
$9019	LDA #$02	;
$901B	STA $F0  	;
$901D	LDX #$02	;
$901F	JSR $F454	;
$9022	LDX $40  	;
$9024	JSR $CE25	;
$9027	DEX		;
$9028	BPL $9024	;
$902A	JSR $D196	;
$902D	JSR $F452	;
$9030	LDA #$01	;
$9032	STA $F0  	;
$9034	JSR $D117	;
$9037	BNE $905E	;
$9039	LDA #$66	;
$903B	LDY #$d1	;
$903D	JSR $C127	;
$9040	JSR $F45B	;
$9043	LDX #$1a	;
$9045	LDA $D17A,X	;
$9048	STA $57,X	;
$904A	DEX		;
$904B	BPL $9045	;
$904D	LDA $055B	;
$9050	STA $68  	;
$9052	LDA $055C	;
$9055	STA $69  	;
$9057	JSR $C123	;
$905A	LDA #$10	;
$905C	STA $F2  	;
$905E	LDX #$78	;
$9060	JSR $F454	;
$9063	JSR $D196	;
$9066	LDA #$00	;
$9068	STA $3E  	;
$906A	LDX #$04	;
$906C	JSR $D209	;
$906F	JSR $C123	;
$9072	LDA $40  	;
$9074	BEQ $9084	;
$9076	INC $3E  	;
$9078	LDX #$12	;
$907A	JSR $D209	;
$907D	LDA #$65	;
$907F	LDY #$00	;
$9081	JSR $C127	;
$9084	LDA #$01	;
$9086	STA $F1  	;
$9088	LDX #$02	;
$908A	JSR $F454	;
$908D	LDA $5D  	;
$908F	CMP #$24	;
$9091	BNE $9066	;
$9093	LDA $40  	;
$9095	BEQ $909E	;
$9097	LDA $006B	;
$909A	CMP #$24	;
$909C	BNE $9066	;
$909E	LDX #$0a	;
$90A0	JSR $F454	;
$90A3	JSR $D117	;
$90A6	BNE $90C4	;
$90A8	LDA $055B	;
$90AB	STA $47  	;
$90AD	LDA $055C	;
$90B0	STA $48  	;
$90B2	LDA $40  	;
$90B4	STA $3E  	;
$90B6	JSR $D6D2	;
$90B9	DEC $3E  	;
$90BB	BPL $90B6	;
$90BD	LDA #$01	;
$90BF	STA $F1  	;
$90C1	JSR $F452	;
$90C4	LDA #$00	;
$90C6	STA $47  	;
$90C8	STA $48  	;
$90CA	LDX #$01	;
$90CC	LDA $41,X	;
$90CE	BPL $90D2	;
$90D0	STA $88,X	;
$90D2	DEX		;
$90D3	BPL $90CC	;
$90D5	JMP $F349	;

$90D8	LDX $0558	;
$90DB	LDA $D103,X	;
$90DE	STA $0559	;
$90E1	LDA $D108,X	;
$90E4	STA $055A	;
$90E7	LDA $D10D,X	;
$90EA	STA $055B	;
$90ED	LDA $D112,X	;
$90F0	STA $055C	;
$90F3	CPX #$04	;
$90F5	BCS $90FA	;
$90F7	INC $0558	;
$90FA	LDA #$00	;
$90FC	STA $05CD	;
$90FF	STA $05CE	;
$9102	RTS		;

$9103	.byte $03	; INVALID OPCODE !!!
$9104	ORA $07  	;
$9106	.byte $07	; INVALID OPCODE !!!
$9107	.byte $07	; INVALID OPCODE !!!
$9108	.byte $80	; INVALID OPCODE !!!
$9109	BCC $90A3	;
$910B	LDY #$a8	;
$910D	ORA ($01,X)	;
$910F	.byte $02	; INVALID OPCODE !!!
$9110	.byte $02	; INVALID OPCODE !!!
$9111	.byte $03	; INVALID OPCODE !!!
$9112	BRK		;
$9113	ORA $00  	;
$9115	ORA $00  	;
$9117	LDA $05CD	;
$911A	CLC		;
$911B	ADC $05CE	;
$911E	CMP #$14	;
$9120	RTS		;

$9121	.byte $3f	; INVALID OPCODE !!!
$9122	BRK		;
$9123	BPL $9134	;
$9125	BMI $9157	;
$9127	BMI $9138	;
$9129	BMI $9152	;
$912B	ORA $0F,X	;
$912D	BMI $9131	;
$912F	AND ($0F,X)	;
$9131	ASL $16,X	;
$9133	ASL $21,X	;
$9135	.byte $73	; INVALID OPCODE !!!
$9136	.byte $0b	; INVALID OPCODE !!!
$9137	AND #$00	;
$9139	BRK		;
$913A	BRK		;
$913B	BRK		;
$913C	BRK		;
$913D	BIT $19  	;
$913F	ORA $261C,X	;
$9142	AND ($F3,X)	;
$9144	.byte $0b	; INVALID OPCODE !!!
$9145	AND #$00	;
$9147	BRK		;
$9148	BRK		;
$9149	BRK		;
$914A	BRK		;
$914B	BIT $19  	;
$914D	ORA $261C,X	;
$9150	.byte $23	; INVALID OPCODE !!!
$9151	INX		;
$9152	PHP		;
$9153	.byte $ff	; INVALID OPCODE !!!
$9154	.byte $ff	; INVALID OPCODE !!!
$9155	.byte $ff	; INVALID OPCODE !!!
$9156	.byte $ff	; INVALID OPCODE !!!
$9157	.byte $ff	; INVALID OPCODE !!!
$9158	.byte $ff	; INVALID OPCODE !!!
$9159	.byte $ff	; INVALID OPCODE !!!
$915A	.byte $ff	; INVALID OPCODE !!!
$915B	.byte $23	; INVALID OPCODE !!!
$915C	CPY #$08	;
$915E	RTI		;

$915F	BVC $91B1	;
$9161	BVC $91B3	;
$9163	BCC $9105	;
$9165	LDY #$22	;
$9167	DEY		;
$9168	ORA ($19),Y	;
$916A	BIT $0E  	;
$916C	BIT $1B  	;
$916E	BIT $0F  	;
$9170	BIT $0E  	;
$9172	BIT $0C  	;
$9174	BIT $1D  	;
$9176	BIT $2C  	;
$9178	BIT $222C	;
$917B	DEC $17  	;
$917D	.byte $1c	; INVALID OPCODE !!!
$917E	ASL $0E19,X	;
$9181	.byte $1b	; INVALID OPCODE !!!
$9182	BIT $0B  	;
$9184	CLC		;
$9185	.byte $17	; INVALID OPCODE !!!
$9186	ASL $241C,X	;
$9189	BIT $24  	;
$918B	ORA ($00,X)	;
$918D	BRK		;
$918E	BRK		;
$918F	BRK		;
$9190	ORA $1C1D,Y	;
$9193	BIT $7050	; saved-to-battery RAM 
$9196	LDX #$1c	;
$9198	LDA $D134,X	;
$919B	STA $57,X	;
$919D	DEX		;
$919E	BPL $9198	;
$91A0	LDX #$04	;
$91A2	LDY $05CD	;
$91A5	JSR $D1D2	;
$91A8	LDX #$12	;
$91AA	LDY $05CE	;
$91AD	JSR $D1D2	;
$91B0	JSR $C123	;
$91B3	LDA $40  	;
$91B5	BNE $91B8	;
$91B7	RTS		; (within an if statement) 
$91B8	LDA #$65	;
$91BA	LDY #$00	;
$91BC	JMP $C127	;

$91BF	LDY #$00	;
$91C1	CMP #$0a	;
$91C3	BCC $91CB	;
$91C5	INY		;
$91C6	SBC #$0a	;
$91C8	JMP $D1C1	; (in an if statement) 
$91CB	STY $5A  	;
$91CD	STA $5B  	;
$91CF	JMP $C10F	;

$91D2	DEY		;
$91D3	BMI $91F4	;
$91D5	LDA $0559	;
$91D8	CLC		;
$91D9	ADC $59,X	;
$91DB	CMP #$0a	;
$91DD	BCC $91E3	;
$91DF	SBC #$0a	;
$91E1	INC $58,X	;
$91E3	STA $59,X	;
$91E5	LDA $58,X	;
$91E7	CMP #$0a	;
$91E9	BCC $91F1	;
$91EB	SBC #$0a	;
$91ED	INC $57,X	;
$91EF	STA $58,X	;
$91F1	JMP $D1D2	; (in an if statement) 
$91F4	LDY #$00	;
$91F6	LDA $57,X	;
$91F8	BEQ $91FE	;
$91FA	CMP #$24	;
$91FC	BNE $9208	;
$91FE	LDA #$24	;
$9200	STA $57,X	;
$9202	INX		;
$9203	INY		;
$9204	CPY #$04	;
$9206	BNE $91F6	;
$9208	RTS		;

$9209	LDA $59,X	;
$920B	CMP #$24	;
$920D	BEQ $9239	;
$920F	TAY		;
$9210	BNE $922E	;
$9212	LDA $58,X	;
$9214	CMP #$24	;
$9216	BEQ $9239	;
$9218	LDA $58,X	;
$921A	BNE $9228	;
$921C	LDA $57,X	;
$921E	CMP #$24	;
$9220	BEQ $9239	;
$9222	LDA #$0a	;
$9224	STA $58,X	;
$9226	DEC $57,X	;
$9228	LDA #$0a	;
$922A	STA $59,X	;
$922C	DEC $58,X	;
$922E	DEC $59,X	;
$9230	TXA		;
$9231	PHA		;
$9232	LDA #$0a	;
$9234	JSR $D6D4	;
$9237	PLA		;
$9238	TAX		;
$9239	JMP $D1F4	;

$923C	JSR $C100	;
$923F	JSR $C0F0	;
$9242	LDA #$20	;
$9244	STA $2006	;VRAM address select
$9247	LDA #$00	;
$9249	STA $2006	;VRAM address select
$924C	JSR $D26B	;
$924F	JSR $D26B	;
$9252	JSR $C0FA	;
$9255	JSR $C10B	;
$9258	LDX #$3f	;
$925A	LDY #$00	;
$925C	STY $4C  	;
$925E	LDA #$f0	;
$9260	STA $0200,Y	;
$9263	INY		;
$9264	INY		;
$9265	INY		;
$9266	INY		;
$9267	DEX		;
$9268	BPL $925E	;
$926A	RTS		;

$926B	LDX #$f0	;
$926D	LDA #$24	;
$926F	STA $2007	;VRAM data
$9272	STA $2007	;VRAM data
$9275	STA $2007	;VRAM data
$9278	STA $2007	;VRAM data
$927B	DEX		;
$927C	BNE $926F	;
$927E	LDX #$40	;
$9280	LDA #$00	;
$9282	STA $2007	;VRAM data
$9285	DEX		;
$9286	BNE $9282	;
$9288	RTS		;

$9289	JSR $C100	;
$928C	JSR $C0F0	;
$928F	LDA $16  	;
$9291	BEQ $9296	;
$9293	JMP $D568	; (in an if statement) 
$9296	LDY $3B  	;
$9298	LDA $DB20,Y	;
$929B	STA $1D  	;
$929D	LDA $DB30,Y	;
$92A0	STA $1E  	;
$92A2	JSR $D48D	;
$92A5	LDX #$00	;
$92A7	JSR $D4DB	;
$92AA	CMP #$ff	;
$92AC	BEQ $9318	;
$92AE	STA $54  	;
$92B0	JSR $D4DB	;
$92B3	STA $55  	;
$92B5	LDY #$03	;
$92B7	JSR $D4F1	;
$92BA	LDA #$04	;
$92BC	STA $12  	;
$92BE	LDA $D489,Y	;
$92C1	STA $2007	;VRAM data
$92C4	CLC		;
$92C5	ADC #$04	;
$92C7	DEC $12  	;
$92C9	BNE $92C1	;
$92CB	INC $55  	;
$92CD	DEY		;
$92CE	BPL $92B7	;
$92D0	LDA $55  	;
$92D2	SEC		;
$92D3	SBC #$04	;
$92D5	STA $55  	;
$92D7	JSR $D512	;
$92DA	STA $A6,X	;
$92DC	INC $54  	;
$92DE	INC $54  	;
$92E0	JSR $D512	;
$92E3	STA $A9,X	;
$92E5	INC $55  	;
$92E7	INC $55  	;
$92E9	JSR $D512	;
$92EC	STA $AF,X	;
$92EE	DEC $54  	;
$92F0	DEC $54  	;
$92F2	JSR $D512	;
$92F5	STA $AC,X	;
$92F7	STX $A4  	;
$92F9	LDA #$03	;
$92FB	JSR $C84C	;
$92FE	JSR $C172	;
$9301	LDX $A4  	;
$9303	LDA $54  	;
$9305	ASL A		;
$9306	ASL A		;
$9307	ASL A		;
$9308	CLC		;
$9309	ADC #$10	;
$930B	STA $B2,X	;
$930D	LDA $55  	;
$930F	ASL A		;
$9310	ASL A		;
$9311	ASL A		;
$9312	STA $B5,X	;
$9314	INX		;
$9315	JMP $D2A7	; (in an if statement) 
$9318	DEX		;
$9319	STX $A3  	;
$931B	LDX #$00	;
$931D	JSR $D4DB	;
$9320	CMP #$ff	;
$9322	BEQ $9374	;
$9324	STA $54  	;
$9326	JSR $D4DB	;
$9329	STA $55  	;
$932B	JSR $D4DB	;
$932E	STA $05FA,X	;
$9331	LDA $54  	;
$9333	ASL A		;
$9334	ASL A		;
$9335	ASL A		;
$9336	ADC #$0c	;
$9338	STA $05D2,X	;
$933B	LDA $55  	;
$933D	ASL A		;
$933E	ASL A		;
$933F	ASL A		;
$9340	ADC #$0c	;
$9342	STA $05DC,X	;
$9345	LDA #$00	;
$9347	STA $0604,X	;
$934A	JSR $D4F1	;
$934D	STA $05E6,X	;
$9350	LDA $13  	;
$9352	STA $05F0,X	;
$9355	JSR $D562	;
$9358	JSR $D532	;
$935B	INC $54  	;
$935D	INC $54  	;
$935F	JSR $D532	;
$9362	INC $55  	;
$9364	INC $55  	;
$9366	JSR $D532	;
$9369	DEC $54  	;
$936B	DEC $54  	;
$936D	JSR $D532	;
$9370	INX		;
$9371	JMP $D31D	; (in an if statement) 
$9374	DEX		;
$9375	STX $05D1	;
$9378	JSR $D4DB	;
$937B	STA $1F  	;
$937D	JSR $D4DB	;
$9380	STA $20  	;
$9382	LDY #$00	;
$9384	LDA ($1F),Y	;
$9386	TAX		;
$9387	DEX		;
$9388	BPL $938F	;
$938A	INC $C8  	;
$938C	JMP $D3B0	; (in an if statement) 
$938F	INY		;
$9390	LDA ($1F),Y	;
$9392	INY		;
$9393	STA $93,X	;
$9395	LDA ($1F),Y	;
$9397	INY		;
$9398	STA $9C,X	;
$939A	LDA ($1F),Y	;
$939C	INY		;
$939D	STA $0453,X	;
$93A0	LDA #$02	;
$93A2	STA $81,X	;
$93A4	LDA #$01	;
$93A6	STA $8A,X	;
$93A8	LDA $C6  	;
$93AA	STA $0441,X	;
$93AD	DEX		;
$93AE	BPL $9390	;
$93B0	JSR $D4DB	;
$93B3	STA $CD  	;
$93B5	JSR $D4DB	;
$93B8	STA $23  	;
$93BA	JSR $D4DB	;
$93BD	TAY		;
$93BE	STA $24  	;
$93C0	LDA $23  	;
$93C2	JSR $D482	;
$93C5	STA $25  	;
$93C7	STY $26  	;
$93C9	JSR $D482	;
$93CC	STA $27  	;
$93CE	STY $28  	;
$93D0	JSR $D482	;
$93D3	STA $29  	;
$93D5	STY $2A  	;
$93D7	JSR $D5CF	;
$93DA	JSR $D3E3	;
$93DD	JSR $C0FA	;
$93E0	JMP $C10B	;

$93E3	LDX #$22	;
$93E5	LDA $D42D,X	;
$93E8	STA $57,X	;
$93EA	DEX		;
$93EB	BPL $93E5	;
$93ED	LDA $C8  	;
$93EF	BNE $9406	;
$93F1	LDA $3B  	;
$93F3	AND #$0c	;
$93F5	ORA #$03	;
$93F7	TAY		;
$93F8	LDX #$03	;
$93FA	LDA $D450,Y	;
$93FD	STA $5A,X	;
$93FF	DEY		;
$9400	DEX		;
$9401	BPL $93FA	;
$9403	JMP $C123	; (in an if statement) 
$9406	LDX $0558	;
$9409	LDA $D460,X	;
$940C	STA $1D  	;
$940E	LDA $D465,X	;
$9411	STA $1E  	;
$9413	LDX #$03	;
$9415	LDY #$07	;
$9417	LDA ($1D),Y	;
$9419	STA $72,X	;
$941B	DEY		;
$941C	DEX		;
$941D	BPL $9417	;
$941F	LDA $16  	;
$9421	BNE $9403	;
$9423	LDA ($1D),Y	;
$9425	STA $005A,Y	;
$9428	DEY		;
$9429	BPL $9423	;
$942B	BMI $9403	;
$942D	.byte $3f	; INVALID OPCODE !!!
$942E	BRK		;
$942F	JSR $2A0F	;
$9432	ORA #$07	;
$9434	.byte $0f	; INVALID OPCODE !!!
$9435	BMI $945E	;
$9437	ORA $0F,X	;
$9439	BMI $943D	;
$943B	AND ($0F,X)	;
$943D	BMI $943F	;
$943F	BPL $9450	;
$9441	ASL $12,X	;
$9443	.byte $37	; INVALID OPCODE !!!
$9444	.byte $0f	; INVALID OPCODE !!!
$9445	.byte $12	; INVALID OPCODE !!!
$9446	ASL $37,X	;
$9448	.byte $0f	; INVALID OPCODE !!!
$9449	.byte $17	; INVALID OPCODE !!!
$944A	ORA ($35),Y	;
$944C	.byte $0f	; INVALID OPCODE !!!
$944D	.byte $17	; INVALID OPCODE !!!
$944E	ORA ($2B),Y	;
$9450	.byte $0f	; INVALID OPCODE !!!
$9451	ROL A		;
$9452	ORA #$07	;
$9454	.byte $0f	; INVALID OPCODE !!!
$9455	ROL $06  	;
$9457	.byte $07	; INVALID OPCODE !!!
$9458	.byte $0f	; INVALID OPCODE !!!
$9459	.byte $1b	; INVALID OPCODE !!!
$945A	.byte $0c	; INVALID OPCODE !!!
$945B	.byte $07	; INVALID OPCODE !!!
$945C	.byte $0f	; INVALID OPCODE !!!
$945D	BIT $0601	;
$9460	ROR A		;
$9461	.byte $72	; INVALID OPCODE !!!
$9462	.byte $7a	; INVALID OPCODE !!!
$9463	.byte $7a	; INVALID OPCODE !!!
$9464	.byte $7a	; INVALID OPCODE !!!
$9465	.byte $d4	; INVALID OPCODE !!!
$9466	.byte $d4	; INVALID OPCODE !!!
$9467	.byte $d4	; INVALID OPCODE !!!
$9468	.byte $d4	; INVALID OPCODE !!!
$9469	.byte $d4	; INVALID OPCODE !!!
$946A	.byte $0f	; INVALID OPCODE !!!
$946B	.byte $02	; INVALID OPCODE !!!
$946C	PHP		;
$946D	ASL $0F  	;
$946F	.byte $2b	; INVALID OPCODE !!!
$9470	BMI $9484	;
$9472	.byte $0f	; INVALID OPCODE !!!
$9473	.byte $07	; INVALID OPCODE !!!
$9474	ASL A		;
$9475	ORA $260F,Y	;
$9478	BMI $94A5	;
$947A	.byte $0f	; INVALID OPCODE !!!
$947B	.byte $07	; INVALID OPCODE !!!
$947C	.byte $0c	; INVALID OPCODE !!!
$947D	.byte $1c	; INVALID OPCODE !!!
$947E	.byte $0f	; INVALID OPCODE !!!
$947F	ORA $30,X	;
$9481	ROL $38  	;
$9483	ADC $CD  	;
$9485	BCC $9488	;
$9487	INY		;
$9488	RTS		; (within an if statement) 
$9489	.byte $7f	; INVALID OPCODE !!!
$948A	ROR $7C7D,X	; saved-to-battery RAM 
$948D	JSR $D4DB	;
$9490	STA $1F  	;
$9492	JSR $D4DB	;
$9495	STA $20  	;
$9497	TAX		;
$9498	BEQ $94DA	;
$949A	JSR $D4E6	;
$949D	TAX		;
$949E	BEQ $948D	;
$94A0	AND #$7f	;
$94A2	STA $2006	;VRAM address select
$94A5	JSR $D4E6	;
$94A8	STA $2006	;VRAM address select
$94AB	JSR $D4E6	;
$94AE	STA $12  	;
$94B0	TXA		;
$94B1	AND #$80	;
$94B3	LSR A		;
$94B4	LSR A		;
$94B5	LSR A		;
$94B6	LSR A		;
$94B7	LSR A		;
$94B8	ORA $00  	;
$94BA	STA $2000	;PPU setup #1
$94BD	TXA		;
$94BE	AND #$40	;
$94C0	BNE $94CE	;
$94C2	JSR $D4E6	;
$94C5	STA $2007	;VRAM data
$94C8	DEC $12  	;
$94CA	BNE $94C2	;
$94CC	BEQ $949A	;
$94CE	JSR $D4E6	;
$94D1	STA $2007	;VRAM data
$94D4	DEC $12  	;
$94D6	BNE $94D1	;
$94D8	BEQ $949A	;
$94DA	RTS		;

$94DB	LDY #$00	;
$94DD	LDA ($1D),Y	;
$94DF	INC $1D  	;
$94E1	BNE $94E5	;
$94E3	INC $1E  	;
$94E5	RTS		;

$94E6	LDY #$00	;
$94E8	LDA ($1F),Y	;
$94EA	INC $1F  	;
$94EC	BNE $94F0	;
$94EE	INC $20  	;
$94F0	RTS		;

$94F1	LDA $55  	;
$94F3	STA $12  	;
$94F5	LDA #$00	;
$94F7	ASL $12  	;
$94F9	ASL $12  	;
$94FB	ASL $12  	;
$94FD	ASL $12  	;
$94FF	ROL A		;
$9500	ASL $12  	;
$9502	ROL A		;
$9503	ORA #$20	;
$9505	STA $2006	;VRAM address select
$9508	STA $13  	;
$950A	LDA $12  	;
$950C	ORA $54  	;
$950E	STA $2006	;VRAM address select
$9511	RTS		;

$9512	LDA $55  	;
$9514	AND #$fc	;
$9516	ASL A		;
$9517	STA $12  	;
$9519	LDA $54  	;
$951B	LSR A		;
$951C	LSR A		;
$951D	ORA $12  	;
$951F	ORA #$c0	;
$9521	PHA		;
$9522	LDA $55  	;
$9524	AND #$02	;
$9526	STA $12  	;
$9528	LDA $54  	;
$952A	AND #$02	;
$952C	LSR A		;
$952D	ORA $12  	;
$952F	TAY		;
$9530	PLA		;
$9531	RTS		;

$9532	LDA #$23	;
$9534	STA $2006	;VRAM address select
$9537	JSR $D512	;
$953A	STA $2006	;VRAM address select
$953D	LDA $2007	;VRAM data
$9540	LDA $2007	;VRAM data
$9543	AND $D55A,Y	;
$9546	ORA $D55E,Y	;
$9549	PHA		;
$954A	LDA #$23	;
$954C	STA $2006	;VRAM address select
$954F	JSR $D512	;
$9552	STA $2006	;VRAM address select
$9555	PLA		;
$9556	STA $2007	;VRAM data
$9559	RTS		;

$955A	.byte $fc	; INVALID OPCODE !!!
$955B	.byte $f3	; INVALID OPCODE !!!
$955C	.byte $cf	; INVALID OPCODE !!!
$955D	.byte $3f	; INVALID OPCODE !!!
$955E	ORA ($04,X)	;
$9560	BPL $95A2	;
$9562	JSR $CCC1	;
$9565	JMP $C172	; (in an if statement) 
$9568	LDA #$c0	;
$956A	LDY #$23	;
$956C	JSR $D589	;
$956F	LDA #$c0	;
$9571	LDY #$27	;
$9573	JSR $D589	;
$9576	LDY #$23	;
$9578	LDA #$60	;
$957A	JSR $D5AE	;
$957D	LDY #$27	;
$957F	LDA #$60	;
$9581	JSR $D5AE	;
$9584	INC $C8  	;
$9586	JMP $D3D7	; (in an if statement) 
$9589	STY $2006	;VRAM address select
$958C	STA $2006	;VRAM address select
$958F	LDX #$00	;
$9591	LDA $DCA4,X	;
$9594	STA $2007	;VRAM data
$9597	INX		;
$9598	CPX #$08	;
$959A	BNE $9591	;
$959C	LDA #$00	;
$959E	LDX #$28	;
$95A0	JSR $D5A7	;
$95A3	LDA #$aa	;
$95A5	LDX #$10	;
$95A7	STA $2007	;VRAM data
$95AA	DEX		;
$95AB	BNE $95A7	;
$95AD	RTS		;

$95AE	STY $2006	;VRAM address select
$95B1	STA $2006	;VRAM address select
$95B4	LDX #$20	;
$95B6	LDA #$58	;
$95B8	JSR $D5BF	;
$95BB	LDX #$40	;
$95BD	LDA #$5c	;
$95BF	STA $12  	;
$95C1	TXA		;
$95C2	AND #$03	;
$95C4	EOR #$03	;
$95C6	ORA $12  	;
$95C8	STA $2007	;VRAM data
$95CB	DEX		;
$95CC	BNE $95C1	;
$95CE	RTS		;

$95CF	LDX #$00	;
$95D1	JSR $D647	;
$95D4	JSR $D5E7	;
$95D7	LDA $51  	;
$95D9	ORA #$04	;
$95DB	STA $51  	;
$95DD	JSR $D5E7	;
$95E0	INX		;
$95E1	INX		;
$95E2	CPX #$80	;
$95E4	BNE $95D1	;
$95E6	RTS		;

$95E7	LDA $51  	;
$95E9	STA $2006	;VRAM address select
$95EC	LDA $50  	;
$95EE	STA $2006	;VRAM address select
$95F1	LDA $2007	;VRAM data
$95F4	LDA $2007	;VRAM data
$95F7	CMP #$24	;
$95F9	BNE $9602	;
$95FB	TXA		;
$95FC	AND #$03	;
$95FE	TAY		;
$95FF	JMP $D631	; (in an if statement) 
$9602	RTS		;

$9603	LDA $4C  	;
$9605	BEQ $9630	;
$9607	DEC $4C  	;
$9609	LDA $4F  	;
$960B	CLC		;
$960C	ADC #$02	;
$960E	AND #$3f	;
$9610	STA $4F  	;
$9612	TAX		;
$9613	JSR $D647	;
$9616	LDA $51  	;
$9618	STA $2006	;VRAM address select
$961B	LDA $50  	;
$961D	STA $2006	;VRAM address select
$9620	LDA $2007	;VRAM data
$9623	LDA $2007	;VRAM data
$9626	LDY #$03	;
$9628	CMP $D642,Y	;
$962B	BEQ $9631	;
$962D	DEY		;
$962E	BPL $9628	;
$9630	RTS		;

$9631	LDA $51  	;
$9633	STA $2006	;VRAM address select
$9636	LDA $50  	;
$9638	STA $2006	;VRAM address select
$963B	LDA $D643,Y	;
$963E	STA $2007	;VRAM data
$9641	RTS		;

$9642	BIT $ED  	;
$9644	INC $24EF	;
$9647	LDA $D652,X	;
$964A	STA $50  	;
$964C	LDA $D653,X	;
$964F	STA $51  	;
$9651	RTS		;

$9652	.byte $63	; INVALID OPCODE !!!
$9653	AND ($A5,X)	;
$9655	AND ($CB,X)	;
$9657	JSR $20B7	;
$965A	ADC $9B21,X	;
$965D	.byte $22	; INVALID OPCODE !!!
$965E	.byte $f2	; INVALID OPCODE !!!
$965F	JSR $2249	;
$9662	ADC $0B21	;
$9665	.byte $22	; INVALID OPCODE !!!
$9666	.byte $92	; INVALID OPCODE !!!
$9667	.byte $22	; INVALID OPCODE !!!
$9668	STA $21,X	;
$966A	.byte $1c	; INVALID OPCODE !!!
$966B	AND ($48,X)	;
$966D	AND ($E0,X)	;
$966F	JSR $230B	;
$9672	DEC $D020	;
$9675	AND ($06,X)	;
$9677	AND ($19,X)	;
$9679	AND ($30,X)	;
$967B	.byte $22	; INVALID OPCODE !!!
$967C	TXA		;
$967D	.byte $22	; INVALID OPCODE !!!
$967E	DEY		;
$967F	.byte $22	; INVALID OPCODE !!!
$9680	LDY $20  	;
$9682	.byte $42	; INVALID OPCODE !!!
$9683	.byte $22	; INVALID OPCODE !!!
$9684	PLA		;
$9685	AND ($3C,X)	;
$9687	.byte $22	; INVALID OPCODE !!!
$9688	ROL $21,X	;
$968A	DEX		;
$968B	AND ($BC,X)	;
$968D	JSR $2196	;
$9690	JMP $3521	;

$9693	.byte $22	; INVALID OPCODE !!!
$9694	.byte $ef	; INVALID OPCODE !!!
$9695	JSR $2268	;
$9698	LDX $20  	;
$969A	.byte $bb	; INVALID OPCODE !!!
$969B	AND ($7A,X)	;
$969D	AND ($EA,X)	;
$969F	JSR $21F1	;
$96A2	.byte $c2	; INVALID OPCODE !!!
$96A3	JSR $2177	;
$96A6	.byte $54	; INVALID OPCODE !!!
$96A7	AND ($BA,X)	;
$96A9	JSR $22C5	;
$96AC	LDX $FA20,Y	;
$96AF	JSR $21AE	;
$96B2	LSR $21  	;
$96B4	TXS		;
$96B5	AND ($D2,X)	;
$96B7	JSR $213D	;
$96BA	.byte $2b	; INVALID OPCODE !!!
$96BB	.byte $22	; INVALID OPCODE !!!
$96BC	BCS $96DE	;
$96BE	LDX $21,Y 	;
$96C0	LDY $B320	;
$96C3	JSR $20DB	;
$96C6	INC $20,X	;
$96C8	BIT $E721	;
$96CB	JSR $2162	;
$96CE	CPX $21  	;
$96D0	LSR $A921	;
$96D3	BRK		;
$96D4	STA $43  	;
$96D6	LDA $3A  	;
$96D8	BEQ $96DB	;
$96DA	RTS		; (within an if statement) 
$96DB	LDX $3E  	;
$96DD	CPX #$02	;
$96DF	BCS $96DA	;
$96E1	LDA $41,X	;
$96E3	BMI $96DA	;
$96E5	LDY #$64	;
$96E7	JSR $D772	;
$96EA	CLC		;
$96EB	ADC $48  	;
$96ED	STA $45  	;
$96EF	LDY #$0a	;
$96F1	JSR $D772	;
$96F4	STA $44  	;
$96F6	LDX $3F  	;
$96F8	LDA $D76F,X	;
$96FB	STA $21  	;
$96FD	LDA #$06	;
$96FF	STA $22  	;
$9701	LDA $3E  	;
$9703	ASL A		;
$9704	ASL A		;
$9705	ORA $3E  	;
$9707	TAX		;
$9708	CLC		;
$9709	LDA $03,X	;
$970B	ADC $43  	;
$970D	JSR $D785	;
$9710	STA $03,X	;
$9712	LDA $04,X	;
$9714	ADC $44  	;
$9716	JSR $D785	;
$9719	STA $04,X	;
$971B	LDA $05,X	;
$971D	ADC $45  	;
$971F	JSR $D785	;
$9722	STA $05,X	;
$9724	LDA $06,X	;
$9726	ADC $47  	;
$9728	JSR $D785	;
$972B	STA $06,X	;
$972D	LDA $07,X	;
$972F	ADC #$00	;
$9731	JSR $D785	;
$9734	STA $07,X	;
$9736	INX		;
$9737	INX		;
$9738	INX		;
$9739	INX		;
$973A	LDY #$04	;
$973C	LDA $03,X	;
$973E	CMP ($21),Y	;
$9740	BCC $975B	;
$9742	BNE $9748	;
$9744	DEX		;
$9745	DEY		;
$9746	BPL $973C	;
$9748	LDY #$00	;
$974A	LDA $3E  	;
$974C	ASL A		;
$974D	ASL A		;
$974E	ORA $3E  	;
$9750	TAX		;
$9751	LDA $03,X	;
$9753	STA ($21),Y	;
$9755	INX		;
$9756	INY		;
$9757	CPY #$05	;
$9759	BNE $9751	;
$975B	LDY #$04	;
$975D	LDA ($21),Y	;
$975F	STA $000D,Y	;
$9762	DEY		;
$9763	BPL $975D	;
$9765	INC $46  	;
$9767	LDA $16  	;
$9769	BEQ $976E	;
$976B	JSR $C52F	;
$976E	RTS		;

$976F	AND #$2e	;
$9771	.byte $33	; INVALID OPCODE !!!
$9772	STY $12  	;
$9774	LDX #$ff	;
$9776	LDA $43  	;
$9778	SEC		;
$9779	SBC $12  	;
$977B	INX		;
$977C	BCS $9778	;
$977E	CLC		;
$977F	ADC $12  	;
$9781	STA $43  	;
$9783	TXA		;
$9784	RTS		;

$9785	CMP #$0a	;
$9787	BCS $978A	;
$9789	RTS		; (within an if statement) 
$978A	SEC		;
$978B	SBC #$0a	;
$978D	RTS		;

$978E	LDY $46  	;
$9790	DEY		;
$9791	BEQ $9796	;
$9793	BPL $97FB	;
$9795	RTS		; (within an if statement) 
$9796	LDA #$20	;
$9798	STA $2006	;VRAM address select
$979B	LDA #$43	;
$979D	STA $2006	;VRAM address select
$97A0	LDA #$8e	;
$97A2	STA $2007	;VRAM data
$97A5	LDX #$04	;
$97A7	LDA $03,X	;
$97A9	STA $2007	;VRAM data
$97AC	DEX		;
$97AD	BPL $97A7	;
$97AF	LDA #$00	;
$97B1	STA $2007	;VRAM data
$97B4	LDA #$24	;
$97B6	STA $2007	;VRAM data
$97B9	STA $2007	;VRAM data
$97BC	LDX #$8c	;
$97BE	STX $2007	;VRAM data
$97C1	INX		;
$97C2	STX $2007	;VRAM data
$97C5	LDX #$04	;
$97C7	LDA $0D,X	;
$97C9	STA $2007	;VRAM data
$97CC	DEX		;
$97CD	BPL $97C7	;
$97CF	LDA #$00	;
$97D1	STA $2007	;VRAM data
$97D4	LDA #$24	;
$97D6	STA $2007	;VRAM data
$97D9	STA $2007	;VRAM data
$97DC	LDA $16  	;
$97DE	BNE $984A	;
$97E0	LDA $40  	;
$97E2	BEQ $97F8	;
$97E4	LDA #$8f	;
$97E6	STA $2007	;VRAM data
$97E9	LDX #$04	;
$97EB	LDA $08,X	;
$97ED	STA $2007	;VRAM data
$97F0	DEX		;
$97F1	BPL $97EB	;
$97F3	LDA #$00	;
$97F5	STA $2007	;VRAM data
$97F8	DEC $46  	;
$97FA	RTS		; (within an if statement) 
$97FB	DEC $46  	;
$97FD	LDA #$20	;
$97FF	STA $2006	;VRAM address select
$9802	LDA #$62	;
$9804	STA $2006	;VRAM address select
$9807	LDA $41  	;
$9809	JSR $D81C	;
$980C	LDA $40  	;
$980E	BEQ $9830	;
$9810	LDA #$20	;
$9812	STA $2006	;VRAM address select
$9815	LDA #$75	;
$9817	STA $2006	;VRAM address select
$981A	LDA $42  	;
$981C	BMI $9831	;
$981E	STA $50  	;
$9820	LDX #$06	;
$9822	LDA #$24	;
$9824	CPX $50  	;
$9826	BCS $982A	;
$9828	LDA #$2a	;
$982A	STA $2007	;VRAM data
$982D	DEX		;
$982E	BPL $9822	;
$9830	RTS		; (within an if statement) 
$9831	LDA $40  	;
$9833	BEQ $981E	;
$9835	LDX #$08	;
$9837	LDA $D841,X	;
$983A	STA $2007	;VRAM data
$983D	DEX		;
$983E	BPL $9837	;
$9840	RTS		; (within an if statement) 
$9841	.byte $1b	; INVALID OPCODE !!!
$9842	ASL $181F	;
$9845	BIT $0E  	;
$9847	ASL $0A,X	;
$9849	BPL $97EB	;
$984B	.byte $04	; INVALID OPCODE !!!
$984C	LDA $D862,Y	;
$984F	STA $2007	;VRAM data
$9852	DEY		;
$9853	BPL $984C	;
$9855	LDA $4A  	;
$9857	STA $2007	;VRAM data
$985A	LDA $49  	;
$985C	STA $2007	;VRAM data
$985F	DEC $46  	;
$9861	RTS		;

$9862	.byte $fb	; INVALID OPCODE !!!
$9863	.byte $fa	; INVALID OPCODE !!!
$9864	SBC $F7F8,Y	;
$9867	STA $12  	;
$9869	STX $13  	;
$986B	STY $14  	;
$986D	LDX #$01	;
$986F	LDA $061A,X	;
$9872	BMI $9882	;
$9874	DEX		;
$9875	BPL $986F	;
$9877	LDX #$01	;
$9879	LDA $0619	;
$987C	CMP $0618	;
$987F	BCC $9882	;
$9881	DEX		;
$9882	LDA #$64	;
$9884	STA $0618,X	;
$9887	LDA $12  	;
$9889	STA $061A,X	;
$988C	TAY		;
$988D	TXA		;
$988E	ASL A		;
$988F	ASL A		;
$9890	ASL A		;
$9891	TAX		;
$9892	LDA $D8C7,Y	;
$9895	STA $02F1,X	;
$9898	LDA $D8CD,Y	;
$989B	STA $02F5,X	;
$989E	LDY $13  	;
$98A0	LDA $009A,Y	;
$98A3	SEC		;
$98A4	SBC #$08	;
$98A6	STA $02F0,X	;
$98A9	STA $02F4,X	;
$98AC	LDA $0091,Y	;
$98AF	STA $02F3,X	;
$98B2	CLC		;
$98B3	ADC #$08	;
$98B5	STA $02F7,X	;
$98B8	LDA $3E  	;
$98BA	STA $02F2,X	;
$98BD	STA $02F6,X	;
$98C0	LDY $14  	;
$98C2	LDX $13  	;
$98C4	LDA $12  	;
$98C6	RTS		;

$98C7	.byte $f4	; INVALID OPCODE !!!
$98C8	SBC $F6,X	;
$98CA	.byte $f7	; INVALID OPCODE !!!
$98CB	SED		;
$98CC	SBC $FBFB,Y	;
$98CF	.byte $fa	; INVALID OPCODE !!!
$98D0	.byte $fb	; INVALID OPCODE !!!
$98D1	.byte $fb	; INVALID OPCODE !!!
$98D2	.byte $fb	; INVALID OPCODE !!!
$98D3	LDX #$01	;
$98D5	LDA $061A,X	;
$98D8	BMI $98F1	;
$98DA	DEC $0618,X	;
$98DD	BNE $98F1	;
$98DF	LDA #$ff	;
$98E1	STA $061A,X	;
$98E4	TXA		;
$98E5	ASL A		;
$98E6	ASL A		;
$98E7	ASL A		;
$98E8	TAY		;
$98E9	LDA #$f0	;
$98EB	STA $02F0,Y	;
$98EE	STA $02F4,Y	;
$98F1	DEX		;
$98F2	BPL $98D5	;
$98F4	RTS		;

$98F5	LDX #$01	;
$98F7	LDA #$00	;
$98F9	STA $0618,X	;
$98FC	LDA #$ff	;
$98FE	STA $061A,X	;
$9901	DEX		;
$9902	BPL $98F7	;
$9904	RTS		;

$9905	JSR $D23C	;
$9908	JSR $C100	;
$990B	JSR $F45B	;
$990E	JSR $C0F0	;
$9911	LDA #$22	;
$9913	STA $1D  	;
$9915	LDA #$d9	;
$9917	STA $1E  	;
$9919	JSR $D48D	;
$991C	JSR $C0FA	;
$991F	JMP $C10B	;

$9922	ROL $D9  	;
$9924	BRK		;
$9925	BRK		;
$9926	.byte $3f	; INVALID OPCODE !!!
$9927	BRK		;
$9928	.byte $04	; INVALID OPCODE !!!
$9929	.byte $0f	; INVALID OPCODE !!!
$992A	BMI $9953	;
$992C	ROL A		;
$992D	.byte $3f	; INVALID OPCODE !!!
$992E	CLC		;
$992F	.byte $04	; INVALID OPCODE !!!
$9930	.byte $0f	; INVALID OPCODE !!!
$9931	ASL $30,X	;
$9933	AND ($20,X)	;
$9935	.byte $7c	; INVALID OPCODE !!!
$9936	AND ($F0,X)	;
$9938	SBC ($24),Y	;
$993A	BIT $24  	;
$993C	BIT $E0  	;
$993E	SBC ($E1,X)	;
$9940	.byte $e2	; INVALID OPCODE !!!
$9941	CPX #$e1	;
$9943	SBC ($E2,X)	;
$9945	CPX #$e2	;
$9947	BIT $E0  	;
$9949	.byte $e2	; INVALID OPCODE !!!
$994A	BIT $E0  	;
$994C	SBC ($E1,X)	;
$994E	.byte $e2	; INVALID OPCODE !!!
$994F	CPX #$e1	;
$9951	SBC ($E2,X)	;
$9953	CPX #$ec	;
$9955	BIT $E0  	;
$9957	.byte $e2	; INVALID OPCODE !!!
$9958	JSR $1BA2	;
$995B	.byte $e3	; INVALID OPCODE !!!
$995C	.byte $e3	; INVALID OPCODE !!!
$995D	.byte $e3	; INVALID OPCODE !!!
$995E	SBC $E3  	;
$9960	.byte $e3	; INVALID OPCODE !!!
$9961	.byte $e3	; INVALID OPCODE !!!
$9962	SBC $E3  	;
$9964	SBC $24  	;
$9966	.byte $e3	; INVALID OPCODE !!!
$9967	SBC $24  	;
$9969	.byte $e3	; INVALID OPCODE !!!
$996A	.byte $e3	; INVALID OPCODE !!!
$996B	.byte $e3	; INVALID OPCODE !!!
$996C	SBC $E3  	;
$996E	.byte $e3	; INVALID OPCODE !!!
$996F	.byte $e3	; INVALID OPCODE !!!
$9970	SBC $E3  	;
$9972	.byte $e3	; INVALID OPCODE !!!
$9973	.byte $f3	; INVALID OPCODE !!!
$9974	.byte $e3	; INVALID OPCODE !!!
$9975	SBC $20  	;
$9977	.byte $c2	; INVALID OPCODE !!!
$9978	.byte $1b	; INVALID OPCODE !!!
$9979	.byte $e3	; INVALID OPCODE !!!
$997A	CPX $E3  	;
$997C	.byte $e7	; INVALID OPCODE !!!
$997D	.byte $e3	; INVALID OPCODE !!!
$997E	CPX $E3  	;
$9980	SBC $E3  	;
$9982	SBC $24  	;
$9984	.byte $e3	; INVALID OPCODE !!!
$9985	SBC $24  	;
$9987	.byte $e3	; INVALID OPCODE !!!
$9988	CPX $E3  	;
$998A	SBC $E3  	;
$998C	CPX $E3  	;
$998E	SBC $E3  	;
$9990	.byte $e3	; INVALID OPCODE !!!
$9991	.byte $e3	; INVALID OPCODE !!!
$9992	.byte $e3	; INVALID OPCODE !!!
$9993	SBC $20  	;
$9995	.byte $e2	; INVALID OPCODE !!!
$9996	.byte $1b	; INVALID OPCODE !!!
$9997	.byte $e3	; INVALID OPCODE !!!
$9998	.byte $e3	; INVALID OPCODE !!!
$9999	.byte $e3	; INVALID OPCODE !!!
$999A	.byte $e2	; INVALID OPCODE !!!
$999B	.byte $e3	; INVALID OPCODE !!!
$999C	.byte $e3	; INVALID OPCODE !!!
$999D	.byte $e3	; INVALID OPCODE !!!
$999E	SBC $E3  	;
$99A0	SBC $24  	;
$99A2	.byte $e3	; INVALID OPCODE !!!
$99A3	SBC $24  	;
$99A5	.byte $e3	; INVALID OPCODE !!!
$99A6	.byte $e3	; INVALID OPCODE !!!
$99A7	.byte $e3	; INVALID OPCODE !!!
$99A8	SBC $E3  	;
$99AA	.byte $e3	; INVALID OPCODE !!!
$99AB	.byte $e3	; INVALID OPCODE !!!
$99AC	SBC $E3  	;
$99AE	.byte $e3	; INVALID OPCODE !!!
$99AF	.byte $e3	; INVALID OPCODE !!!
$99B0	.byte $e3	; INVALID OPCODE !!!
$99B1	SBC $21  	;
$99B3	.byte $02	; INVALID OPCODE !!!
$99B4	.byte $1b	; INVALID OPCODE !!!
$99B5	.byte $e3	; INVALID OPCODE !!!
$99B6	CPX $E3  	;
$99B8	SBC $E3  	;
$99BA	.byte $f2	; INVALID OPCODE !!!
$99BB	.byte $e3	; INVALID OPCODE !!!
$99BC	SBC $E3  	;
$99BE	.byte $e3	; INVALID OPCODE !!!
$99BF	.byte $e2	; INVALID OPCODE !!!
$99C0	.byte $e3	; INVALID OPCODE !!!
$99C1	.byte $e3	; INVALID OPCODE !!!
$99C2	.byte $e2	; INVALID OPCODE !!!
$99C3	.byte $e3	; INVALID OPCODE !!!
$99C4	.byte $e3	; INVALID OPCODE !!!
$99C5	.byte $e3	; INVALID OPCODE !!!
$99C6	SBC $E3  	;
$99C8	.byte $e3	; INVALID OPCODE !!!
$99C9	.byte $e3	; INVALID OPCODE !!!
$99CA	SBC $E3  	;
$99CC	.byte $f2	; INVALID OPCODE !!!
$99CD	.byte $e3	; INVALID OPCODE !!!
$99CE	.byte $e3	; INVALID OPCODE !!!
$99CF	SBC $21  	;
$99D1	.byte $22	; INVALID OPCODE !!!
$99D2	.byte $1b	; INVALID OPCODE !!!
$99D3	INC $E3  	;
$99D5	.byte $e3	; INVALID OPCODE !!!
$99D6	.byte $e7	; INVALID OPCODE !!!
$99D7	.byte $eb	; INVALID OPCODE !!!
$99D8	BIT $E6  	;
$99DA	.byte $e7	; INVALID OPCODE !!!
$99DB	INC $E3  	;
$99DD	.byte $e7	; INVALID OPCODE !!!
$99DE	INC $E3  	;
$99E0	.byte $e7	; INVALID OPCODE !!!
$99E1	INC $E3  	;
$99E3	.byte $e3	; INVALID OPCODE !!!
$99E4	.byte $e7	; INVALID OPCODE !!!
$99E5	INC $E3  	;
$99E7	.byte $e3	; INVALID OPCODE !!!
$99E8	.byte $e7	; INVALID OPCODE !!!
$99E9	.byte $eb	; INVALID OPCODE !!!
$99EA	BIT $E6  	;
$99EC	.byte $e3	; INVALID OPCODE !!!
$99ED	.byte $e7	; INVALID OPCODE !!!
$99EE	AND ($4C,X)	;
$99F0	.byte $12	; INVALID OPCODE !!!
$99F1	CPX #$e1	;
$99F3	SBC ($E2,X)	;
$99F5	CPX #$e2	;
$99F7	CPX #$e1	;
$99F9	SBC ($E2,X)	;
$99FB	INX		;
$99FC	BIT $E0  	;
$99FE	.byte $e2	; INVALID OPCODE !!!
$99FF	CPX #$e1	;
$9A01	SBC ($E2,X)	;
$9A03	AND ($6C,X)	;
$9A05	.byte $12	; INVALID OPCODE !!!
$9A06	.byte $e3	; INVALID OPCODE !!!
$9A07	.byte $e3	; INVALID OPCODE !!!
$9A08	.byte $e3	; INVALID OPCODE !!!
$9A09	.byte $e7	; INVALID OPCODE !!!
$9A0A	.byte $e3	; INVALID OPCODE !!!
$9A0B	SBC $E3  	;
$9A0D	SBC $F6,X	;
$9A0F	.byte $e7	; INVALID OPCODE !!!
$9A10	.byte $e3	; INVALID OPCODE !!!
$9A11	.byte $f3	; INVALID OPCODE !!!
$9A12	.byte $e3	; INVALID OPCODE !!!
$9A13	SBC $E6  	;
$9A15	.byte $e3	; INVALID OPCODE !!!
$9A16	.byte $e3	; INVALID OPCODE !!!
$9A17	.byte $e7	; INVALID OPCODE !!!
$9A18	AND ($8C,X)	;
$9A1A	.byte $12	; INVALID OPCODE !!!
$9A1B	.byte $e3	; INVALID OPCODE !!!
$9A1C	.byte $e3	; INVALID OPCODE !!!
$9A1D	.byte $ef	; INVALID OPCODE !!!
$9A1E	BIT $E3  	;
$9A20	SBC $E3  	;
$9A22	BIT $24  	;
$9A24	BIT $E3  	;
$9A26	.byte $e3	; INVALID OPCODE !!!
$9A27	.byte $e3	; INVALID OPCODE !!!
$9A28	SBC $24  	;
$9A2A	.byte $e3	; INVALID OPCODE !!!
$9A2B	SBC $24  	;
$9A2D	AND ($AC,X)	;
$9A2F	.byte $12	; INVALID OPCODE !!!
$9A30	.byte $e3	; INVALID OPCODE !!!
$9A31	.byte $e3	; INVALID OPCODE !!!
$9A32	SBC ($EA,X)	;
$9A34	.byte $e3	; INVALID OPCODE !!!
$9A35	SBC $E3  	;
$9A37	SBC #$e3	;
$9A39	.byte $e2	; INVALID OPCODE !!!
$9A3A	.byte $e3	; INVALID OPCODE !!!
$9A3B	.byte $e3	; INVALID OPCODE !!!
$9A3C	.byte $e3	; INVALID OPCODE !!!
$9A3D	SBC $24  	;
$9A3F	.byte $e3	; INVALID OPCODE !!!
$9A40	SBC $24  	;
$9A42	AND ($CC,X)	;
$9A44	.byte $12	; INVALID OPCODE !!!
$9A45	.byte $e3	; INVALID OPCODE !!!
$9A46	.byte $e3	; INVALID OPCODE !!!
$9A47	.byte $ef	; INVALID OPCODE !!!
$9A48	BIT $E3  	;
$9A4A	SBC $E3  	;
$9A4C	.byte $f3	; INVALID OPCODE !!!
$9A4D	.byte $e3	; INVALID OPCODE !!!
$9A4E	SBC $E3  	;
$9A50	.byte $f2	; INVALID OPCODE !!!
$9A51	.byte $e3	; INVALID OPCODE !!!
$9A52	SBC $24  	;
$9A54	.byte $e3	; INVALID OPCODE !!!
$9A55	SBC $24  	;
$9A57	AND ($EC,X)	;
$9A59	.byte $12	; INVALID OPCODE !!!
$9A5A	INC $E7  	;
$9A5C	BIT $24  	;
$9A5E	INC $E7  	;
$9A60	INC $E7  	;
$9A62	INC $E7  	;
$9A64	.byte $eb	; INVALID OPCODE !!!
$9A65	BIT $E6  	;
$9A67	.byte $e7	; INVALID OPCODE !!!
$9A68	BIT $E6  	;
$9A6A	.byte $e7	; INVALID OPCODE !!!
$9A6B	BIT $22  	;
$9A6D	PHA		;
$9A6E	BPL $9A7A	;
$9A70	BIT $24  	;
$9A72	ORA ($25,X)	;
$9A74	ORA $0A15,Y	;
$9A77	.byte $22	; INVALID OPCODE !!!
$9A78	ASL $241B	;
$9A7B	BPL $9A87	;
$9A7D	ASL $0E,X	;
$9A7F	.byte $22	; INVALID OPCODE !!!
$9A80	DEY		;
$9A81	BPL $9A8E	;
$9A83	BIT $24  	;
$9A85	.byte $02	; INVALID OPCODE !!!
$9A86	AND $19  	;
$9A88	ORA $0A,X	;
$9A8A	.byte $22	; INVALID OPCODE !!!
$9A8B	ASL $241B	;
$9A8E	BPL $9A9A	;
$9A90	ASL $0E,X	;
$9A92	.byte $22	; INVALID OPCODE !!!
$9A93	INY		;
$9A94	BPL $9AA2	;
$9A96	BIT $24  	;
$9A98	.byte $0b	; INVALID OPCODE !!!
$9A99	ASL A		;
$9A9A	ORA $15,X	;
$9A9C	CLC		;
$9A9D	CLC		;
$9A9E	.byte $17	; INVALID OPCODE !!!
$9A9F	BIT $24  	;
$9AA1	ORA $121B,X	;
$9AA4	ORA $4923,Y	; unknown register 
$9AA7	ASL $01F4	;
$9AAA	ORA #$08	;
$9AAC	.byte $04	; INVALID OPCODE !!!
$9AAD	BIT $17  	;
$9AAF	.byte $12	; INVALID OPCODE !!!
$9AB0	.byte $17	; INVALID OPCODE !!!
$9AB1	ORA $170E,X	;
$9AB4	ORA $0018	;
$9AB7	JSR $C0FA	;
$9ABA	JSR $D905	;
$9ABD	LDA #$00	;
$9ABF	STA $19  	;
$9AC1	JSR $F45B	;
$9AC4	LDA $19  	;
$9AC6	BEQ $9AE7	;
$9AC8	JSR $DAFE	;
$9ACB	JSR $E75E	;
$9ACE	TAX		;
$9ACF	AND #$10	;
$9AD1	BNE $9AE6	;
$9AD3	TXA		;
$9AD4	AND #$20	;
$9AD6	BEQ $9AE3	;
$9AD8	LDA #$00	;
$9ADA	STA $19  	;
$9ADC	LDX $3F  	;
$9ADE	LDA $DAFB,X	;
$9AE1	STA $3F  	;
$9AE3	JMP $DAC1	; (in an if statement) 
$9AE6	RTS		; (within an if statement) 
$9AE7	INC $3A  	;
$9AE9	INC $40  	;
$9AEB	LDA #$00	;
$9AED	STA $4015	;IRQ status / Sound enable
$9AF0	STA $16  	;
$9AF2	JSR $F1E8	;
$9AF5	LDA #$00	;
$9AF7	STA $3A  	;
$9AF9	BEQ $9AB7	;
$9AFB	ORA ($02,X)	;
$9AFD	BRK		;
$9AFE	LDA $3F  	;
$9B00	LSR A		;
$9B01	STA $16  	;
$9B03	LDA $3F  	;
$9B05	TAX		;
$9B06	AND #$01	;
$9B08	STA $40  	;
$9B0A	LDA $DB1D,X	;
$9B0D	STA $057B	;
$9B10	LDA #$2c	;
$9B12	STA $0567	;
$9B15	LDX #$00	;
$9B17	STX $055D	;
$9B1A	JMP $CE25	;

$9B1D	STY $AC9C	;
$9B20	RTI		;

$9B21	.byte $4f	; INVALID OPCODE !!!
$9B22	INX		;
$9B23	.byte $62	; INVALID OPCODE !!!
$9B24	ADC $D77E	;
$9B27	.byte $62	; INVALID OPCODE !!!
$9B28	.byte $8f	; INVALID OPCODE !!!
$9B29	SBC $62C0,Y	; saved-to-battery RAM 
$9B2C	.byte $a3	; INVALID OPCODE !!!
$9B2D	ORA $62D7	; saved-to-battery RAM 
$9B30	.byte $db	; INVALID OPCODE !!!
$9B31	.byte $db	; INVALID OPCODE !!!
$9B32	.byte $db	; INVALID OPCODE !!!
$9B33	.byte $db	; INVALID OPCODE !!!
$9B34	.byte $db	; INVALID OPCODE !!!
$9B35	.byte $db	; INVALID OPCODE !!!
$9B36	.byte $db	; INVALID OPCODE !!!
$9B37	.byte $db	; INVALID OPCODE !!!
$9B38	.byte $db	; INVALID OPCODE !!!
$9B39	.byte $db	; INVALID OPCODE !!!
$9B3A	.byte $db	; INVALID OPCODE !!!
$9B3B	.byte $db	; INVALID OPCODE !!!
$9B3C	.byte $db	; INVALID OPCODE !!!
$9B3D	.byte $dc	; INVALID OPCODE !!!
$9B3E	.byte $db	; INVALID OPCODE !!!
$9B3F	.byte $db	; INVALID OPCODE !!!
$9B40	AND ($DC,X)	;
$9B42	.byte $2f	; INVALID OPCODE !!!
$9B43	CMP $0000,X	;
$9B46	BPL $9B4E	;
$9B48	.byte $ff	; INVALID OPCODE !!!
$9B49	.byte $ff	; INVALID OPCODE !!!
$9B4A	STY $02DF	;
$9B4D	BVS $9B2D	;
$9B4F	AND ($DC,X)	;
$9B51	.byte $2f	; INVALID OPCODE !!!
$9B52	CMP $DD41,X	;
$9B55	BRK		;
$9B56	BRK		;
$9B57	CLC		;
$9B58	.byte $0c	; INVALID OPCODE !!!
$9B59	.byte $04	; INVALID OPCODE !!!
$9B5A	ASL $FFFF	;
$9B5D	STX $DF,Y 	;
$9B5F	.byte $04	; INVALID OPCODE !!!
$9B60	.byte $7c	; INVALID OPCODE !!!
$9B61	DEC $DCC0,X	;
$9B64	BRK		;
$9B65	BRK		;
$9B66	.byte $ff	; INVALID OPCODE !!!
$9B67	.byte $ff	; INVALID OPCODE !!!
$9B68	LDX $DF  	;
$9B6A	BRK		;
$9B6B	BCC $9B4B	;
$9B6D	AND ($DC,X)	;
$9B6F	.byte $54	; INVALID OPCODE !!!
$9B70	CMP $0000,X	;
$9B73	PHP		;
$9B74	ASL $18  	;
$9B76	ASL A		;
$9B77	.byte $ff	; INVALID OPCODE !!!
$9B78	.byte $ff	; INVALID OPCODE !!!
$9B79	.byte $a7	; INVALID OPCODE !!!
$9B7A	.byte $df	; INVALID OPCODE !!!
$9B7B	ASL $94  	;
$9B7D	DEC $DC21,X	;
$9B80	.byte $73	; INVALID OPCODE !!!
$9B81	CMP $0000,X	;
$9B84	.byte $04	; INVALID OPCODE !!!
$9B85	ASL $12  	;
$9B87	PHP		;
$9B88	.byte $ff	; INVALID OPCODE !!!
$9B89	.byte $ff	; INVALID OPCODE !!!
$9B8A	.byte $b7	; INVALID OPCODE !!!
$9B8B	.byte $df	; INVALID OPCODE !!!
$9B8C	.byte $07	; INVALID OPCODE !!!
$9B8D	BCS $9B6D	;
$9B8F	AND ($DC,X)	;
$9B91	STA $00DD,Y	;
$9B94	BRK		;
$9B95	ASL $06  	;
$9B97	.byte $14	; INVALID OPCODE !!!
$9B98	BPL $9B99	;
$9B9A	.byte $0f	; INVALID OPCODE !!!
$9B9B	ORA $FF01	;
$9B9E	DEX		;
$9B9F	.byte $df	; INVALID OPCODE !!!
$9BA0	ORA #$d0	;
$9BA2	DEC $DC21,X	;
$9BA5	CPY $DD  	;
$9BA7	BRK		;
$9BA8	BRK		;
$9BA9	.byte $04	; INVALID OPCODE !!!
$9BAA	ASL $10  	;
$9BAC	ASL $08FF	;
$9BAF	ASL $0D03	;
$9BB2	ORA #$03	;
$9BB4	.byte $12	; INVALID OPCODE !!!
$9BB5	PHP		;
$9BB6	.byte $03	; INVALID OPCODE !!!
$9BB7	.byte $17	; INVALID OPCODE !!!
$9BB8	ORA $FF03	;
$9BBB	CMP $03DF,X	;
$9BBE	SED		;
$9BBF	DEC $DC21,X	;
$9BC2	.byte $54	; INVALID OPCODE !!!
$9BC3	CMP $0000,X	;
$9BC6	BPL $9BCE	;
$9BC8	.byte $1a	; INVALID OPCODE !!!
$9BC9	.byte $0c	; INVALID OPCODE !!!
$9BCA	.byte $ff	; INVALID OPCODE !!!
$9BCB	PHP		;
$9BCC	PHP		;
$9BCD	ORA ($18,X)	;
$9BCF	.byte $04	; INVALID OPCODE !!!
$9BD0	ORA ($FF,X)	;
$9BD2	.byte $a7	; INVALID OPCODE !!!
$9BD3	.byte $df	; INVALID OPCODE !!!
$9BD4	ASL $94  	;
$9BD6	DEC $DC21,X	;
$9BD9	CMP ($DD),Y	;
$9BDB	BRK		;
$9BDC	BRK		;
$9BDD	ASL $0C06	;
$9BE0	.byte $14	; INVALID OPCODE !!!
$9BE1	.byte $ff	; INVALID OPCODE !!!
$9BE2	.byte $ff	; INVALID OPCODE !!!
$9BE3	SBC $06DF	;
$9BE6	PHP		;
$9BE7	.byte $df	; INVALID OPCODE !!!
$9BE8	AND ($DC,X)	;
$9BEA	.byte $f7	; INVALID OPCODE !!!
$9BEB	CMP $0000,X	;
$9BEE	.byte $04	; INVALID OPCODE !!!
$9BEF	PHP		;
$9BF0	ASL $10,X	;
$9BF2	.byte $ff	; INVALID OPCODE !!!
$9BF3	.byte $ff	; INVALID OPCODE !!!
$9BF4	SBC $09DF,X	;
$9BF7	BIT $DF  	;
$9BF9	AND ($DC,X)	;
$9BFB	PLP		;
$9BFC	DEC $0000,X	;
$9BFF	.byte $04	; INVALID OPCODE !!!
$9C00	BPL $9C1A	;
$9C02	BPL $9C03	;
$9C04	ASL $0106	;
$9C07	.byte $ff	; INVALID OPCODE !!!
$9C08	ORA $07E0	;
$9C0B	JMP $21DF	; (in an if statement) 
$9C0E	.byte $dc	; INVALID OPCODE !!!
$9C0F	EOR ($DE),Y	;
$9C11	BRK		;
$9C12	BRK		;
$9C13	.byte $04	; INVALID OPCODE !!!
$9C14	PHP		;
$9C15	ASL $FF10	;
$9C18	BPL $9C21	;
$9C1A	ORA ($FF,X)	;
$9C1C	JSR $07E0	;
$9C1F	JMP ($23DF)	;
$9C22	RTI		;

$9C23	DEY		;
$9C24	AND $3938,Y	;
$9C27	SEC		;
$9C28	AND $3938,Y	;
$9C2B	.byte $33	; INVALID OPCODE !!!
$9C2C	BIT $24  	;
$9C2E	BIT $24  	;
$9C30	BIT $24  	;
$9C32	BIT $24  	;
$9C34	BIT $24  	;
$9C36	BIT $24  	;
$9C38	BIT $24  	;
$9C3A	BIT $24  	;
$9C3C	BMI $9C76	;
$9C3E	AND $3938,Y	;
$9C41	SEC		;
$9C42	AND $3C38,Y	;
$9C45	.byte $3b	; INVALID OPCODE !!!
$9C46	.byte $3c	; INVALID OPCODE !!!
$9C47	.byte $3b	; INVALID OPCODE !!!
$9C48	.byte $3c	; INVALID OPCODE !!!
$9C49	.byte $3b	; INVALID OPCODE !!!
$9C4A	.byte $3c	; INVALID OPCODE !!!
$9C4B	AND $5958,X	; MMC5 register or expansion RAM 
$9C4E	.byte $5a	; INVALID OPCODE !!!
$9C4F	.byte $5b	; INVALID OPCODE !!!
$9C50	CLI		;
$9C51	EOR $5B5A,Y	; MMC5 register or expansion RAM 
$9C54	CLI		;
$9C55	EOR $5B5A,Y	; MMC5 register or expansion RAM 
$9C58	CLI		;
$9C59	EOR $5B5A,Y	; MMC5 register or expansion RAM 
$9C5C	.byte $3a	; INVALID OPCODE !!!
$9C5D	.byte $3b	; INVALID OPCODE !!!
$9C5E	.byte $3c	; INVALID OPCODE !!!
$9C5F	.byte $3b	; INVALID OPCODE !!!
$9C60	.byte $3c	; INVALID OPCODE !!!
$9C61	.byte $3b	; INVALID OPCODE !!!
$9C62	.byte $3c	; INVALID OPCODE !!!
$9C63	.byte $3b	; INVALID OPCODE !!!
$9C64	RTS		; (within an if statement) 
$9C65	ADC ($62,X)	;
$9C67	.byte $63	; INVALID OPCODE !!!
$9C68	RTS		; (within an if statement) 
$9C69	ADC ($62,X)	;
$9C6B	.byte $63	; INVALID OPCODE !!!
$9C6C	.byte $5c	; INVALID OPCODE !!!
$9C6D	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C70	.byte $5c	; INVALID OPCODE !!!
$9C71	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C74	.byte $5c	; INVALID OPCODE !!!
$9C75	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C78	.byte $5c	; INVALID OPCODE !!!
$9C79	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C7C	RTS		;

$9C7D	ADC ($62,X)	;
$9C7F	.byte $63	; INVALID OPCODE !!!
$9C80	RTS		;

$9C81	ADC ($62,X)	;
$9C83	.byte $63	; INVALID OPCODE !!!
$9C84	.byte $5c	; INVALID OPCODE !!!
$9C85	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C88	.byte $5c	; INVALID OPCODE !!!
$9C89	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C8C	.byte $5c	; INVALID OPCODE !!!
$9C8D	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C90	.byte $5c	; INVALID OPCODE !!!
$9C91	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C94	.byte $5c	; INVALID OPCODE !!!
$9C95	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C98	.byte $5c	; INVALID OPCODE !!!
$9C99	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9C9C	.byte $5c	; INVALID OPCODE !!!
$9C9D	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9CA0	.byte $5c	; INVALID OPCODE !!!
$9CA1	EOR $5F5E,X	; MMC5 register or expansion RAM 
$9CA4	RTI		;

$9CA5	BVC $9CF7	;
$9CA7	BVC $9CF9	;
$9CA9	BCC $9C4B	;
$9CAB	LDY #$23	;
$9CAD	BEQ $9CBF	;
$9CAF	BRK		;
$9CB0	BRK		;
$9CB1	LDY #$a0	;
$9CB3	LDY #$a0	;
$9CB5	BRK		;
$9CB6	BRK		;
$9CB7	ASL A		;
$9CB8	ASL A		;
$9CB9	ASL A		;
$9CBA	ASL A		;
$9CBB	ASL A		;
$9CBC	ASL A		;
$9CBD	ASL A		;
$9CBE	ASL A		;
$9CBF	BRK		;
$9CC0	.byte $a3	; INVALID OPCODE !!!
$9CC1	.byte $04	; INVALID OPCODE !!!
$9CC2	.byte $04	; INVALID OPCODE !!!
$9CC3	.byte $93	; INVALID OPCODE !!!
$9CC4	STY $94,X	;
$9CC6	STY $A3,X	;
$9CC8	ORA $04  	;
$9CCA	STA $96,X	;
$9CCC	STX $96,Y 	;
$9CCE	LDX #$ea	;
$9CD0	ORA $93  	;
$9CD2	STY $94,X	;
$9CD4	STY $94,X	;
$9CD6	LDX #$eb	;
$9CD8	ORA $95  	;
$9CDA	STX $96,Y 	;
$9CDC	STX $96,Y 	;
$9CDE	.byte $a3	; INVALID OPCODE !!!
$9CDF	.byte $34	; INVALID OPCODE !!!
$9CE0	.byte $03	; INVALID OPCODE !!!
$9CE1	.byte $93	; INVALID OPCODE !!!
$9CE2	STY $94,X	;
$9CE4	.byte $a3	; INVALID OPCODE !!!
$9CE5	AND $03,X	;
$9CE7	STA $96,X	;
$9CE9	STX $A3,Y 	;
$9CEB	.byte $1a	; INVALID OPCODE !!!
$9CEC	.byte $04	; INVALID OPCODE !!!
$9CED	.byte $93	; INVALID OPCODE !!!
$9CEE	STY $94,X	;
$9CF0	STY $A3,X	;
$9CF2	.byte $1b	; INVALID OPCODE !!!
$9CF3	.byte $04	; INVALID OPCODE !!!
$9CF4	STA $96,X	;
$9CF6	STX $96,Y 	;
$9CF8	.byte $63	; INVALID OPCODE !!!
$9CF9	.byte $80	; INVALID OPCODE !!!
$9CFA	JSR $2397	;
$9CFD	LDY #$20	;
$9CFF	TYA		;
$9D00	STA $9998,Y	;
$9D03	TYA		;
$9D04	STA $9998,Y	;
$9D07	TYA		;
$9D08	STA $9998,Y	;
$9D0B	TYA		;
$9D0C	STA $9998,Y	;
$9D0F	TYA		;
$9D10	STA $9998,Y	;
$9D13	TYA		;
$9D14	STA $9998,Y	;
$9D17	TYA		;
$9D18	STA $9998,Y	;
$9D1B	TYA		;
$9D1C	STA $9998,Y	;
$9D1F	.byte $23	; INVALID OPCODE !!!
$9D20	CPY #$08	;
$9D22	RTI		;

$9D23	BVC $9D75	;
$9D25	BVC $9D77	;
$9D27	BCC $9CC9	;
$9D29	LDY #$63	;
$9D2B	INX		;
$9D2C	BPL $9D2D	;
$9D2E	BRK		;
$9D2F	.byte $22	; INVALID OPCODE !!!
$9D30	EOR #$0e	;
$9D32	BMI $9D65	;
$9D34	.byte $32	; INVALID OPCODE !!!
$9D35	AND ($32),Y	;
$9D37	AND ($32),Y	;
$9D39	AND ($32),Y	;
$9D3B	AND ($32),Y	;
$9D3D	AND ($32),Y	;
$9D3F	.byte $33	; INVALID OPCODE !!!
$9D40	BRK		;
$9D41	AND ($57,X)	;
$9D43	ASL $30  	;
$9D45	AND ($32),Y	;
$9D47	AND ($32),Y	;
$9D49	.byte $33	; INVALID OPCODE !!!
$9D4A	AND ($65,X)	;
$9D4C	ASL $30  	;
$9D4E	AND ($32),Y	;
$9D50	AND ($32),Y	;
$9D52	.byte $33	; INVALID OPCODE !!!
$9D53	BRK		;
$9D54	AND ($90,X)	;
$9D56	.byte $03	; INVALID OPCODE !!!
$9D57	BMI $9D8A	;
$9D59	.byte $33	; INVALID OPCODE !!!
$9D5A	.byte $22	; INVALID OPCODE !!!
$9D5B	ROL $03  	;
$9D5D	BMI $9D90	;
$9D5F	.byte $33	; INVALID OPCODE !!!
$9D60	.byte $22	; INVALID OPCODE !!!
$9D61	.byte $57	; INVALID OPCODE !!!
$9D62	.byte $03	; INVALID OPCODE !!!
$9D63	BMI $9D96	;
$9D65	.byte $33	; INVALID OPCODE !!!
$9D66	.byte $22	; INVALID OPCODE !!!
$9D67	JMP ($3003)	;
$9D6A	AND ($33),Y	;
$9D6C	.byte $22	; INVALID OPCODE !!!
$9D6D	.byte $f2	; INVALID OPCODE !!!
$9D6E	.byte $03	; INVALID OPCODE !!!
$9D6F	BMI $9DA2	;
$9D71	.byte $33	; INVALID OPCODE !!!
$9D72	BRK		;
$9D73	JSR $03CB	;
$9D76	BMI $9DA9	;
$9D78	.byte $33	; INVALID OPCODE !!!
$9D79	LDA ($6D,X)	;
$9D7B	.byte $03	; INVALID OPCODE !!!
$9D7C	ROL $403F,X	; unknown register 
$9D7F	LDA ($59,X)	;
$9D81	.byte $04	; INVALID OPCODE !!!
$9D82	ROL $3F3F,X	;
$9D85	RTI		; (within an if statement) 
$9D86	LDA ($A5,X)	;
$9D88	.byte $03	; INVALID OPCODE !!!
$9D89	ROL $403F,X	; unknown register 
$9D8C	.byte $22	; INVALID OPCODE !!!
$9D8D	TAX		;
$9D8E	.byte $03	; INVALID OPCODE !!!
$9D8F	BMI $9DC2	;
$9D91	.byte $33	; INVALID OPCODE !!!
$9D92	.byte $22	; INVALID OPCODE !!!
$9D93	.byte $b3	; INVALID OPCODE !!!
$9D94	.byte $03	; INVALID OPCODE !!!
$9D95	BMI $9DC8	;
$9D97	.byte $33	; INVALID OPCODE !!!
$9D98	BRK		;
$9D99	JSR $02E2	;
$9D9C	BMI $9DD1	;
$9D9E	JSR $02FB	;
$9DA1	BMI $9DD6	;
$9DA3	AND ($57,X)	;
$9DA5	.byte $02	; INVALID OPCODE !!!
$9DA6	BMI $9DDB	;
$9DA8	AND ($93,X)	;
$9DAA	.byte $02	; INVALID OPCODE !!!
$9DAB	BMI $9DE0	;
$9DAD	.byte $22	; INVALID OPCODE !!!
$9DAE	.byte $0b	; INVALID OPCODE !!!
$9DAF	.byte $02	; INVALID OPCODE !!!
$9DB0	BMI $9DE5	;
$9DB2	.byte $22	; INVALID OPCODE !!!
$9DB3	.byte $47	; INVALID OPCODE !!!
$9DB4	.byte $02	; INVALID OPCODE !!!
$9DB5	BMI $9DEA	;
$9DB7	.byte $22	; INVALID OPCODE !!!
$9DB8	.byte $83	; INVALID OPCODE !!!
$9DB9	.byte $02	; INVALID OPCODE !!!
$9DBA	BMI $9DEF	;
$9DBC	.byte $22	; INVALID OPCODE !!!
$9DBD	.byte $cf	; INVALID OPCODE !!!
$9DBE	.byte $04	; INVALID OPCODE !!!
$9DBF	BMI $9DF2	;
$9DC1	.byte $32	; INVALID OPCODE !!!
$9DC2	.byte $33	; INVALID OPCODE !!!
$9DC3	BRK		;
$9DC4	.byte $22	; INVALID OPCODE !!!
$9DC5	DEX		;
$9DC6	.byte $03	; INVALID OPCODE !!!
$9DC7	BMI $9DFA	;
$9DC9	.byte $33	; INVALID OPCODE !!!
$9DCA	.byte $22	; INVALID OPCODE !!!
$9DCB	.byte $d2	; INVALID OPCODE !!!
$9DCC	.byte $03	; INVALID OPCODE !!!
$9DCD	BMI $9E00	;
$9DCF	.byte $33	; INVALID OPCODE !!!
$9DD0	BRK		;
$9DD1	AND ($08,X)	;
$9DD3	.byte $04	; INVALID OPCODE !!!
$9DD4	BMI $9E07	;
$9DD6	.byte $32	; INVALID OPCODE !!!
$9DD7	.byte $33	; INVALID OPCODE !!!
$9DD8	AND ($14,X)	;
$9DDA	.byte $04	; INVALID OPCODE !!!
$9DDB	BMI $9E0E	;
$9DDD	.byte $32	; INVALID OPCODE !!!
$9DDE	.byte $33	; INVALID OPCODE !!!
$9DDF	LDA ($A5,X)	;
$9DE1	.byte $04	; INVALID OPCODE !!!
$9DE2	ROL $3F3F,X	;
$9DE5	RTI		; (within an if statement) 
$9DE6	LDA ($BA,X)	;
$9DE8	.byte $04	; INVALID OPCODE !!!
$9DE9	ROL $3F3F,X	;
$9DEC	RTI		; (within an if statement) 
$9DED	.byte $22	; INVALID OPCODE !!!
$9DEE	JMP ($3006)	;
$9DF1	AND ($32),Y	;
$9DF3	AND ($32),Y	;
$9DF5	.byte $33	; INVALID OPCODE !!!
$9DF6	BRK		;
$9DF7	.byte $22	; INVALID OPCODE !!!
$9DF8	INC $3004	;
$9DFB	AND ($32),Y	;
$9DFD	.byte $33	; INVALID OPCODE !!!
$9DFE	JSR $03F9	;
$9E01	BMI $9E34	;
$9E03	.byte $33	; INVALID OPCODE !!!
$9E04	LDA ($1A,X)	;
$9E06	.byte $03	; INVALID OPCODE !!!
$9E07	.byte $3f	; INVALID OPCODE !!!
$9E08	.byte $3f	; INVALID OPCODE !!!
$9E09	RTI		; (within an if statement) 
$9E0A	AND ($90,X)	;
$9E0C	.byte $03	; INVALID OPCODE !!!
$9E0D	BMI $9E40	;
$9E0F	.byte $33	; INVALID OPCODE !!!
$9E10	LDA ($B1,X)	;
$9E12	.byte $03	; INVALID OPCODE !!!
$9E13	.byte $3f	; INVALID OPCODE !!!
$9E14	.byte $3f	; INVALID OPCODE !!!
$9E15	RTI		; (within an if statement) 
$9E16	.byte $22	; INVALID OPCODE !!!
$9E17	PLP		;
$9E18	.byte $03	; INVALID OPCODE !!!
$9E19	BMI $9E4C	;
$9E1B	.byte $33	; INVALID OPCODE !!!
$9E1C	LDX #$49	;
$9E1E	.byte $03	; INVALID OPCODE !!!
$9E1F	.byte $3f	; INVALID OPCODE !!!
$9E20	.byte $3f	; INVALID OPCODE !!!
$9E21	RTI		; (within an if statement) 
$9E22	JSR $02EA	;
$9E25	BMI $9E5A	;
$9E27	BRK		;
$9E28	LDX #$6c	;
$9E2A	.byte $03	; INVALID OPCODE !!!
$9E2B	ROL $403F,X	; unknown register 
$9E2E	LDX #$73	;
$9E30	.byte $03	; INVALID OPCODE !!!
$9E31	ROL $403F,X	; unknown register 
$9E34	JSR $04E4	;
$9E37	BMI $9E6A	;
$9E39	.byte $32	; INVALID OPCODE !!!
$9E3A	.byte $33	; INVALID OPCODE !!!
$9E3B	JSR $04F8	;
$9E3E	BMI $9E71	;
$9E40	.byte $32	; INVALID OPCODE !!!
$9E41	.byte $33	; INVALID OPCODE !!!
$9E42	AND ($A8,X)	;
$9E44	.byte $04	; INVALID OPCODE !!!
$9E45	BMI $9E78	;
$9E47	.byte $32	; INVALID OPCODE !!!
$9E48	.byte $33	; INVALID OPCODE !!!
$9E49	AND ($B5,X)	;
$9E4B	.byte $04	; INVALID OPCODE !!!
$9E4C	BMI $9E7F	;
$9E4E	.byte $32	; INVALID OPCODE !!!
$9E4F	.byte $33	; INVALID OPCODE !!!
$9E50	BRK		;
$9E51	.byte $22	; INVALID OPCODE !!!
$9E52	.byte $64	; INVALID OPCODE !!!
$9E53	.byte $02	; INVALID OPCODE !!!
$9E54	BMI $9E89	;
$9E56	.byte $22	; INVALID OPCODE !!!
$9E57	PHP		;
$9E58	.byte $02	; INVALID OPCODE !!!
$9E59	BMI $9E8E	;
$9E5B	AND ($AC,X)	;
$9E5D	.byte $02	; INVALID OPCODE !!!
$9E5E	BMI $9E93	;
$9E60	AND ($B4,X)	;
$9E62	.byte $02	; INVALID OPCODE !!!
$9E63	BMI $9E98	;
$9E65	.byte $22	; INVALID OPCODE !!!
$9E66	CLC		;
$9E67	.byte $02	; INVALID OPCODE !!!
$9E68	BMI $9E9D	;
$9E6A	.byte $22	; INVALID OPCODE !!!
$9E6B	.byte $7c	; INVALID OPCODE !!!
$9E6C	.byte $02	; INVALID OPCODE !!!
$9E6D	BMI $9EA2	;
$9E6F	BRK		;
$9E70	BPL $9E3A	;
$9E72	PHA		;
$9E73	SEC		;
$9E74	.byte $ff	; INVALID OPCODE !!!
$9E75	CLV		;
$9E76	.byte $cf	; INVALID OPCODE !!!
$9E77	.byte $cf	; INVALID OPCODE !!!
$9E78	.byte $8f	; INVALID OPCODE !!!
$9E79	CPX #$e0	;
$9E7B	TYA		;
$9E7C	BPL $9E42	;
$9E7E	PHA		;
$9E7F	CLV		;
$9E80	PLP		;
$9E81	.byte $3c	; INVALID OPCODE !!!
$9E82	.byte $ff	; INVALID OPCODE !!!
$9E83	CLV		;
$9E84	INX		;
$9E85	CLI		;
$9E86	.byte $cf	; INVALID OPCODE !!!
$9E87	.byte $cf	; INVALID OPCODE !!!
$9E88	.byte $8f	; INVALID OPCODE !!!
$9E89	.byte $4f	; INVALID OPCODE !!!
$9E8A	.byte $57	; INVALID OPCODE !!!
$9E8B	CPX #$e0	;
$9E8D	TYA		;
$9E8E	CLI		;
$9E8F	RTS		; (within an if statement) 
$9E90	BPL $9E91	;
$9E92	.byte $df	; INVALID OPCODE !!!
$9E93	CPX $C810	;
$9E96	.byte $80	; INVALID OPCODE !!!
$9E97	BMI $9E51	;
$9E99	RTS		; (within an if statement) 
$9E9A	BCC $9ED4	;
$9E9C	.byte $ff	; INVALID OPCODE !!!
$9E9D	TYA		;
$9E9E	PHA		;
$9E9F	BNE $9F19	;
$9EA1	TAY		;
$9EA2	.byte $cf	; INVALID OPCODE !!!
$9EA3	.byte $cf	; INVALID OPCODE !!!
$9EA4	.byte $5f	; INVALID OPCODE !!!
$9EA5	.byte $87	; INVALID OPCODE !!!
$9EA6	.byte $8f	; INVALID OPCODE !!!
$9EA7	.byte $97	; INVALID OPCODE !!!
$9EA8	.byte $b7	; INVALID OPCODE !!!
$9EA9	CPX #$e0	;
$9EAB	PLA		;
$9EAC	BCC $9E46	;
$9EAE	LDY #$c0	;
$9EB0	BPL $9E7A	;
$9EB2	CLI		;
$9EB3	PLA		;
$9EB4	INY		;
$9EB5	PLP		;
$9EB6	BVC $9E50	;
$9EB8	SEC		;
$9EB9	.byte $ff	; INVALID OPCODE !!!
$9EBA	BVS $9F34	;
$9EBC	BNE $9EEE	;
$9EBE	PLA		;
$9EBF	BCS $9E90	;
$9EC1	.byte $cf	; INVALID OPCODE !!!
$9EC2	.byte $2f	; INVALID OPCODE !!!
$9EC3	.byte $57	; INVALID OPCODE !!!
$9EC4	.byte $4f	; INVALID OPCODE !!!
$9EC5	.byte $67	; INVALID OPCODE !!!
$9EC6	.byte $a7	; INVALID OPCODE !!!
$9EC7	.byte $a7	; INVALID OPCODE !!!
$9EC8	CPX #$e0	;
$9ECA	SEC		;
$9ECB	JMP ($7C6C)	;
$9ECE	BCS $9E80	;
$9ED0	BPL $9E9A	;
$9ED2	.byte $12	; INVALID OPCODE !!!
$9ED3	.byte $da	; INVALID OPCODE !!!
$9ED4	TSX		;
$9ED5	TXS		;
$9ED6	.byte $5a	; INVALID OPCODE !!!
$9ED7	.byte $3a	; INVALID OPCODE !!!
$9ED8	.byte $1a	; INVALID OPCODE !!!
$9ED9	.byte $7a	; INVALID OPCODE !!!
$9EDA	SEC		;
$9EDB	.byte $ff	; INVALID OPCODE !!!
$9EDC	ASL $C6E6,X	;
$9EDF	LDX $66  	;
$9EE1	LSR $26  	;
$9EE3	STX $CF,Y 	;
$9EE5	.byte $cf	; INVALID OPCODE !!!
$9EE6	.byte $37	; INVALID OPCODE !!!
$9EE7	.byte $37	; INVALID OPCODE !!!
$9EE8	.byte $4f	; INVALID OPCODE !!!
$9EE9	.byte $5f	; INVALID OPCODE !!!
$9EEA	.byte $7f	; INVALID OPCODE !!!
$9EEB	.byte $8f	; INVALID OPCODE !!!
$9EEC	.byte $9f	; INVALID OPCODE !!!
$9EED	.byte $af	; INVALID OPCODE !!!
$9EEE	CPX #$e0	;
$9EF0	RTI		; (within an if statement) 
$9EF1	RTI		; (within an if statement) 
$9EF2	CLI		;
$9EF3	PLA		;
$9EF4	DEY		;
$9EF5	TYA		;
$9EF6	TAY		;
$9EF7	CLV		;
$9EF8	BPL $9EC2	;
$9EFA	.byte $52	; INVALID OPCODE !!!
$9EFB	.byte $92	; INVALID OPCODE !!!
$9EFC	SEC		;
$9EFD	.byte $ff	; INVALID OPCODE !!!
$9EFE	ROR $A6  	;
$9F00	.byte $cf	; INVALID OPCODE !!!
$9F01	.byte $cf	; INVALID OPCODE !!!
$9F02	.byte $af	; INVALID OPCODE !!!
$9F03	.byte $af	; INVALID OPCODE !!!
$9F04	CPX #$e0	;
$9F06	CLV		;
$9F07	CLV		;
$9F08	BPL $9ED2	;
$9F0A	RTI		; (within an if statement) 
$9F0B	LDY #$28	;
$9F0D	BNE $9F6F	;
$9F0F	SEC		;
$9F10	.byte $ff	; INVALID OPCODE !!!
$9F11	RTS		; (within an if statement) 
$9F12	CPY #$30	;
$9F14	CLD		;
$9F15	BCC $9EE6	;
$9F17	.byte $cf	; INVALID OPCODE !!!
$9F18	.byte $3f	; INVALID OPCODE !!!
$9F19	.byte $3f	; INVALID OPCODE !!!
$9F1A	.byte $67	; INVALID OPCODE !!!
$9F1B	.byte $67	; INVALID OPCODE !!!
$9F1C	.byte $97	; INVALID OPCODE !!!
$9F1D	CPX #$e0	;
$9F1F	PHA		;
$9F20	PHA		;
$9F21	DEY		;
$9F22	DEY		;
$9F23	LDY #$10	;
$9F25	INY		;
$9F26	BVC $9EF0	;
$9F28	DEY		;
$9F29	RTI		; (within an if statement) 
$9F2A	BVS $9EFC	;
$9F2C	DEY		;
$9F2D	PHA		;
$9F2E	SEC		;
$9F2F	.byte $ff	; INVALID OPCODE !!!
$9F30	RTS		; (within an if statement) 
$9F31	CPX #$98	;
$9F33	CLI		;
$9F34	BCC $9F0E	;
$9F36	BCC $9F88	;
$9F38	.byte $cf	; INVALID OPCODE !!!
$9F39	.byte $cf	; INVALID OPCODE !!!
$9F3A	.byte $37	; INVALID OPCODE !!!
$9F3B	.byte $37	; INVALID OPCODE !!!
$9F3C	.byte $5f	; INVALID OPCODE !!!
$9F3D	.byte $87	; INVALID OPCODE !!!
$9F3E	.byte $b7	; INVALID OPCODE !!!
$9F3F	.byte $3c	; INVALID OPCODE !!!
$9F40	.byte $64	; INVALID OPCODE !!!
$9F41	STY $E0E0	;
$9F44	RTI		; (within an if statement) 
$9F45	RTI		; (within an if statement) 
$9F46	PLA		;
$9F47	BCC $9F09	;
$9F49	RTS		; (within an if statement) 
$9F4A	.byte $80	; INVALID OPCODE !!!
$9F4B	TAY		;
$9F4C	BPL $9F16	;
$9F4E	JSR $40C0	; unknown register 
$9F51	TAY		;
$9F52	RTS		; (within an if statement) 
$9F53	TYA		;
$9F54	SEC		;
$9F55	.byte $ff	; INVALID OPCODE !!!
$9F56	RTI		; (within an if statement) 
$9F57	CPX #$60	;
$9F59	INY		;
$9F5A	PLA		;
$9F5B	LDY #$cf	;
$9F5D	.byte $cf	; INVALID OPCODE !!!
$9F5E	.byte $37	; INVALID OPCODE !!!
$9F5F	.byte $37	; INVALID OPCODE !!!
$9F60	.byte $67	; INVALID OPCODE !!!
$9F61	.byte $67	; INVALID OPCODE !!!
$9F62	.byte $97	; INVALID OPCODE !!!
$9F63	.byte $97	; INVALID OPCODE !!!
$9F64	CPX #$e0	;
$9F66	RTI		; (within an if statement) 
$9F67	RTI		; (within an if statement) 
$9F68	BVS $9FDA	;
$9F6A	BCS $9F1C	;
$9F6C	BPL $9F36	;
$9F6E	JSR $6040	; saved-to-battery RAM 
$9F71	LDY #$c0	;
$9F73	CPX #$38	;
$9F75	.byte $ff	; INVALID OPCODE !!!
$9F76	BMI $9FC8	;
$9F78	BVS $9F2A	;
$9F7A	BNE $9F6C	;
$9F7C	.byte $cf	; INVALID OPCODE !!!
$9F7D	.byte $cf	; INVALID OPCODE !!!
$9F7E	.byte $97	; INVALID OPCODE !!!
$9F7F	.byte $7f	; INVALID OPCODE !!!
$9F80	.byte $67	; INVALID OPCODE !!!
$9F81	.byte $67	; INVALID OPCODE !!!
$9F82	.byte $7f	; INVALID OPCODE !!!
$9F83	.byte $97	; INVALID OPCODE !!!
$9F84	CPX #$e0	;
$9F86	LDY #$88	;
$9F88	BVS $9FFA	;
$9F8A	DEY		;
$9F8B	LDY #$03	;
$9F8D	CLI		;
$9F8E	SEI		;
$9F8F	.byte $04	; INVALID OPCODE !!!
$9F90	SEI		;
$9F91	SEI		;
$9F92	.byte $04	; INVALID OPCODE !!!
$9F93	TYA		;
$9F94	SEI		;
$9F95	.byte $04	; INVALID OPCODE !!!
$9F96	ORA $C8  	;
$9F98	SEC		;
$9F99	ORA $38  	;
$9F9B	RTI		; (within an if statement) 
$9F9C	ORA $58  	;
$9F9E	SEI		;
$9F9F	.byte $04	; INVALID OPCODE !!!
$9FA0	SEI		;
$9FA1	SEI		;
$9FA2	.byte $04	; INVALID OPCODE !!!
$9FA3	TYA		;
$9FA4	SEI		;
$9FA5	.byte $04	; INVALID OPCODE !!!
$9FA6	BRK		;
$9FA7	ORA $94  	;
$9FA9	LDY #$06	;
$9FAB	STY $48  	;
$9FAD	ORA $34  	;
$9FAF	BVS $9FB5	;
$9FB1	.byte $64	; INVALID OPCODE !!!
$9FB2	.byte $80	; INVALID OPCODE !!!
$9FB3	.byte $04	; INVALID OPCODE !!!
$9FB4	LDY $0478,X	;
$9FB7	ASL $5C  	;
$9FB9	CLC		;
$9FBA	ASL $24  	;
$9FBC	BVC $9FC3	;
$9FBE	.byte $64	; INVALID OPCODE !!!
$9FBF	RTI		; (within an if statement) 
$9FC0	ORA $C4  	;
$9FC2	SEC		;
$9FC3	ORA $54  	;
$9FC5	BCC $9FCB	;
$9FC7	.byte $9c	; INVALID OPCODE !!!
$9FC8	BCC $9FCE	;
$9FCA	ASL $10  	;
$9FCC	JSR $D806	;
$9FCF	JSR $B806	;
$9FD2	SEC		;
$9FD3	ORA $98  	;
$9FD5	PHA		;
$9FD6	ORA $58  	;
$9FD8	PLA		;
$9FD9	ORA $38  	;
$9FDB	SEI		;
$9FDC	.byte $04	; INVALID OPCODE !!!
$9FDD	ORA $54  	;
$9FDF	TYA		;
$9FE0	ORA $94  	;
$9FE2	TYA		;
$9FE3	ORA $6C  	;
$9FE5	AND $9406,Y	;
$9FE8	AND ($06),Y	;
$9FEA	LDY $0659,X	;
$9FED	ORA $50  	;
$9FEF	PLP		;
$9FF0	ASL $A8  	;
$9FF2	PLP		;
$9FF3	ASL $24  	;
$9FF5	BVC $9FFD	;
$9FF7	CPY $0650	;
$9FFA	BVS $9F7C	;
$9FFC	.byte $04	; INVALID OPCODE !!!
$9FFD	ORA $50  	;
$9FFF	JSR $C806	;
$A002	JSR $8406	;
$A005	PHA		;
$A006	ORA $44  	;
$A008	BVS $A00F	;
$A00A	SEI		;
$A00B	LDY #$04	;
$A00D	ASL $28  	;
$A00F	JSR $C806	;
$A012	JSR $4806	; unknown register 
$A015	BVC $A01C	;
$A017	BCS $A069	;
$A019	ORA $5C  	;
$A01B	.byte $80	; INVALID OPCODE !!!
$A01C	.byte $04	; INVALID OPCODE !!!
$A01D	STY $80,X	;
$A01F	.byte $04	; INVALID OPCODE !!!
$A020	ASL $20  	;
$A022	.byte $80	; INVALID OPCODE !!!
$A023	.byte $04	; INVALID OPCODE !!!
$A024	RTI		; (within an if statement) 
$A025	PLA		;
$A026	ORA $60  	;
$A028	BVC $A030	;
$A02A	LDY #$50	;
$A02C	ASL $C0  	;
$A02E	PLA		;
$A02F	ORA $E0  	;
$A031	.byte $80	; INVALID OPCODE !!!
$A032	.byte $04	; INVALID OPCODE !!!
$A033	PHP		;
$A034	PHP		;
$A035	BEQ $A03F	;
$A037	PHP		;
$A038	BRK		;
$A039	BRK		;
$A03A	BRK		;
$A03B	BRK		;
$A03C	PHP		;
$A03D	PHP		;
$A03E	PHP		;
$A03F	BRK		;
$A040	BRK		;
$A041	ORA ($08,X)	;
$A043	PHP		;
$A044	ORA #$00	;
$A046	BRK		;
$A047	.byte $ff	; INVALID OPCODE !!!
$A048	PHP		;
$A049	PHP		;
$A04A	.byte $07	; INVALID OPCODE !!!
$A04B	INC $0000,X	;
$A04E	ASL $08  	;

function_A050:
$A050	PHP		;
$A051	.byte $02	; INVALID OPCODE !!!
$A052	BRK		;
$A053	BRK		;
$A054	ASL A		;
$A055	PHP		;
$A056	PHP		;
$A057	.byte $02	; INVALID OPCODE !!!
$A058	BRK		;
$A059	ORA ($0A,X)	;
$A05B	PHP		;
$A05C	ORA #$04	;
$A05E	BRK		;
$A05F	BRK		;
$A060	.byte $0c	; INVALID OPCODE !!!
$A061	PHP		;
$A062	PHP		;
$A063	BRK		;
$A064	BRK		;
$A065	INC $0808,X	;
$A068	ASL $FD  	;
$A06A	SBC $05FD,X	;
$A06D	ORA $05  	;
$A06F	PHP		;
$A070	PHP		;
$A071	PHP		;
$A072	BRK		;
$A073	BRK		;
$A074	BRK		;
$A075	PHP		;
$A076	PHP		;
$A077	.byte $07	; INVALID OPCODE !!!
$A078	BRK		;
$A079	BRK		;
$A07A	.byte $ff	; INVALID OPCODE !!!
$A07B	PHP		;
$A07C	PHP		;
$A07D	ORA #$00	;
$A07F	BRK		;
$A080	ORA ($0A,X)	;
$A082	PHP		;
$A083	PHP		;
$A084	.byte $02	; INVALID OPCODE !!!
$A085	BRK		;
$A086	BRK		;
$A087	ASL $08  	;
$A089	PHP		;
$A08A	INC $0000,X	;
$A08D	ASL $08  	;
$A08F	.byte $07	; INVALID OPCODE !!!
$A090	INC $FF00,X	;
$A093	.byte $04	; INVALID OPCODE !!!
$A094	PHP		;
$A095	PHP		;
$A096	.byte $fc	; INVALID OPCODE !!!
$A097	BRK		;
$A098	BRK		;
$A099	PHP		;
$A09A	PHP		;
$A09B	ASL A		;
$A09C	BRK		;
$A09D	BRK		;
$A09E	.byte $02	; INVALID OPCODE !!!
$A09F	.byte $0b	; INVALID OPCODE !!!
$A0A0	.byte $0b	; INVALID OPCODE !!!
$A0A1	.byte $0b	; INVALID OPCODE !!!
$A0A2	.byte $03	; INVALID OPCODE !!!
$A0A3	.byte $03	; INVALID OPCODE !!!
$A0A4	.byte $03	; INVALID OPCODE !!!
$A0A5	BRK		;
$A0A6	BRK		;
$A0A7	ORA ($02,X)	;
$A0A9	.byte $03	; INVALID OPCODE !!!
$A0AA	.byte $04	; INVALID OPCODE !!!
$A0AB	ORA $00  	;
$A0AD	BRK		;
$A0AE	ORA ($02,X)	;
$A0B0	.byte $03	; INVALID OPCODE !!!
$A0B1	ASL $07  	;
$A0B3	BRK		;
$A0B4	BRK		;
$A0B5	ORA ($02,X)	;
$A0B7	.byte $03	; INVALID OPCODE !!!
$A0B8	ASL $08  	;
$A0BA	BRK		;
$A0BB	ORA #$0a	;
$A0BD	.byte $02	; INVALID OPCODE !!!
$A0BE	.byte $0b	; INVALID OPCODE !!!
$A0BF	.byte $0c	; INVALID OPCODE !!!
$A0C0	ORA $00  	;
$A0C2	BRK		;
$A0C3	ORA ($02,X)	;
$A0C5	.byte $03	; INVALID OPCODE !!!
$A0C6	.byte $04	; INVALID OPCODE !!!
$A0C7	ORA $00  	;
$A0C9	BRK		;
$A0CA	ORA ($02,X)	;
$A0CC	ORA $050E	;
$A0CF	BRK		;
$A0D0	.byte $1a	; INVALID OPCODE !!!
$A0D1	.byte $1b	; INVALID OPCODE !!!
$A0D2	.byte $1c	; INVALID OPCODE !!!
$A0D3	ORA $1F1E,X	;
$A0D6	ORA ($1A,X)	;
$A0D8	.byte $1b	; INVALID OPCODE !!!
$A0D9	JSR $1E1D	;
$A0DC	.byte $fc	; INVALID OPCODE !!!
$A0DD	BRK		;
$A0DE	.byte $1a	; INVALID OPCODE !!!
$A0DF	AND ($22,X)	;
$A0E1	ORA $2423,X	;
$A0E4	BRK		;
$A0E5	BRK		;
$A0E6	SEC		;
$A0E7	AND $0D,X	;
$A0E9	AND $0037,Y	;
$A0EC	BRK		;
$A0ED	.byte $34	; INVALID OPCODE !!!
$A0EE	AND $03,X	;
$A0F0	ROL $37,X	;
$A0F2	BRK		;
$A0F3	ORA #$3a	;
$A0F5	AND $0B,X	;
$A0F7	.byte $3b	; INVALID OPCODE !!!
$A0F8	.byte $37	; INVALID OPCODE !!!
$A0F9	BRK		;
$A0FA	DEC $D0CF	;
$A0FD	CMP ($D2),Y	;
$A0FF	.byte $d3	; INVALID OPCODE !!!
$A100	BRK		;
$A101	AND $26  	;
$A103	.byte $27	; INVALID OPCODE !!!
$A104	PLP		;
$A105	AND #$2a	;
$A107	ORA ($28,X)	;
$A109	AND #$2c	;
$A10B	AND $26  	;
$A10D	.byte $2b	; INVALID OPCODE !!!
$A10E	BRK		;
$A10F	JMP $02CC	;

$A112	EOR $05CD	;
$A115	BRK		;
$A116	JMP $222F	;

$A119	EOR $2430	;
$A11C	.byte $07	; INVALID OPCODE !!!
$A11D	JMP $352F	;

$A120	EOR $3730	;
$A123	.byte $02	; INVALID OPCODE !!!
$A124	JMP $272F	;

$A127	EOR $2A30	;
$A12A	.byte $07	; INVALID OPCODE !!!
$A12B	JMP $2B2F	;

$A12E	EOR $2C30	;
$A131	BRK		;
$A132	.byte $0f	; INVALID OPCODE !!!
$A133	BPL $A137	;
$A135	ORA ($12),Y	;
$A137	ORA $00  	;
$A139	.byte $0f	; INVALID OPCODE !!!
$A13A	BPL $A13E	;
$A13C	ORA ($19),Y	;
$A13E	.byte $07	; INVALID OPCODE !!!
$A13F	BRK		;
$A140	.byte $0f	; INVALID OPCODE !!!
$A141	BPL $A145	;
$A143	ORA ($19),Y	;
$A145	PHP		;
$A146	BRK		;
$A147	.byte $13	; INVALID OPCODE !!!
$A148	.byte $14	; INVALID OPCODE !!!
$A149	.byte $02	; INVALID OPCODE !!!
$A14A	ORA $16,X	;
$A14C	ORA $00  	;
$A14E	.byte $0f	; INVALID OPCODE !!!
$A14F	BPL $A153	;
$A151	ORA ($12),Y	;
$A153	ORA $03  	;
$A155	.byte $13	; INVALID OPCODE !!!
$A156	.byte $17	; INVALID OPCODE !!!
$A157	.byte $02	; INVALID OPCODE !!!
$A158	ORA $18,X	;
$A15A	ORA $04  	;
$A15C	.byte $13	; INVALID OPCODE !!!
$A15D	AND $151C	;
$A160	ROL $051F	;
$A163	.byte $13	; INVALID OPCODE !!!
$A164	AND $1520	;
$A167	ROL $04FC	;
$A16A	.byte $13	; INVALID OPCODE !!!
$A16B	.byte $2f	; INVALID OPCODE !!!
$A16C	.byte $22	; INVALID OPCODE !!!
$A16D	ORA $30,X	;
$A16F	BIT $00  	;
$A171	.byte $13	; INVALID OPCODE !!!
$A172	.byte $3c	; INVALID OPCODE !!!
$A173	AND $15,X	;
$A175	AND $0037,X	;
$A178	.byte $0f	; INVALID OPCODE !!!
$A179	RTI		;

$A17A	AND $11,X	;
$A17C	EOR ($37,X)	;
$A17E	.byte $03	; INVALID OPCODE !!!
$A17F	.byte $13	; INVALID OPCODE !!!
$A180	ROL $1535,X	;
$A183	.byte $3f	; INVALID OPCODE !!!
$A184	.byte $37	; INVALID OPCODE !!!
$A185	BRK		;
$A186	.byte $d4	; INVALID OPCODE !!!
$A187	CMP $D0,X	;
$A189	DEC $D7,X	;
$A18B	.byte $d3	; INVALID OPCODE !!!
$A18C	BRK		;
$A18D	AND $31  	;
$A18F	.byte $27	; INVALID OPCODE !!!
$A190	.byte $32	; INVALID OPCODE !!!
$A191	.byte $33	; INVALID OPCODE !!!
$A192	ROL A		;
$A193	.byte $02	; INVALID OPCODE !!!
$A194	AND $31  	;
$A196	.byte $27	; INVALID OPCODE !!!
$A197	.byte $32	; INVALID OPCODE !!!
$A198	.byte $33	; INVALID OPCODE !!!
$A199	ROL A		;
$A19A	BRK		;
$A19B	.byte $fc	; INVALID OPCODE !!!
$A19C	PHA		;
$A19D	.byte $42	; INVALID OPCODE !!!
$A19E	.byte $fc	; INVALID OPCODE !!!
$A19F	EOR #$43	;
$A1A1	BRK		;
$A1A2	.byte $fc	; INVALID OPCODE !!!
$A1A3	PHA		;
$A1A4	.byte $44	; INVALID OPCODE !!!
$A1A5	.byte $fc	; INVALID OPCODE !!!
$A1A6	EOR #$45	;
$A1A8	BRK		;
$A1A9	.byte $fc	; INVALID OPCODE !!!
$A1AA	LSR A		;
$A1AB	LSR $FC  	;
$A1AD	.byte $4b	; INVALID OPCODE !!!
$A1AE	.byte $47	; INVALID OPCODE !!!
$A1AF	BRK		;
$A1B0	.byte $fc	; INVALID OPCODE !!!
$A1B1	LDY $A5  	;
$A1B3	.byte $fc	; INVALID OPCODE !!!
$A1B4	LDX $A7  	;
$A1B6	PHP		;
$A1B7	.byte $fc	; INVALID OPCODE !!!
$A1B8	ADC ($FC),Y	;
$A1BA	.byte $fc	; INVALID OPCODE !!!
$A1BB	.byte $72	; INVALID OPCODE !!!
$A1BC	.byte $73	; INVALID OPCODE !!!
$A1BD	PHP		;
$A1BE	.byte $fc	; INVALID OPCODE !!!
$A1BF	.byte $74	; INVALID OPCODE !!!
$A1C0	.byte $fc	; INVALID OPCODE !!!
$A1C1	.byte $fc	; INVALID OPCODE !!!
$A1C2	ADC $76,X	;
$A1C4	PHP		;
$A1C5	.byte $fc	; INVALID OPCODE !!!
$A1C6	ADC ($77),Y	;
$A1C8	.byte $fc	; INVALID OPCODE !!!
$A1C9	.byte $72	; INVALID OPCODE !!!
$A1CA	.byte $73	; INVALID OPCODE !!!
$A1CB	PHP		;
$A1CC	.byte $fc	; INVALID OPCODE !!!
$A1CD	.byte $74	; INVALID OPCODE !!!
$A1CE	.byte $77	; INVALID OPCODE !!!
$A1CF	.byte $fc	; INVALID OPCODE !!!
$A1D0	ADC $76,X	;
$A1D2	PHP		;
$A1D3	.byte $fc	; INVALID OPCODE !!!
$A1D4	ADC ($78),Y	;
$A1D6	.byte $fc	; INVALID OPCODE !!!
$A1D7	.byte $72	; INVALID OPCODE !!!
$A1D8	.byte $73	; INVALID OPCODE !!!
$A1D9	PHP		;
$A1DA	.byte $fc	; INVALID OPCODE !!!
$A1DB	.byte $74	; INVALID OPCODE !!!
$A1DC	SEI		;
$A1DD	.byte $fc	; INVALID OPCODE !!!
$A1DE	ADC $76,X	;
$A1E0	PHP		;
$A1E1	.byte $fc	; INVALID OPCODE !!!
$A1E2	ADC ($79),Y	;
$A1E4	.byte $fc	; INVALID OPCODE !!!
$A1E5	.byte $72	; INVALID OPCODE !!!
$A1E6	.byte $73	; INVALID OPCODE !!!
$A1E7	PHP		;
$A1E8	.byte $fc	; INVALID OPCODE !!!
$A1E9	.byte $74	; INVALID OPCODE !!!
$A1EA	ADC $75FC,Y	; saved-to-battery RAM 
$A1ED	ROR $00,X	;
$A1EF	LSR $504F	; MMC5 register or expansion RAM 
$A1F2	EOR ($52),Y	;
$A1F4	.byte $53	; INVALID OPCODE !!!
$A1F5	BRK		;
$A1F6	LSR $504F	; MMC5 register or expansion RAM 
$A1F9	EOR ($5E),Y	;
$A1FB	CLI		;
$A1FC	BRK		;
$A1FD	LSR $504F	; MMC5 register or expansion RAM 
$A200	EOR ($5E),Y	;
$A202	EOR $5400,X	; MMC5 register or expansion RAM 
$A205	EOR $50,X	;
$A207	LSR $57,X	;
$A209	.byte $53	; INVALID OPCODE !!!
$A20A	BRK		;
$A20B	LSR $504F	; MMC5 register or expansion RAM 
$A20E	EOR ($52),Y	;
$A210	.byte $53	; INVALID OPCODE !!!
$A211	BRK		;
$A212	EOR $505A,Y	; MMC5 register or expansion RAM 
$A215	.byte $5b	; INVALID OPCODE !!!
$A216	.byte $5c	; INVALID OPCODE !!!
$A217	.byte $53	; INVALID OPCODE !!!
$A218	BRK		;
$A219	.byte $fc	; INVALID OPCODE !!!
$A21A	.byte $5f	; INVALID OPCODE !!!
$A21B	RTS		;

$A21C	.byte $fc	; INVALID OPCODE !!!
$A21D	ADC ($62,X)	;
$A21F	ASL $63  	;
$A221	.byte $64	; INVALID OPCODE !!!
$A222	RTS		;

$A223	.byte $fc	; INVALID OPCODE !!!
$A224	ADC $62  	;
$A226	BRK		;
$A227	ROR $67  	;
$A229	RTS		;

$A22A	PLA		;
$A22B	ADC #$62	;
$A22D	BRK		;
$A22E	ROR A		;
$A22F	.byte $67	; INVALID OPCODE !!!
$A230	RTS		;

$A231	.byte $6b	; INVALID OPCODE !!!
$A232	ADC #$62	;
$A234	BRK		;
$A235	.byte $fc	; INVALID OPCODE !!!
$A236	JMP ($FC6D)	;
$A239	ROR $006F	;
$A23C	.byte $fc	; INVALID OPCODE !!!
$A23D	JMP ($FC6D)	;
$A240	ROR $A570	;
$A243	LDY $ACB3	;
$A246	TSX		;
$A247	CMP ($C8,X)	;
$A249	CMP ($CF,X)	;
$A24B	DEC $DD,X	;
$A24D	DEC $E4,X	;
$A24F	.byte $eb	; INVALID OPCODE !!!
$A250	.byte $f2	; INVALID OPCODE !!!
$A251	.byte $eb	; INVALID OPCODE !!!
$A252	BRK		;
$A253	BRK		;
$A254	BRK		;
$A255	BRK		;
$A256	.byte $07	; INVALID OPCODE !!!
$A257	.byte $07	; INVALID OPCODE !!!
$A258	.byte $07	; INVALID OPCODE !!!
$A259	.byte $07	; INVALID OPCODE !!!
$A25A	ASL $0E0E	;
$A25D	ASL $1515	;
$A260	ORA $15,X	;
$A262	.byte $1c	; INVALID OPCODE !!!
$A263	.byte $1c	; INVALID OPCODE !!!
$A264	.byte $1c	; INVALID OPCODE !!!
$A265	.byte $1c	; INVALID OPCODE !!!
$A266	.byte $23	; INVALID OPCODE !!!
$A267	.byte $23	; INVALID OPCODE !!!
$A268	.byte $23	; INVALID OPCODE !!!
$A269	.byte $23	; INVALID OPCODE !!!
$A26A	ROL A		;
$A26B	ROL A		;
$A26C	ROL A		;
$A26D	ROL A		;
$A26E	AND ($38),Y	;
$A270	.byte $3f	; INVALID OPCODE !!!
$A271	SEC		;
$A272	LSR $4D  	;
$A274	.byte $54	; INVALID OPCODE !!!
$A275	EOR $625B	; saved-to-battery RAM 
$A278	ADC #$62	;
$A27A	BVS $A2F3	;
$A27C	ROR $8C77,X	;
$A27F	STY $8C8C	;
$A282	.byte $93	; INVALID OPCODE !!!
$A283	.byte $93	; INVALID OPCODE !!!
$A284	.byte $93	; INVALID OPCODE !!!
$A285	.byte $93	; INVALID OPCODE !!!
$A286	TXS		;
$A287	LDA ($A8,X)	;
$A289	LDA ($AF,X)	;
$A28B	TXS		;
$A28C	.byte $af	; INVALID OPCODE !!!
$A28D	TXS		;
$A28E	CPX #$e0	;
$A290	CPX #$e0	;
$A292	CPX #$e0	;
$A294	CPX #$e0	;
$A296	CPX #$e0	;
$A298	CPX #$e0	;
$A29A	CPX #$e0	;
$A29C	CPX #$e0	;
$A29E	SBC ($E1,X)	;
$A2A0	SBC ($E1,X)	;
$A2A2	SBC ($E1,X)	;
$A2A4	SBC ($E1,X)	;
$A2A6	SBC ($E1,X)	;
$A2A8	SBC ($E1,X)	;
$A2AA	SBC ($E1,X)	;
$A2AC	SBC ($E1,X)	;
$A2AE	SBC ($E1,X)	;
$A2B0	SBC ($E1,X)	;
$A2B2	SBC ($E1,X)	;
$A2B4	SBC ($E1,X)	;
$A2B6	SBC ($E1,X)	;
$A2B8	SBC ($E1,X)	;
$A2BA	SBC ($E1,X)	;
$A2BC	SBC ($E1,X)	;
$A2BE	SBC ($E1,X)	;
$A2C0	SBC ($E1,X)	;
$A2C2	SBC ($E1,X)	;
$A2C4	SBC ($E1,X)	;
$A2C6	SBC ($E1,X)	;
$A2C8	SBC ($E1,X)	;
$A2CA	SBC ($E1,X)	;
$A2CC	SBC ($E1,X)	;
$A2CE	SBC ($E1,X)	;
$A2D0	SBC ($E1,X)	;
$A2D2	SBC ($E1,X)	;
$A2D4	SBC ($E1,X)	;
$A2D6	SBC ($E1,X)	;
$A2D8	SBC ($E1,X)	;
$A2DA	.byte $77	; INVALID OPCODE !!!
$A2DB	.byte $77	; INVALID OPCODE !!!
$A2DC	STA $77  	;
$A2DE	.byte $eb	; INVALID OPCODE !!!
$A2DF	.byte $eb	; INVALID OPCODE !!!
$A2E0	SBC $E1EB,Y	;
$A2E3	SBC ($E1,X)	;
$A2E5	SBC ($E0,X)	;
$A2E7	CPX #$e0	;
$A2E9	CPX #$ee	;
$A2EB	SBC $FC,X	;
$A2ED	SBC $03,X	;
$A2EF	ASL A		;
$A2F0	ORA ($0A),Y	;
$A2F2	.byte $34	; INVALID OPCODE !!!
$A2F3	.byte $34	; INVALID OPCODE !!!
$A2F4	CLC		;
$A2F5	.byte $1f	; INVALID OPCODE !!!
$A2F6	ROL $26  	;
$A2F8	ROL $26  	;
$A2FA	LDX $B6,Y 	;
$A2FC	LDX $B6,Y 	;
$A2FE	LDX $BD,Y 	;
$A300	LDX $BD,Y 	;
$A302	CPY $CB  	;
$A304	CPY $CB  	;
$A306	.byte $d2	; INVALID OPCODE !!!
$A307	CMP $D9D2,Y	;
$A30A	CPX #$e7	;
$A30C	CPX #$e7	;
$A30E	.byte $34	; INVALID OPCODE !!!
$A30F	.byte $3b	; INVALID OPCODE !!!
$A310	.byte $34	; INVALID OPCODE !!!
$A311	.byte $3b	; INVALID OPCODE !!!
$A312	AND $2D2D	;
$A315	AND $E1E1	;
$A318	SBC ($E1,X)	;
$A31A	.byte $e2	; INVALID OPCODE !!!
$A31B	.byte $e2	; INVALID OPCODE !!!
$A31C	.byte $e2	; INVALID OPCODE !!!
$A31D	.byte $e2	; INVALID OPCODE !!!
$A31E	.byte $e2	; INVALID OPCODE !!!
$A31F	.byte $e2	; INVALID OPCODE !!!
$A320	.byte $e2	; INVALID OPCODE !!!
$A321	.byte $e2	; INVALID OPCODE !!!
$A322	.byte $e2	; INVALID OPCODE !!!
$A323	.byte $e2	; INVALID OPCODE !!!
$A324	.byte $e2	; INVALID OPCODE !!!
$A325	.byte $e2	; INVALID OPCODE !!!
$A326	SBC ($E1,X)	;
$A328	SBC ($E1,X)	;
$A32A	SBC ($E1,X)	;
$A32C	SBC ($E1,X)	;
$A32E	SBC ($E1,X)	;
$A330	SBC ($E1,X)	;
$A332	SBC ($E1,X)	;
$A334	SBC ($E1,X)	;
$A336	SBC ($E1,X)	;
$A338	SBC ($E1,X)	;
$A33A	.byte $e2	; INVALID OPCODE !!!
$A33B	.byte $e2	; INVALID OPCODE !!!
$A33C	.byte $e2	; INVALID OPCODE !!!
$A33D	.byte $e2	; INVALID OPCODE !!!
$A33E	.byte $e2	; INVALID OPCODE !!!
$A33F	.byte $e2	; INVALID OPCODE !!!
$A340	.byte $e2	; INVALID OPCODE !!!
$A341	.byte $e2	; INVALID OPCODE !!!
$A342	.byte $44	; INVALID OPCODE !!!
$A343	BIT $0000	;
$A346	BRK		;
$A347	.byte $04	; INVALID OPCODE !!!
$A348	BIT $08  	;
$A34A	BRK		;
$A34B	BRK		;
$A34C	.byte $fc	; INVALID OPCODE !!!
$A34D	.byte $fc	; INVALID OPCODE !!!
$A34E	INC $00FC,X	;
$A351	.byte $7b	; INVALID OPCODE !!!
$A352	.byte $fc	; INVALID OPCODE !!!
$A353	.byte $fc	; INVALID OPCODE !!!
$A354	.byte $7c	; INVALID OPCODE !!!
$A355	.byte $fc	; INVALID OPCODE !!!
$A356	.byte $fc	; INVALID OPCODE !!!
$A357	BRK		;
$A358	ADC $FC7E,X	;
$A35B	.byte $7f	; INVALID OPCODE !!!
$A35C	.byte $80	; INVALID OPCODE !!!
$A35D	.byte $fc	; INVALID OPCODE !!!
$A35E	BRK		;
$A35F	STA ($82,X)	;
$A361	.byte $83	; INVALID OPCODE !!!
$A362	STY $85  	;
$A364	STX $00  	;
$A366	.byte $87	; INVALID OPCODE !!!
$A367	DEY		;
$A368	.byte $fc	; INVALID OPCODE !!!
$A369	.byte $89	; INVALID OPCODE !!!
$A36A	TXA		;
$A36B	.byte $fc	; INVALID OPCODE !!!
$A36C	BRK		;
$A36D	.byte $8b	; INVALID OPCODE !!!
$A36E	STY $8DFC	;
$A371	STX $00FC	;
$A374	.byte $8f	; INVALID OPCODE !!!
$A375	BCC $A373	;
$A377	.byte $fc	; INVALID OPCODE !!!
$A378	.byte $fc	; INVALID OPCODE !!!
$A379	.byte $fc	; INVALID OPCODE !!!
$A37A	.byte $4b	; INVALID OPCODE !!!
$A37B	BVC $A3D4	;
$A37D	LSR $6C65,X	; saved-to-battery RAM 
$A380	.byte $73	; INVALID OPCODE !!!
$A381	.byte $e3	; INVALID OPCODE !!!
$A382	.byte $e3	; INVALID OPCODE !!!
$A383	.byte $e3	; INVALID OPCODE !!!
$A384	.byte $e3	; INVALID OPCODE !!!
$A385	.byte $e3	; INVALID OPCODE !!!
$A386	.byte $e3	; INVALID OPCODE !!!
$A387	.byte $e3	; INVALID OPCODE !!!
$A388	JSR $5038	; MMC5 register or expansion RAM 
$A38B	PLA		;
$A38C	.byte $80	; INVALID OPCODE !!!
$A38D	TYA		;
$A38E	BCS $A358	;
$A390	PHP		;
$A391	JSR $C838	;
$A394	BCS $A32E	;
$A396	.byte $80	; INVALID OPCODE !!!
$A397	PLA		;
$A398	BVC $A3A2	;
$A39A	LDA $E388,X	;
$A39D	STA $1F  	;
$A39F	LDA $19  	;
$A3A1	LSR A		;
$A3A2	BCC $A3A9	;
$A3A4	LDA $E391,X	;
$A3A7	STA $1F  	;
$A3A9	LDA #$02	;
$A3AB	STA $20  	;
$A3AD	LDA $88,X	;
$A3AF	BPL $A3C5	;
$A3B1	CMP #$ff	;
$A3B3	BEQ $A3B8	;
$A3B5	JMP $E4CB	; (in an if statement) 
$A3B8	LDY #$14	;
$A3BA	LDA #$f0	;
$A3BC	STA ($1F),Y	;
$A3BE	DEY		;
$A3BF	DEY		;
$A3C0	DEY		;
$A3C1	DEY		;
$A3C2	BPL $A3BA	;
$A3C4	RTS		; (within an if statement) 
$A3C5	CPX #$08	;
$A3C7	BEQ $A411	;
$A3C9	LDA $7F,X	;
$A3CB	ASL A		;
$A3CC	ASL A		;
$A3CD	ADC $0436,X	;
$A3D0	CPX #$02	;
$A3D2	BCS $A3FE	;
$A3D4	LDY $88,X	;
$A3D6	ADC $E342,Y	;
$A3D9	TAY		;
$A3DA	LDA $E242,Y	;
$A3DD	STA $1D  	;
$A3DF	LDA $E28E,Y	;
$A3E2	STA $1E  	;
$A3E4	LDA $BD,X	;
$A3E6	BEQ $A41F	;
$A3E8	LDY $88,X	;
$A3EA	LDA $E345,Y	;
$A3ED	ADC $0436,X	;
$A3F0	TAY		;
$A3F1	LDA $E2DA,Y	;
$A3F4	STA $1D  	;
$A3F6	LDA $E2E2,Y	;
$A3F9	STA $1E  	;
$A3FB	JMP $E41F	; (in an if statement) 
$A3FE	LDY $88,X	;
$A400	CLC		;
$A401	ADC $E348,Y	;
$A404	TAY		;
$A405	LDA $E2EA,Y	;
$A408	STA $1D  	;
$A40A	LDA $E316,Y	;
$A40D	STA $1E  	;
$A40F	BNE $A41F	;
$A411	LDY $7F,X	;
$A413	BMI $A3B8	;
$A415	LDA $E37A,Y	;
$A418	STA $1D  	;
$A41A	LDA $E381,Y	;
$A41D	STA $1E  	;
$A41F	LDA $91,X	;
$A421	STA $15  	;
$A423	LDA $9A,X	;
$A425	STA $12  	;
$A427	TXA		;
$A428	BEQ $A43A	;
$A42A	CPX #$01	;
$A42C	BNE $A432	;
$A42E	LDA #$01	;
$A430	BNE $A43A	;
$A432	LDA $0451,X	;
$A435	CLC		;
$A436	ADC #$02	;
$A438	AND #$03	;
$A43A	LDY $0448,X	;
$A43D	BEQ $A441	;
$A43F	ORA #$40	;
$A441	LDY $88,X	;
$A443	CPY #$02	;
$A445	BNE $A44F	;
$A447	LDY $7F,X	;
$A449	CPY #$05	;
$A44B	BNE $A44F	;
$A44D	EOR #$40	;
$A44F	LDY $9A,X	;
$A451	CPY #$c9	;
$A453	BCS $A459	;
$A455	CPX #$09	;
$A457	BNE $A45B	;
$A459	ORA #$20	;
$A45B	STA $14  	;
$A45D	LDA #$39	;
$A45F	STA $21  	;
$A461	LDA #$e0	;
$A463	STA $22  	;
$A465	LDA $0448,X	;
$A468	BEQ $A472	;
$A46A	LDA #$6f	;
$A46C	STA $21  	;
$A46E	LDA #$e0	;
$A470	STA $22  	;
$A472	LDY #$00	;
$A474	LDA ($1D),Y	;
$A476	INC $1D  	;
$A478	BNE $A47C	;
$A47A	INC $1E  	;
$A47C	ASL A		;
$A47D	STA $13  	;
$A47F	ASL A		;
$A480	ADC $13  	;
$A482	ADC $21  	;
$A484	STA $21  	;
$A486	BCC $A48A	;
$A488	INC $22  	;
$A48A	TXA		;
$A48B	PHA		;
$A48C	LDX #$05	;
$A48E	LDY #$00	;
$A490	LDA $12  	;
$A492	CLC		;
$A493	ADC $E033,X	;
$A496	STA ($1F),Y	;
$A498	STA $12  	;
$A49A	INY		;
$A49B	STY $13  	;
$A49D	LDY #$00	;
$A49F	LDA ($1D),Y	;
$A4A1	INC $1D  	;
$A4A3	BNE $A4A7	;
$A4A5	INC $1E  	;
$A4A7	LDY $13  	;
$A4A9	STA ($1F),Y	;
$A4AB	INY		;
$A4AC	LDA $14  	;
$A4AE	STA ($1F),Y	;
$A4B0	INY		;
$A4B1	STY $13  	;
$A4B3	LDY #$00	;
$A4B5	LDA $15  	;
$A4B7	CLC		;
$A4B8	ADC ($21),Y	;
$A4BA	INC $21  	;
$A4BC	BNE $A4C0	;
$A4BE	INC $22  	;
$A4C0	LDY $13  	;
$A4C2	STA ($1F),Y	;
$A4C4	INY		;
$A4C5	DEX		;
$A4C6	BPL $A490	;
$A4C8	PLA		;
$A4C9	TAX		;
$A4CA	RTS		;

$A4CB	TXA		;
$A4CC	PHA		;
$A4CD	LDY $1F  	;
$A4CF	LDA $9A,X	;
$A4D1	STA $0200,Y	;
$A4D4	STA $0204,Y	;
$A4D7	CLC		;
$A4D8	ADC #$08	;
$A4DA	STA $0208,Y	;
$A4DD	STA $020C,Y	;
$A4E0	LDA #$f0	;
$A4E2	STA $0210,Y	;
$A4E5	STA $0214,Y	;
$A4E8	LDA $91,X	;
$A4EA	STA $0203,Y	;
$A4ED	STA $020B,Y	;
$A4F0	CLC		;
$A4F1	ADC #$08	;
$A4F3	STA $0207,Y	;
$A4F6	STA $020F,Y	;
$A4F9	LDA $9A,X	;
$A4FB	CMP #$d0	;
$A4FD	LDA #$03	;
$A4FF	BCC $A503	;
$A501	LDA #$23	;
$A503	STA $0202,Y	;
$A506	LDA $7F,X	;
$A508	BNE $A549	;
$A50A	LDA $0202,Y	;
$A50D	STA $0206,Y	;
$A510	STA $020A,Y	;
$A513	STA $020E,Y	;
$A516	LDA #$da	;
$A518	STA $0201,Y	;
$A51B	LDA #$db	;
$A51D	STA $0205,Y	;
$A520	LDA #$dc	;
$A522	STA $0209,Y	;
$A525	LDA #$dd	;
$A527	STA $020D,Y	;
$A52A	LDX $1F  	;
$A52C	LDA $19  	;
$A52E	AND #$20	;
$A530	BEQ $A546	;
$A532	LDA $19  	;
$A534	AND #$40	;
$A536	BNE $A540	;
$A538	INC $0200,X	;
$A53B	INC $0204,X	;
$A53E	BNE $A546	;
$A540	INC $0203,X	;
$A543	INC $020B,X	;
$A546	PLA		;
$A547	TAX		;
$A548	RTS		; (within an if statement) 
$A549	LDA $0202,Y	;
$A54C	ORA #$40	;
$A54E	STA $0206,Y	;
$A551	ORA #$80	;
$A553	STA $020E,Y	;
$A556	AND #$bf	;
$A558	STA $020A,Y	;
$A55B	LDA #$de	;
$A55D	STA $0201,Y	;
$A560	STA $0205,Y	;
$A563	STA $0209,Y	;
$A566	STA $020D,Y	;
$A569	DEC $045A,X	;
$A56C	BPL $A57A	;
$A56E	LDA #$ff	;
$A570	STA $88,X	;
$A572	LDA #$f0	;
$A574	STA $9A,X	;
$A576	LDA #$04	;
$A578	STA $F1  	;
$A57A	PLA		;
$A57B	TAX		;
$A57C	RTS		;

$A57D	LDX $BB  	;
$A57F	BMI $A5BA	;
$A581	LDA $E5BB,X	;
$A584	STA $1D  	;
$A586	LDA $E5C0,X	;
$A589	STA $1E  	;
$A58B	LDY #$00	;
$A58D	LDX #$00	;
$A58F	LDA ($1D),Y	;
$A591	STA $02E0,X	;
$A594	INY		;
$A595	INX		;
$A596	CMP #$f0	;
$A598	BNE $A59D	;
$A59A	INX		;
$A59B	INX		;
$A59C	INX		;
$A59D	CPX #$10	;
$A59F	BNE $A58F	;
$A5A1	LDY #$0f	;
$A5A3	LDA $02E0,Y	;
$A5A6	CLC		;
$A5A7	ADC $BC  	;
$A5A9	STA $02E0,Y	;
$A5AC	DEY		;
$A5AD	DEY		;
$A5AE	DEY		;
$A5AF	DEY		;
$A5B0	BPL $A5A3	;
$A5B2	LDA $19  	;
$A5B4	AND #$03	;
$A5B6	BNE $A5BA	;
$A5B8	DEC $BB  	;
$A5BA	RTS		;

$A5BB	.byte $f3	; INVALID OPCODE !!!
$A5BC	.byte $e3	; INVALID OPCODE !!!
$A5BD	DEC $CC,X	;
$A5BF	CMP $E5  	;
$A5C1	SBC $E5  	;
$A5C3	SBC $E5  	;
$A5C5	BNE $A575	;
$A5C7	.byte $03	; INVALID OPCODE !!!
$A5C8	.byte $04	; INVALID OPCODE !!!
$A5C9	BEQ $A5BB	;
$A5CB	BEQ $A595	;
$A5CD	.byte $af	; INVALID OPCODE !!!
$A5CE	.byte $03	; INVALID OPCODE !!!
$A5CF	.byte $04	; INVALID OPCODE !!!
$A5D0	BNE $A582	;
$A5D2	.byte $03	; INVALID OPCODE !!!
$A5D3	.byte $04	; INVALID OPCODE !!!
$A5D4	BEQ $A5C6	;
$A5D6	INY		;
$A5D7	LDA ($03),Y	;
$A5D9	.byte $fc	; INVALID OPCODE !!!
$A5DA	INY		;
$A5DB	.byte $b2	; INVALID OPCODE !!!
$A5DC	.byte $03	; INVALID OPCODE !!!
$A5DD	.byte $04	; INVALID OPCODE !!!
$A5DE	BNE $A593	;
$A5E0	.byte $03	; INVALID OPCODE !!!
$A5E1	.byte $04	; INVALID OPCODE !!!
$A5E2	BEQ $A5AC	;
$A5E4	LDY $03,X	;
$A5E6	BRK		;
$A5E7	INY		;
$A5E8	LDY $43,X	;
$A5EA	PHP		;
$A5EB	BNE $A5A2	;
$A5ED	.byte $03	; INVALID OPCODE !!!
$A5EE	BRK		;
$A5EF	BNE $A5A6	;
$A5F1	.byte $43	; INVALID OPCODE !!!
$A5F2	PHP		;
$A5F3	BEQ $A5E5	;
$A5F5	BEQ $A5E7	;
$A5F7	.byte $04	; INVALID OPCODE !!!
$A5F8	.byte $04	; INVALID OPCODE !!!
$A5F9	ORA $06  	;
$A5FB	.byte $03	; INVALID OPCODE !!!
$A5FC	.byte $03	; INVALID OPCODE !!!
$A5FD	.byte $03	; INVALID OPCODE !!!
$A5FE	ASL $0A  	;
$A600	ASL A		;
$A601	ASL A		;
$A602	ASL A		;
$A603	PLP		;
$A604	.byte $32	; INVALID OPCODE !!!
$A605	LSR $78  	;
$A607	BRK		;
$A608	BRK		;
$A609	BRK		;
$A60A	.byte $64	; INVALID OPCODE !!!
$A60B	BRK		;
$A60C	BRK		;
$A60D	BRK		;
$A60E	BRK		;
$A60F	ASL A		;
$A610	ASL $7032,X	; saved-to-battery RAM 
$A613	BRK		;
$A614	BRK		;
$A615	BRK		;
$A616	BVS $A618	;
$A618	BRK		;
$A619	BRK		;
$A61A	BRK		;
$A61B	.byte $14	; INVALID OPCODE !!!
$A61C	.byte $3c	; INVALID OPCODE !!!
$A61D	.byte $64	; INVALID OPCODE !!!
$A61E	LDY #$00	;
$A620	BRK		;
$A621	BRK		;
$A622	LDY #$00	;
$A624	BRK		;
$A625	BRK		;
$A626	BRK		;
$A627	BVS $A5D9	;
$A629	CPX #$40	;
$A62B	.byte $80	; INVALID OPCODE !!!
$A62C	.byte $80	; INVALID OPCODE !!!
$A62D	.byte $80	; INVALID OPCODE !!!
$A62E	RTI		;

$A62F	BRK		;
$A630	BRK		;
$A631	BRK		;
$A632	BRK		;
$A633	BRK		;
$A634	BRK		;
$A635	BRK		;
$A636	ORA ($00,X)	;
$A638	BRK		;
$A639	BRK		;
$A63A	ORA ($00,X)	;
$A63C	BRK		;
$A63D	BRK		;
$A63E	BRK		;
$A63F	BCC $A691	;
$A641	JSR $80C0	;
$A644	.byte $80	; INVALID OPCODE !!!
$A645	.byte $80	; INVALID OPCODE !!!
$A646	CPY #$00	;
$A648	BRK		;
$A649	BRK		;
$A64A	BRK		;
$A64B	.byte $ff	; INVALID OPCODE !!!
$A64C	.byte $ff	; INVALID OPCODE !!!
$A64D	.byte $ff	; INVALID OPCODE !!!
$A64E	INC $FFFF,X	;
$A651	.byte $ff	; INVALID OPCODE !!!
$A652	INC $0000,X	;
$A655	BRK		;
$A656	BRK		;
$A657	BVC $A5E9	;
$A659	CPY #$40	;
$A65B	RTI		; (within an if statement) 
$A65C	RTI		; (within an if statement) 
$A65D	RTI		; (within an if statement) 
$A65E	RTI		; (within an if statement) 
$A65F	BRK		;
$A660	BRK		;
$A661	BRK		;
$A662	BRK		;
$A663	BRK		;
$A664	BRK		;
$A665	BRK		;
$A666	ORA ($00,X)	;
$A668	BRK		;
$A669	BRK		;
$A66A	ORA ($02,X)	;
$A66C	.byte $02	; INVALID OPCODE !!!
$A66D	.byte $02	; INVALID OPCODE !!!
$A66E	.byte $02	; INVALID OPCODE !!!
$A66F	BCS $A6E1	;
$A671	RTI		; (within an if statement) 
$A672	CPY #$c0	;
$A674	CPY #$c0	;
$A676	CPY #$c0	;
$A678	CPY #$c0	;
$A67A	CPY #$ff	;
$A67C	.byte $ff	; INVALID OPCODE !!!
$A67D	.byte $ff	; INVALID OPCODE !!!
$A67E	INC $FFFF,X	;
$A681	.byte $ff	; INVALID OPCODE !!!
$A682	INC $01FE,X	;
$A685	INC $20FE,X	;
$A688	.byte $1b	; INVALID OPCODE !!!
$A689	INC $07A2	;
$A68C	LDA $88,X	;
$A68E	BPL $A69A	;
$A690	CMP #$ff	;
$A692	BEQ $A6D8	;
$A694	JSR $ECB0	;
$A697	JMP $E6D8	; (in an if statement) 
$A69A	CPX #$02	;
$A69C	BCC $A6AE	;
$A69E	CMP #$01	;
$A6A0	BNE $A6AE	;
$A6A2	LDA $7F,X	;
$A6A4	CMP #$02	;
$A6A6	BCS $A6AE	;
$A6A8	LDA $F1  	;
$A6AA	ORA #$20	;
$A6AC	STA $F1  	;
$A6AE	DEC $043F,X	;
$A6B1	BNE $A6CF	;
$A6B3	LDA #$03	;
$A6B5	STA $043F,X	;
$A6B8	CPX #$02	;
$A6BA	BCS $A6C4	;
$A6BC	DEC $BF,X	;
$A6BE	BNE $A6C4	;
$A6C0	LDA #$00	;
$A6C2	STA $BD,X	;
$A6C4	JSR $EA0E	;
$A6C7	STX $3E  	;
$A6C9	JSR $EBBA	;
$A6CC	JSR $E78C	;
$A6CF	JSR $EA4E	;
$A6D2	JSR $ED1E	;
$A6D5	JSR $E979	;
$A6D8	JSR $E39A	;
$A6DB	DEX		;
$A6DC	BPL $A68C	;
$A6DE	RTS		; (within an if statement) 
$A6DF	CPX #$02	;
$A6E1	BCS $A6FB	;
$A6E3	LDA $19  	;
$A6E5	AND #$0f	;
$A6E7	BNE $A6EE	;
$A6E9	JSR $F1A9	;
$A6EC	STA $31,X	;
$A6EE	LDA $3A  	;
$A6F0	BNE $A6FB	;
$A6F2	JSR $E760	;
$A6F5	LDA $061C,X	;
$A6F8	STA $31,X	;
$A6FA	RTS		; (within an if statement) 
$A6FB	LDA $9A,X	;
$A6FD	CMP #$a0	;
$A6FF	BCC $A708	;
$A701	LDA $31,X	;
$A703	ORA #$40	;
$A705	STA $31,X	;
$A707	RTS		; (within an if statement) 
$A708	DEC $045A,X	;
$A70B	BNE $A6FA	;
$A70D	JSR $F1A9	;
$A710	LDY $0451,X	;
$A713	AND $E758,Y	;
$A716	ADC $E75B,Y	;
$A719	STA $045A,X	;
$A71C	STX $12  	;
$A71E	LDA $19  	;
$A720	ROL A		;
$A721	ROL A		;
$A722	EOR $12  	;
$A724	AND #$01	;
$A726	TAY		;
$A727	LDA $0088,Y	;
$A72A	BMI $A73F	;
$A72C	LDA $00BD,Y	;
$A72F	BNE $A73F	;
$A731	LDA #$00	;
$A733	STA $31,X	;
$A735	LDA $009A,Y	;
$A738	SEC		;
$A739	SBC #$04	;
$A73B	CMP $9A,X	;
$A73D	BCS $A743	;
$A73F	LDA #$40	;
$A741	STA $31,X	;
$A743	LDA $91,X	;
$A745	CMP $0091,Y	;
$A748	BCS $A751	;
$A74A	LDA $31,X	;
$A74C	ORA #$01	;
$A74E	STA $31,X	;
$A750	RTS		; (within an if statement) 
$A751	LDA $31,X	;
$A753	ORA #$02	;
$A755	STA $31,X	;
$A757	RTS		;

$A758	.byte $1f	; INVALID OPCODE !!!
$A759	.byte $0f	; INVALID OPCODE !!!
$A75A	.byte $07	; INVALID OPCODE !!!
$A75B	JSR $0810	;
$A75E	LDX #$00	;
$A760	LDA #$01	;
$A762	STA $4016	;Joypad & I/O port for port #1
$A765	LDA #$00	;
$A767	STA $4016	;Joypad & I/O port for port #1
$A76A	LDY #$07	;
$A76C	LDA $4016,X	;Joypad & I/O port for port #1
$A76F	STA $12  	;
$A771	LSR A		;
$A772	ORA $12  	;
$A774	LSR A		;
$A775	ROL $061C,X	;
$A778	DEY		;
$A779	BPL $A76C	;
$A77B	LDY $061E,X	;
$A77E	LDA $061C,X	;
$A781	STA $061E,X	;
$A784	TYA		;
$A785	EOR $061C,X	;
$A788	AND $061C,X	;
$A78B	RTS		;

$A78C	LDA $88,X	;
$A78E	BNE $A799	;
$A790	LDA #$00	;
$A792	STA $0424,X	;
$A795	STA $042D,X	;
$A798	RTS		; (within an if statement) 
$A799	CMP #$02	;
$A79B	BEQ $A7DE	;
$A79D	CPX #$02	;
$A79F	BCC $A7DE	;
$A7A1	LDA $7F,X	;
$A7A3	CMP #$02	;
$A7A5	BCS $A790	;
$A7A7	LDA $0424,X	;
$A7AA	STA $12  	;
$A7AC	LDA $042D,X	;
$A7AF	STA $13  	;
$A7B1	JSR $F19C	;
$A7B4	LDA $0463,X	;
$A7B7	CLC		;
$A7B8	ADC $12  	;
$A7BA	STA $0463,X	;
$A7BD	STA $12  	;
$A7BF	LDA $046C,X	;
$A7C2	ADC $13  	;
$A7C4	STA $046C,X	;
$A7C7	STA $13  	;
$A7C9	JSR $F19C	;
$A7CC	LDA $0424,X	;
$A7CF	SEC		;
$A7D0	SBC $12  	;
$A7D2	STA $0424,X	;
$A7D5	LDA $042D,X	;
$A7D8	SBC $13  	;
$A7DA	STA $042D,X	;
$A7DD	RTS		; (within an if statement) 
$A7DE	LDA $7F,X	;
$A7E0	CMP #$06	;
$A7E2	BCC $A7E5	;
$A7E4	RTS		; (within an if statement) 
$A7E5	LDA $7F,X	;
$A7E7	CMP #$04	;
$A7E9	BNE $A807	;
$A7EB	LDA $31,X	;
$A7ED	AND #$02	;
$A7EF	BEQ $A7F8	;
$A7F1	LDA $0448,X	;
$A7F4	BEQ $A807	;
$A7F6	BNE $A803	;
$A7F8	LDA $31,X	;
$A7FA	AND #$01	;
$A7FC	BEQ $A807	;
$A7FE	LDA $0448,X	;
$A801	BNE $A807	;
$A803	LDA #$05	;
$A805	STA $7F,X	;
$A807	LDA $7F,X	;
$A809	CMP #$02	;
$A80B	BNE $A828	;
$A80D	LDA $31,X	;
$A80F	AND #$02	;
$A811	BEQ $A817	;
$A813	LDA #$00	;
$A815	BEQ $A81F	;
$A817	LDA $31,X	;
$A819	AND #$01	;
$A81B	BEQ $A824	;
$A81D	LDA #$01	;
$A81F	CMP $0448,X	;
$A822	BEQ $A828	;
$A824	LDA #$04	;
$A826	STA $7F,X	;
$A828	LDA $7F,X	;
$A82A	CMP #$04	;
$A82C	BCC $A84A	;
$A82E	LDA $31,X	;
$A830	AND #$02	;
$A832	BEQ $A83B	;
$A834	LDA $0448,X	;
$A837	BNE $A84A	;
$A839	BEQ $A846	;
$A83B	LDA $31,X	;
$A83D	AND #$01	;
$A83F	BEQ $A84A	;
$A841	LDA $0448,X	;
$A844	BEQ $A84A	;
$A846	LDA #$02	;
$A848	STA $7F,X	;
$A84A	LDA $7F,X	;
$A84C	CMP #$03	;
$A84E	BNE $A85A	;
$A850	LDA $31,X	;
$A852	AND #$03	;
$A854	BEQ $A85A	;
$A856	LDA #$02	;
$A858	STA $7F,X	;
$A85A	LDA $7F,X	;
$A85C	CMP #$04	;
$A85E	BCS $A875	;
$A860	LDA $31,X	;
$A862	AND #$02	;
$A864	BEQ $A86A	;
$A866	LDA #$00	;
$A868	BEQ $A872	;
$A86A	LDA $31,X	;
$A86C	AND #$01	;
$A86E	BEQ $A875	;
$A870	LDA #$01	;
$A872	STA $0448,X	;
$A875	LDA $7F,X	;
$A877	CMP #$04	;
$A879	BCC $A8AE	;
$A87B	LDA $0436,X	;
$A87E	CMP #$01	;
$A880	BNE $A8AE	;
$A882	LDY $0451,X	;
$A885	LDA $0448,X	;
$A888	BEQ $A89C	;
$A88A	LDA $0424,X	;
$A88D	SEC		;
$A88E	SBC $E61B,Y	;
$A891	STA $0424,X	;
$A894	LDA $042D,X	;
$A897	SBC #$00	;
$A899	JMP $E8F7	; (in an if statement) 
$A89C	LDA $0424,X	;
$A89F	CLC		;
$A8A0	ADC $E61B,Y	;
$A8A3	STA $0424,X	;
$A8A6	LDA $042D,X	;
$A8A9	ADC #$00	;
$A8AB	JMP $E8F7	; (in an if statement) 
$A8AE	LDA $7F,X	;
$A8B0	BEQ $A8BD	;
$A8B2	CMP #$02	;
$A8B4	BEQ $A8FD	;
$A8B6	CMP #$03	;
$A8B8	BEQ $A8BD	;
$A8BA	JMP $E947	; (in an if statement) 
$A8BD	LDA $0436,X	;
$A8C0	CMP #$01	;
$A8C2	BEQ $A8C7	;
$A8C4	JMP $E947	; (in an if statement) 
$A8C7	LDY $0451,X	;
$A8CA	LDA $31,X	;
$A8CC	AND #$02	;
$A8CE	BEQ $A8E2	;
$A8D0	LDA $0424,X	;
$A8D3	SEC		;
$A8D4	SBC $E60F,Y	;
$A8D7	STA $0424,X	;
$A8DA	LDA $042D,X	;
$A8DD	SBC #$00	;
$A8DF	JMP $E8F7	; (in an if statement) 
$A8E2	LDA $31,X	;
$A8E4	AND #$01	;
$A8E6	BEQ $A947	;
$A8E8	LDA $0424,X	;
$A8EB	CLC		;
$A8EC	ADC $E60F,Y	;
$A8EF	STA $0424,X	;
$A8F2	LDA $042D,X	;
$A8F5	ADC #$00	;
$A8F7	STA $042D,X	;
$A8FA	JMP $E947	; (in an if statement) 
$A8FD	LDA $0436,X	;
$A900	CMP #$01	;
$A902	BNE $A947	;
$A904	LDY $0451,X	;
$A907	LDA $31,X	;
$A909	AND #$02	;
$A90B	BEQ $A91F	;
$A90D	LDA $0424,X	;
$A910	SEC		;
$A911	SBC $E61B,Y	;
$A914	STA $0424,X	;
$A917	LDA $042D,X	;
$A91A	SBC #$00	;
$A91C	JMP $E934	; (in an if statement) 
$A91F	LDA $31,X	;
$A921	AND #$01	;
$A923	BEQ $A947	;
$A925	LDA $0424,X	;
$A928	CLC		;
$A929	ADC $E61B,Y	;
$A92C	STA $0424,X	;
$A92F	LDA $042D,X	;
$A932	ADC #$00	;
$A934	STA $042D,X	;
$A937	LDA $31,X	;
$A939	AND #$03	;
$A93B	BEQ $A947	;
$A93D	CPX #$02	;
$A93F	BCS $A947	;
$A941	LDA $F0  	;
$A943	ORA #$08	;
$A945	STA $F0  	;
$A947	LDA $7F,X	;
$A949	CMP #$04	;
$A94B	BCC $A978	;
$A94D	LDA $0448,X	;
$A950	BNE $A959	;
$A952	LDA $042D,X	;
$A955	BMI $A978	;
$A957	BPL $A95E	;
$A959	LDA $042D,X	;
$A95C	BPL $A978	;
$A95E	LDA $7F,X	;
$A960	CMP #$05	;
$A962	BNE $A96C	;
$A964	LDA $0448,X	;
$A967	EOR #$01	;
$A969	STA $0448,X	;
$A96C	LDA #$03	;
$A96E	STA $7F,X	;
$A970	LDA #$00	;
$A972	STA $0424,X	;
$A975	STA $042D,X	;
$A978	RTS		;

$A979	LDA $CB  	;
$A97B	BNE $A9AC	;
$A97D	LDA $BD,X	;
$A97F	BEQ $A990	;
$A981	LDA $0488	;
$A984	BEQ $A990	;
$A986	SEC		;
$A987	SBC $91,X	;
$A989	JSR $F084	;
$A98C	CMP #$05	;
$A98E	BCC $A9AC	;
$A990	CPX #$02	;
$A992	BCC $A99A	;
$A994	LDA $88,X	;
$A996	CMP #$02	;
$A998	BNE $A9E8	;
$A99A	LDA $7F,X	;
$A99C	CMP #$02	;
$A99E	BCC $A9E8	;
$A9A0	CMP #$06	;
$A9A2	BCS $A9E8	;
$A9A4	LDA #$01	;
$A9A6	STA $7F,X	;
$A9A8	STA $045A,X	;
$A9AB	RTS		; (within an if statement) 
$A9AC	LDA #$00	;
$A9AE	STA $0412,X	;
$A9B1	STA $041B,X	;
$A9B4	STA $0409,X	;
$A9B7	STA $CB  	;
$A9B9	CPX #$02	;
$A9BB	BCC $A9F3	;
$A9BD	LDA $88,X	;
$A9BF	CMP #$02	;
$A9C1	BEQ $A9E9	;
$A9C3	CMP #$01	;
$A9C5	BNE $A9E8	;
$A9C7	LDA $7F,X	;
$A9C9	CMP #$02	;
$A9CB	BCS $A9E8	;
$A9CD	LDA #$02	;
$A9CF	STA $7F,X	;
$A9D1	LDA $C6  	;
$A9D3	STA $043F,X	;
$A9D6	LDA #$00	;
$A9D8	STA $0424,X	;
$A9DB	STA $042D,X	;
$A9DE	STA $0463,X	;
$A9E1	STA $046C,X	;
$A9E4	LDA #$40	;
$A9E6	STA $F1  	;
$A9E8	RTS		; (within an if statement) 
$A9E9	LDA #$00	;
$A9EB	STA $7F,X	;
$A9ED	LDA #$01	;
$A9EF	STA $045A,X	;
$A9F2	RTS		; (within an if statement) 
$A9F3	LDA $7F,X	;
$A9F5	CMP #$01	;
$A9F7	BNE $AA0D	;
$A9F9	CMP #$06	;
$A9FB	BCS $AA0D	;
$A9FD	LDA $0424,X	;
$AA00	ORA $042D,X	;
$AA03	BNE $AA09	;
$AA05	LDA #$03	;
$AA07	BNE $AA0B	;
$AA09	LDA #$02	;
$AA0B	STA $7F,X	;
$AA0D	RTS		;

$AA0E	CPX #$02	;
$AA10	BCS $AA22	;
$AA12	LDA $BD,X	;
$AA14	BNE $AA3A	;
$AA16	LDA $7F,X	;
$AA18	CMP #$01	;
$AA1A	BEQ $AA34	;
$AA1C	CMP #$03	;
$AA1E	BNE $AA3A	;
$AA20	BEQ $AA34	;
$AA22	LDA $7F,X	;
$AA24	CMP #$01	;
$AA26	BEQ $AA34	;
$AA28	CMP #$03	;
$AA2A	BCC $AA3A	;
$AA2C	LDA $19  	;
$AA2E	AND #$03	;
$AA30	BNE $AA3D	;
$AA32	BEQ $AA3A	;
$AA34	LDA $19  	;
$AA36	AND #$07	;
$AA38	BNE $AA3D	;
$AA3A	INC $0436,X	;
$AA3D	LDA $0436,X	;
$AA40	AND #$03	;
$AA42	STA $0436,X	;
$AA45	BNE $AA4D	;
$AA47	LDA $7F,X	;
$AA49	BNE $AA4D	;
$AA4B	INC $7F,X	;
$AA4D	RTS		;

$AA4E	LDA $0475,X	;
$AA51	BEQ $AA56	;
$AA53	DEC $0475,X	;
$AA56	CPX #$02	;
$AA58	BCS $AA82	;
$AA5A	LDA $C1,X	;
$AA5C	BEQ $AA82	;
$AA5E	LDA $19  	;
$AA60	LSR A		;
$AA61	BCC $AA81	;
$AA63	INC $0436,X	;
$AA66	LDA $0436,X	;
$AA69	AND #$03	;
$AA6B	STA $0436,X	;
$AA6E	LDA #$01	;
$AA70	STA $7F,X	;
$AA72	DEC $045A,X	;
$AA75	BNE $AA81	;
$AA77	LDA #$00	;
$AA79	STA $C1,X	;
$AA7B	STA $7F,X	;
$AA7D	LDA #$20	;
$AA7F	STA $F0  	;
$AA81	RTS		; (within an if statement) 
$AA82	LDA $0412,X	;
$AA85	CLC		;
$AA86	LDY $0451,X	;
$AA89	ADC $E5F7,Y	;
$AA8C	STA $0412,X	;
$AA8F	BCC $AA94	;
$AA91	INC $041B,X	;
$AA94	LDA $041B,X	;
$AA97	BMI $AAB7	;
$AA99	CMP $E663,Y	;
$AA9C	BCC $AAD2	;
$AA9E	BNE $AAA8	;
$AAA0	LDA $0412,X	;
$AAA3	CMP $E657,Y	;
$AAA6	BCC $AAD2	;
$AAA8	LDA $E657,Y	;
$AAAB	STA $0412,X	;
$AAAE	LDA $E663,Y	;
$AAB1	STA $041B,X	;
$AAB4	JMP $EAD2	; (in an if statement) 
$AAB7	CMP $E67B,Y	;
$AABA	BCC $AAC6	;
$AABC	BNE $AAD2	;
$AABE	LDA $0412,X	;
$AAC1	CMP $E66F,Y	;
$AAC4	BCS $AAD2	;
$AAC6	LDA $E66F,Y	;
$AAC9	STA $0412,X	;
$AACC	LDA $E67B,Y	;
$AACF	STA $041B,X	;
$AAD2	JSR $EB96	;
$AAD5	CMP #$f8	;
$AAD7	BCS $AB03	;
$AAD9	CMP #$e8	;
$AADB	BCC $AB03	;
$AADD	LDA #$ff	;
$AADF	STA $88,X	;
$AAE1	LDA #$04	;
$AAE3	STA $BB  	;
$AAE5	LDA $91,X	;
$AAE7	STA $BC  	;
$AAE9	CPX #$02	;
$AAEB	BCC $AAFB	;
$AAED	LDA #$80	;
$AAEF	STA $88,X	;
$AAF1	LDA #$00	;
$AAF3	STA $7F,X	;
$AAF5	LDA #$01	;
$AAF7	STA $F3  	;
$AAF9	BNE $AB03	;
$AAFB	LDA $C8  	;
$AAFD	BNE $AB03	;
$AAFF	LDA #$40	;
$AB01	STA $F0  	;
$AB03	LDA $042D,X	;
$AB06	BMI $AB26	;
$AB08	CMP $E633,Y	;
$AB0B	BCC $AB41	;
$AB0D	BNE $AB17	;
$AB0F	LDA $0424,X	;
$AB12	CMP $E627,Y	;
$AB15	BCC $AB41	;
$AB17	LDA $E627,Y	;
$AB1A	STA $0424,X	;
$AB1D	LDA $E633,Y	;
$AB20	STA $042D,X	;
$AB23	JMP $EB41	; (in an if statement) 
$AB26	CMP $E64B,Y	;
$AB29	BCC $AB35	;
$AB2B	BNE $AB41	;
$AB2D	LDA $0424,X	;
$AB30	CMP $E63F,Y	;
$AB33	BCS $AB41	;
$AB35	LDA $E63F,Y	;
$AB38	STA $0424,X	;
$AB3B	LDA $E64B,Y	;
$AB3E	STA $042D,X	;
$AB41	JSR $EB84	;
$AB44	LDA $16  	;
$AB46	BEQ $AB58	;
$AB48	LDA $91,X	;
$AB4A	CMP #$10	;
$AB4C	BCS $AB50	;
$AB4E	LDA #$10	;
$AB50	CMP #$e0	;
$AB52	BCC $AB56	;
$AB54	LDA #$e0	;
$AB56	STA $91,X	;
$AB58	LDA $C8  	;
$AB5A	BEQ $AB83	;
$AB5C	LDA $88,X	;
$AB5E	BNE $AB83	;
$AB60	LDA $9A,X	;
$AB62	CMP #$c8	;
$AB64	BCC $AB83	;
$AB66	LDA #$c7	;
$AB68	STA $9A,X	;
$AB6A	LDA $0451,X	;
$AB6D	CMP #$0b	;
$AB6F	BNE $AB7A	;
$AB71	DEC $0451,X	;
$AB74	JSR $F0FD	;
$AB77	JMP $F182	; (in an if statement) 
$AB7A	LDA #$02	;
$AB7C	STA $88,X	;
$AB7E	LDA #$03	;
$AB80	STA $0451,X	;
$AB83	RTS		;

$AB84	LDA $0400,X	;
$AB87	CLC		;
$AB88	ADC $0424,X	;
$AB8B	STA $0400,X	;
$AB8E	LDA $91,X	;
$AB90	ADC $042D,X	;
$AB93	STA $91,X	;
$AB95	RTS		;

$AB96	LDA $0409,X	;
$AB99	CLC		;
$AB9A	ADC $0412,X	;
$AB9D	STA $0409,X	;
$ABA0	LDA $9A,X	;
$ABA2	ADC $041B,X	;
$ABA5	STA $9A,X	;
$ABA7	RTS		;

$ABA8	JSR $F0AA	;
$ABAB	JSR $EB84	;
$ABAE	JMP $F0AA	;

$ABB1	JSR $F0AA	;
$ABB4	JSR $EB96	;
$ABB7	JMP $F0AA	;

$ABBA	CPX #$02	;
$ABBC	BCS $ABD9	;
$ABBE	LDA $88,X	;
$ABC0	BNE $ABCC	;
$ABC2	LDA $0436,X	;
$ABC5	BNE $ABCC	;
$ABC7	LDA #$00	;
$ABC9	STA $7F,X	;
$ABCB	RTS		; (within an if statement) 
$ABCC	LDA $7F,X	;
$ABCE	CMP #$06	;
$ABD0	BCC $AC2E	;
$ABD2	LDA #$01	;
$ABD4	STA $7F,X	;
$ABD6	DEC $88,X	;
$ABD8	RTS		; (within an if statement) 
$ABD9	LDA $88,X	;
$ABDB	CMP #$02	;
$ABDD	BEQ $AC2E	;
$ABDF	LDA $0436,X	;
$ABE2	BNE $ABF3	;
$ABE4	LDA $88,X	;
$ABE6	BNE $ABED	;
$ABE8	LDA #$00	;
$ABEA	STA $7F,X	;
$ABEC	RTS		; (within an if statement) 
$ABED	LDA $7F,X	;
$ABEF	BNE $ABF4	;
$ABF1	INC $7F,X	;
$ABF3	RTS		; (within an if statement) 
$ABF4	CMP #$02	;
$ABF6	BCC $ABF3	;
$ABF8	DEC $045A,X	;
$ABFB	BNE $AC2D	;
$ABFD	LDA $C7  	;
$ABFF	STA $045A,X	;
$AC02	INC $7F,X	;
$AC04	LDA $7F,X	;
$AC06	CMP #$07	;
$AC08	BCC $AC2D	;
$AC0A	LDA #$02	;
$AC0C	STA $88,X	;
$AC0E	LDA #$00	;
$AC10	STA $7F,X	;
$AC12	LDY $0451,X	;
$AC15	LDA $ECA4,Y	;
$AC18	LDY $047E,X	;
$AC1B	BNE $AC25	;
$AC1D	DEC $047E,X	;
$AC20	LDA $0451,X	;
$AC23	AND #$03	;
$AC25	STA $0451,X	;
$AC28	LDA #$fe	;
$AC2A	STA $041B,X	;
$AC2D	RTS		; (within an if statement) 
$AC2E	JSR $E6DF	;
$AC31	LDA $31,X	;
$AC33	AND #$c3	;
$AC35	BEQ $AC3F	;
$AC37	CPX #$02	;
$AC39	BCS $AC3F	;
$AC3B	LDA #$00	;
$AC3D	STA $BD,X	;
$AC3F	LDA $31,X	;
$AC41	AND #$40	;
$AC43	BNE $AC57	;
$AC45	LDA $31,X	;
$AC47	AND #$80	;
$AC49	BNE $AC52	;
$AC4B	LDA #$00	;
$AC4D	STA $0620,X	;
$AC50	BEQ $ACA3	;
$AC52	LDA $0620,X	;
$AC55	BNE $ACA3	;
$AC57	LDA $7F,X	;
$AC59	CMP #$02	;
$AC5B	BCC $AC6B	;
$AC5D	DEC $9A,X	;
$AC5F	DEC $9A,X	;
$AC61	LDA #$00	;
$AC63	STA $0412,X	;
$AC66	STA $041B,X	;
$AC69	BEQ $AC74	;
$AC6B	CMP #$01	;
$AC6D	BEQ $AC74	;
$AC6F	LDA $0436,X	;
$AC72	BNE $ACA3	;
$AC74	LDA #$00	;
$AC76	STA $7F,X	;
$AC78	LDA #$01	;
$AC7A	STA $0436,X	;
$AC7D	LDA #$01	;
$AC7F	STA $0620,X	;
$AC82	LDY #$00	;
$AC84	CPX #$02	;
$AC86	BCC $AC89	;
$AC88	INY		;
$AC89	LDA $00F0,Y	;
$AC8C	ORA #$10	;
$AC8E	STA $00F0,Y	;
$AC91	LDA $0412,X	;
$AC94	SEC		;
$AC95	LDY $0451,X	;
$AC98	SBC $E603,Y	;
$AC9B	STA $0412,X	;
$AC9E	BCS $ACA3	;
$ACA0	DEC $041B,X	;
$ACA3	RTS		;

$ACA4	ORA ($02,X)	;
$ACA6	.byte $02	; INVALID OPCODE !!!
$ACA7	.byte $03	; INVALID OPCODE !!!
$ACA8	ORA ($02,X)	;
$ACAA	.byte $02	; INVALID OPCODE !!!
$ACAB	.byte $03	; INVALID OPCODE !!!
$ACAC	ORA ($02,X)	;
$ACAE	.byte $02	; INVALID OPCODE !!!
$ACAF	.byte $03	; INVALID OPCODE !!!
$ACB0	LDA $7F,X	;
$ACB2	BNE $AD1D	;
$ACB4	JSR $E7A7	;
$ACB7	JSR $EB84	;
$ACBA	LDA $0409,X	;
$ACBD	SEC		;
$ACBE	SBC #$60	;
$ACC0	STA $0409,X	;
$ACC3	LDA $9A,X	;
$ACC5	SBC #$00	;
$ACC7	STA $9A,X	;
$ACC9	CMP #$f1	;
$ACCB	BCC $ACD1	;
$ACCD	LDA #$ff	;
$ACCF	STA $88,X	;
$ACD1	TXA		;
$ACD2	PHA		;
$ACD3	LDY #$01	;
$ACD5	LDA $0088,Y	;
$ACD8	BEQ $AD18	;
$ACDA	BMI $AD18	;
$ACDC	LDA $9A,X	;
$ACDE	SEC		;
$ACDF	SBC $009A,Y	;
$ACE2	JSR $F084	;
$ACE5	CMP #$18	;
$ACE7	BCS $AD18	;
$ACE9	LDA $91,X	;
$ACEB	SEC		;
$ACEC	SBC $0091,Y	;
$ACEF	JSR $F084	;
$ACF2	CMP #$10	;
$ACF4	BCS $AD18	;
$ACF6	LDA #$ff	;
$ACF8	STA $7F,X	;
$ACFA	LDA #$03	;
$ACFC	STA $045A,X	;
$ACFF	LDA #$78	;
$AD01	STA $C5  	;
$AD03	LDA #$02	;
$AD05	STA $F0  	;
$AD07	LDA #$32	;
$AD09	STY $3E  	;
$AD0B	JSR $D6D4	;
$AD0E	LDA #$01	;
$AD10	LDX $3E  	;
$AD12	JSR $D867	;
$AD15	PLA		;
$AD16	TAX		;
$AD17	RTS		; (within an if statement) 
$AD18	DEY		;
$AD19	BPL $ACD5	;
$AD1B	PLA		;
$AD1C	TAX		;
$AD1D	RTS		;

$AD1E	LDY $88,X	;
$AD20	DEY		;
$AD21	BPL $AD24	;
$AD23	RTS		; (within an if statement) 
$AD24	LDA $9A,X	;
$AD26	CMP #$f9	;
$AD28	BCC $AD36	;
$AD2A	LDA $041B,X	;
$AD2D	BPL $AD23	;
$AD2F	LDA #$00	;
$AD31	STA $CC  	;
$AD33	JMP $EDD7	; (in an if statement) 
$AD36	LDY $CD  	;
$AD38	BMI $AD1D	;
$AD3A	LDA #$00	;
$AD3C	STA $CC  	;
$AD3E	LDA ($27),Y	;
$AD40	SEC		;
$AD41	SBC #$18	;
$AD43	CMP $9A,X	;
$AD45	BCS $ADAC	;
$AD47	ADC #$03	;
$AD49	CMP $9A,X	;
$AD4B	BCC $AD51	;
$AD4D	LDA #$01	;
$AD4F	BNE $AD5F	;
$AD51	LDA ($29),Y	;
$AD53	CMP $9A,X	;
$AD55	BCC $ADAC	;
$AD57	SBC #$03	;
$AD59	CMP $9A,X	;
$AD5B	BCS $AD7F	;
$AD5D	LDA #$02	;
$AD5F	STA $CC  	;
$AD61	LDA ($23),Y	;
$AD63	CMP #$10	;
$AD65	BEQ $AD6E	;
$AD67	SEC		;
$AD68	SBC #$0c	;
$AD6A	CMP $91,X	;
$AD6C	BCS $AD7B	;
$AD6E	LDA ($25),Y	;
$AD70	CMP #$ff	;
$AD72	BEQ $AD7F	;
$AD74	SEC		;
$AD75	SBC #$04	;
$AD77	CMP $91,X	;
$AD79	BCS $AD7F	;
$AD7B	LDA #$00	;
$AD7D	STA $CC  	;
$AD7F	LDA ($23),Y	;
$AD81	SEC		;
$AD82	SBC #$10	;
$AD84	BEQ $AD96	;
$AD86	CMP $91,X	;
$AD88	BCS $ADAC	;
$AD8A	ADC #$04	;
$AD8C	CMP $91,X	;
$AD8E	BCC $AD96	;
$AD90	LDA $CC  	;
$AD92	ORA #$04	;
$AD94	BNE $ADAA	;
$AD96	LDA ($25),Y	;
$AD98	CMP #$ff	;
$AD9A	BEQ $ADAC	;
$AD9C	CMP $91,X	;
$AD9E	BCC $ADAC	;
$ADA0	SBC #$04	;
$ADA2	CMP $91,X	;
$ADA4	BCS $ADAC	;
$ADA6	LDA $CC  	;
$ADA8	ORA #$08	;
$ADAA	STA $CC  	;
$ADAC	LDA $CC  	;
$ADAE	BNE $ADB7	;
$ADB0	DEY		;
$ADB1	BMI $ADB6	;
$ADB3	JMP $ED3A	; (in an if statement) 
$ADB6	RTS		; (within an if statement) 
$ADB7	LSR $CC  	;
$ADB9	BCC $ADCC	;
$ADBB	LDA $041B,X	;
$ADBE	BMI $ADCC	;
$ADC0	LDA ($27),Y	;
$ADC2	SBC #$18	;
$ADC4	STA $9A,X	;
$ADC6	INC $9A,X	;
$ADC8	LDA #$01	;
$ADCA	STA $CB  	;
$ADCC	LSR $CC  	;
$ADCE	BCC $ADEA	;
$ADD0	LDA $041B,X	;
$ADD3	BPL $ADEA	;
$ADD5	LDA ($29),Y	;
$ADD7	STA $9A,X	;
$ADD9	JSR $F0FD	;
$ADDC	JSR $F182	;
$ADDF	CPX #$02	;
$ADE1	BCS $ADE6	;
$ADE3	JSR $CC29	;
$ADE6	LDA $CB  	;
$ADE8	BNE $AE1A	;
$ADEA	LSR $CC  	;
$ADEC	BCC $ADF5	;
$ADEE	LDA $042D,X	;
$ADF1	BMI $ADF5	;
$ADF3	BPL $ADFE	;
$ADF5	LSR $CC  	;
$ADF7	BCC $AE1A	;
$ADF9	LDA $042D,X	;
$ADFC	BPL $AE1A	;
$ADFE	JSR $F0D4	;
$AE01	JSR $F168	;
$AE04	LDA $042D,X	;
$AE07	ORA $0424,X	;
$AE0A	BEQ $AE1A	;
$AE0C	LDA $0448,X	;
$AE0F	EOR #$01	;
$AE11	STA $0448,X	;
$AE14	LDA $F1  	;
$AE16	ORA #$02	;
$AE18	STA $F1  	;
$AE1A	RTS		;

$AE1B	LDX #$07	;
$AE1D	STX $12  	;
$AE1F	LDY $12  	;
$AE21	DEY		;
$AE22	BPL $AE27	;
$AE24	JMP $EF20	; (in an if statement) 
$AE27	LDA $88,X	;
$AE29	BMI $AE24	;
$AE2B	BEQ $AE24	;
$AE2D	LDA $0088,Y	;
$AE30	BMI $AE24	;
$AE32	BEQ $AE24	;
$AE34	LDA #$00	;
$AE36	STA $CC  	;
$AE38	LDA $009A,Y	;
$AE3B	SEC		;
$AE3C	SBC $9A,X	;
$AE3E	JSR $F084	;
$AE41	CMP #$18	;
$AE43	BCS $AEB6	;
$AE45	LDA $9A,X	;
$AE47	CLC		;
$AE48	ADC #$18	;
$AE4A	STA $12  	;
$AE4C	LDA $009A,Y	;
$AE4F	CLC		;
$AE50	ADC #$07	;
$AE52	SEC		;
$AE53	SBC $12  	;
$AE55	JSR $F084	;
$AE58	CMP #$04	;
$AE5A	BCS $AE60	;
$AE5C	LDA #$01	;
$AE5E	BNE $AE72	;
$AE60	LDA $009A,Y	;
$AE63	CLC		;
$AE64	ADC #$11	;
$AE66	SEC		;
$AE67	SBC $9A,X	;
$AE69	JSR $F084	;
$AE6C	CMP #$04	;
$AE6E	BCS $AE85	;
$AE70	LDA #$02	;
$AE72	STA $CC  	;
$AE74	LDA $0091,Y	;
$AE77	SEC		;
$AE78	SBC $91,X	;
$AE7A	JSR $F084	;
$AE7D	CMP #$10	;
$AE7F	BCC $AE85	;
$AE81	LDA #$00	;
$AE83	STA $CC  	;
$AE85	LDA $91,X	;
$AE87	CLC		;
$AE88	ADC #$10	;
$AE8A	STA $12  	;
$AE8C	LDA $0091,Y	;
$AE8F	CLC		;
$AE90	ADC #$07	;
$AE92	SEC		;
$AE93	SBC $12  	;
$AE95	JSR $F084	;
$AE98	CMP #$04	;
$AE9A	BCS $AEA0	;
$AE9C	LDA #$04	;
$AE9E	BNE $AEB2	;
$AEA0	LDA $0091,Y	;
$AEA3	CLC		;
$AEA4	ADC #$09	;
$AEA6	SEC		;
$AEA7	SBC $91,X	;
$AEA9	JSR $F084	;
$AEAC	CMP #$04	;
$AEAE	BCS $AEB6	;
$AEB0	LDA #$08	;
$AEB2	ORA $CC  	;
$AEB4	STA $CC  	;
$AEB6	LDA #$00	;
$AEB8	STA $4B  	;
$AEBA	LSR $CC  	;
$AEBC	BCC $AEC3	;
$AEBE	JSR $F09C	;
$AEC1	BMI $AECC	;
$AEC3	LSR $CC  	;
$AEC5	BCC $AEE7	;
$AEC7	JSR $F09C	;
$AECA	BMI $AEE7	;
$AECC	JSR $F0B3	;
$AECF	BCS $AEE3	;
$AED1	JSR $F0FD	;
$AED4	JSR $F182	;
$AED7	JSR $F0AA	;
$AEDA	JSR $F0FD	;
$AEDD	JSR $F182	;
$AEE0	JSR $F0AA	;
$AEE3	LDA #$01	;
$AEE5	STA $4B  	;
$AEE7	LSR $CC  	;
$AEE9	BCC $AEF0	;
$AEEB	JSR $F08E	;
$AEEE	BMI $AEF9	;
$AEF0	LSR $CC  	;
$AEF2	BCC $AF14	;
$AEF4	JSR $F08E	;
$AEF7	BMI $AF14	;
$AEF9	JSR $F0B3	;
$AEFC	BCS $AF10	;
$AEFE	JSR $F0D4	;
$AF01	JSR $F168	;
$AF04	JSR $F0AA	;
$AF07	JSR $F0D4	;
$AF0A	JSR $F168	;
$AF0D	JSR $F0AA	;
$AF10	LDA #$01	;
$AF12	STA $4B  	;
$AF14	JSR $EF2D	;
$AF17	JSR $F0AA	;
$AF1A	JSR $EF2D	;
$AF1D	JSR $F0AA	;
$AF20	DEY		;
$AF21	BMI $AF26	;
$AF23	JMP $EE27	; (in an if statement) 
$AF26	DEX		;
$AF27	BMI $AF2C	;
$AF29	JMP $EE1D	; (in an if statement) 
$AF2C	RTS		;

$AF2D	CPX #$02	;
$AF2F	BCC $AF38	;
$AF31	CPY #$02	;
$AF33	BCC $AF38	;
$AF35	JMP $F039	; (in an if statement) 
$AF38	LDA #$00	;
$AF3A	STA $0487	;
$AF3D	LDA $0475,X	;
$AF40	BEQ $AF45	;
$AF42	JMP $F039	; (in an if statement) 
$AF45	LDA $4B  	;
$AF47	BNE $AF4C	;
$AF49	JMP $F039	; (in an if statement) 
$AF4C	CPX #$02	;
$AF4E	BCS $AF57	;
$AF50	LDA $BD,X	;
$AF52	BEQ $AF68	;
$AF54	JMP $F039	; (in an if statement) 
$AF57	LDA $88,X	;
$AF59	CMP #$01	;
$AF5B	BNE $AF68	;
$AF5D	LDA $7F,X	;
$AF5F	CMP #$02	;
$AF61	BCS $AF75	;
$AF63	LDA #$01	;
$AF65	STA $0487	;
$AF68	LDA $009A,Y	;
$AF6B	CLC		;
$AF6C	ADC #$04	;
$AF6E	CMP $9A,X	;
$AF70	BCC $AF75	;
$AF72	JMP $F039	; (in an if statement) 
$AF75	LDA #$14	;
$AF77	STA $0475,X	;
$AF7A	LDA #$00	;
$AF7C	STA $0436,X	;
$AF7F	CPY #$02	;
$AF81	BCC $AF8D	;
$AF83	LDA $0088,Y	;
$AF86	CMP #$02	;
$AF88	BEQ $AF8D	;
$AF8A	JMP $F039	; (in an if statement) 
$AF8D	LDA $F0  	;
$AF8F	ORA #$02	;
$AF91	STA $F0  	;
$AF93	LDA $88,X	;
$AF95	CMP #$02	;
$AF97	BNE $AFB6	;
$AF99	CPX #$02	;
$AF9B	BCS $AFB6	;
$AF9D	STY $12  	;
$AF9F	LDY $7F,X	;
$AFA1	LDA $F049,Y	;
$AFA4	LDY $12  	;
$AFA6	PHA		;
$AFA7	PLA		;
$AFA8	BNE $AFAD	;
$AFAA	JMP $F039	; (in an if statement) 
$AFAD	STA $7F,X	;
$AFAF	LDA #$00	;
$AFB1	STA $0436,X	;
$AFB4	BEQ $AFE0	;
$AFB6	DEC $88,X	;
$AFB8	BNE $AFC4	;
$AFBA	LDA #$ff	;
$AFBC	STA $041B,X	;
$AFBF	LDA #$00	;
$AFC1	STA $0412,X	;
$AFC4	LDA #$00	;
$AFC6	STA $7F,X	;
$AFC8	STA $0424,X	;
$AFCB	STA $042D,X	;
$AFCE	LDA $91,X	;
$AFD0	BMI $AFD6	;
$AFD2	LDA #$ff	;
$AFD4	BNE $AFD8	;
$AFD6	LDA #$00	;
$AFD8	STA $046C,X	;
$AFDB	LDA #$80	;
$AFDD	STA $0463,X	;
$AFE0	STY $12  	;
$AFE2	LDY $0451,X	;
$AFE5	LDA $F054,Y	;
$AFE8	STA $0451,X	;
$AFEB	LDA #$01	;
$AFED	STA $047E,X	;
$AFF0	LDY $12  	;
$AFF2	CPY #$02	;
$AFF4	BCS $B039	;
$AFF6	LDA $0451,X	;
$AFF9	CMP #$07	;
$AFFB	BEQ $B007	;
$AFFD	CMP #$08	;
$AFFF	BCC $B007	;
$B001	LDA $F1  	;
$B003	ORA #$80	;
$B005	STA $F1  	;
$B007	LDY $0451,X	;
$B00A	LDA $F060,Y	;
$B00D	STA $13  	;
$B00F	LDA $0487	;
$B012	BEQ $B019	;
$B014	LDA $F06C,Y	;
$B017	STA $13  	;
$B019	LDA $F078,Y	;
$B01C	CLC		;
$B01D	ADC $0487	;
$B020	STA $14  	;
$B022	LDA $12  	;
$B024	STA $3E  	;
$B026	PHA		;
$B027	TXA		;
$B028	PHA		;
$B029	LDA $13  	;
$B02B	PHA		;
$B02C	LDA $14  	;
$B02E	JSR $D867	;
$B031	PLA		;
$B032	JSR $D6D4	;
$B035	PLA		;
$B036	TAX		;
$B037	PLA		;
$B038	TAY		;
$B039	LDA $0451,X	;
$B03C	CMP #$0b	;
$B03E	BNE $B048	;
$B040	LDA $C8  	;
$B042	BNE $B048	;
$B044	LDA #$20	;
$B046	STA $F0  	;
$B048	RTS		;

$B049	ASL $06  	;
$B04B	.byte $07	; INVALID OPCODE !!!
$B04C	PHP		;
$B04D	ORA #$0a	;
$B04F	BRK		;
$B050	BRK		;
$B051	BRK		;
$B052	BRK		;
$B053	BRK		;
$B054	.byte $04	; INVALID OPCODE !!!
$B055	ORA $06  	;
$B057	.byte $07	; INVALID OPCODE !!!
$B058	PHP		;
$B059	ORA #$0a	;
$B05B	.byte $0b	; INVALID OPCODE !!!
$B05C	PHP		;
$B05D	ORA #$0a	;
$B05F	.byte $0b	; INVALID OPCODE !!!
$B060	BRK		;
$B061	BRK		;
$B062	BRK		;
$B063	BRK		;
$B064	.byte $32	; INVALID OPCODE !!!
$B065	.byte $4b	; INVALID OPCODE !!!
$B066	.byte $64	; INVALID OPCODE !!!
$B067	.byte $64	; INVALID OPCODE !!!
$B068	.byte $4b	; INVALID OPCODE !!!
$B069	.byte $64	; INVALID OPCODE !!!
$B06A	STX $64,Y 	;
$B06C	BRK		;
$B06D	BRK		;
$B06E	BRK		;
$B06F	BRK		;
$B070	.byte $32	; INVALID OPCODE !!!
$B071	.byte $4b	; INVALID OPCODE !!!
$B072	.byte $64	; INVALID OPCODE !!!
$B073	.byte $64	; INVALID OPCODE !!!
$B074	.byte $64	; INVALID OPCODE !!!
$B075	STX $C8,Y 	;
$B077	.byte $64	; INVALID OPCODE !!!
$B078	BRK		;
$B079	BRK		;
$B07A	BRK		;
$B07B	BRK		;
$B07C	ORA ($02,X)	;
$B07E	.byte $03	; INVALID OPCODE !!!
$B07F	.byte $03	; INVALID OPCODE !!!
$B080	.byte $02	; INVALID OPCODE !!!
$B081	.byte $03	; INVALID OPCODE !!!
$B082	.byte $04	; INVALID OPCODE !!!
$B083	.byte $03	; INVALID OPCODE !!!
$B084	PHA		;
$B085	PLA		;
$B086	BPL $B08D	;
$B088	EOR #$ff	;
$B08A	CLC		;
$B08B	ADC #$01	;
$B08D	RTS		;

$B08E	LDA $0424,Y	;
$B091	SEC		;
$B092	SBC $0424,X	;
$B095	LDA $042D,Y	;
$B098	SBC $042D,X	;
$B09B	RTS		;

$B09C	LDA $0412,Y	;
$B09F	SEC		;
$B0A0	SBC $0412,X	;
$B0A3	LDA $041B,Y	;
$B0A6	SBC $041B,X	;
$B0A9	RTS		;

$B0AA	STX $12  	;
$B0AC	STY $13  	;
$B0AE	LDX $13  	;
$B0B0	LDY $12  	;
$B0B2	RTS		;

$B0B3	CPX #$02	;
$B0B5	BCC $B0D3	;
$B0B7	LDA $7F,X	;
$B0B9	CMP #$02	;
$B0BB	BCC $B0D3	;
$B0BD	LDA #$01	;
$B0BF	CMP $88,X	;
$B0C1	BCS $B0D3	;
$B0C3	CPY #$02	;
$B0C5	BCC $B0D3	;
$B0C7	LDA $007F,Y	;
$B0CA	CMP #$02	;
$B0CC	BCC $B0D3	;
$B0CE	LDA #$01	;
$B0D0	CMP $0088,Y	;
$B0D3	RTS		;

$B0D4	LDA #$00	;
$B0D6	SEC		;
$B0D7	SBC $0424,X	;
$B0DA	STA $0424,X	;
$B0DD	LDA #$00	;
$B0DF	SBC $042D,X	;
$B0E2	STA $042D,X	;
$B0E5	LDA #$00	;
$B0E7	SEC		;
$B0E8	SBC $0463,X	;
$B0EB	STA $0463,X	;
$B0EE	LDA #$00	;
$B0F0	SBC $046C,X	;
$B0F3	STA $046C,X	;
$B0F6	LDA $31,X	;
$B0F8	AND #$40	;
$B0FA	STA $31,X	;
$B0FC	RTS		;

$B0FD	LDA #$00	;
$B0FF	SEC		;
$B100	SBC $0412,X	;
$B103	STA $0412,X	;
$B106	LDA #$00	;
$B108	SBC $041B,X	;
$B10B	STA $041B,X	;
$B10E	RTS		;

$B10F	STA $2D  	;
$B111	LDA $2C  	;
$B113	BPL $B139	;
$B115	LDA #$00	;
$B117	SEC		;
$B118	SBC $2B  	;
$B11A	STA $2B  	;
$B11C	LDA #$00	;
$B11E	SBC $2C  	;
$B120	STA $2C  	;
$B122	JSR $F139	;
$B125	LDA #$00	;
$B127	SEC		;
$B128	SBC $2E  	;
$B12A	STA $2E  	;
$B12C	LDA #$00	;
$B12E	SBC $2F  	;
$B130	STA $2F  	;
$B132	LDA #$00	;
$B134	SBC $30  	;
$B136	STA $30  	;
$B138	RTS		; (within an if statement) 
$B139	TXA		;
$B13A	PHA		;
$B13B	LDA #$00	;
$B13D	STA $2E  	;
$B13F	STA $2F  	;
$B141	STA $30  	;
$B143	LDX #$08	;
$B145	ASL $2E  	;
$B147	ROL $2F  	;
$B149	ROL $30  	;
$B14B	ASL $2D  	;
$B14D	BCC $B162	;
$B14F	CLC		;
$B150	LDA $2B  	;
$B152	ADC $2E  	;
$B154	STA $2E  	;
$B156	LDA $2C  	;
$B158	ADC $2F  	;
$B15A	STA $2F  	;
$B15C	LDA #$00	;
$B15E	ADC $30  	;
$B160	STA $30  	;
$B162	DEX		;
$B163	BNE $B145	;
$B165	PLA		;
$B166	TAX		;
$B167	RTS		;

$B168	LDA $0424,X	;
$B16B	STA $2B  	;
$B16D	LDA $042D,X	;
$B170	STA $2C  	;
$B172	LDA #$cd	;
$B174	JSR $F10F	;
$B177	LDA $2F  	;
$B179	STA $0424,X	;
$B17C	LDA $30  	;
$B17E	STA $042D,X	;
$B181	RTS		;

$B182	LDA $0412,X	;
$B185	STA $2B  	;
$B187	LDA $041B,X	;
$B18A	STA $2C  	;
$B18C	LDA #$cd	;
$B18E	JSR $F10F	;
$B191	LDA $2F  	;
$B193	STA $0412,X	;
$B196	LDA $30  	;
$B198	STA $041B,X	;
$B19B	RTS		;

$B19C	LDY #$04	;
$B19E	LDA $13  	;
$B1A0	ASL A		;
$B1A1	ROR $13  	;
$B1A3	ROR $12  	;
$B1A5	DEY		;
$B1A6	BNE $B19E	;
$B1A8	RTS		;

$B1A9	TXA		;
$B1AA	PHA		;
$B1AB	LDX #$0b	;
$B1AD	ASL $1B  	;
$B1AF	ROL $1C  	;
$B1B1	ROL A		;
$B1B2	ROL A		;
$B1B3	EOR $1B  	;
$B1B5	ROL A		;
$B1B6	EOR $1B  	;
$B1B8	LSR A		;
$B1B9	LSR A		;
$B1BA	EOR #$ff	;
$B1BC	AND #$01	;
$B1BE	ORA $1B  	;
$B1C0	STA $1B  	;
$B1C2	DEX		;
$B1C3	BNE $B1AD	;
$B1C5	PLA		;
$B1C6	TAX		;
$B1C7	LDA $1B  	;
$B1C9	RTS		;

$B1CA	JSR $DAB7	;
$B1CD	LDX #$09	;
$B1CF	LDA #$00	;
$B1D1	STA $03,X	;
$B1D3	DEX		;
$B1D4	BPL $B1CF	;
$B1D6	STA $3E  	;
$B1D8	INC $41  	;
$B1DA	JSR $D6D4	;
$B1DD	LDA #$0f	;
$B1DF	STA $4015	;IRQ status / Sound enable
$B1E2	LDA #$01	;
$B1E4	STA $F0  	;
$B1E6	LDA #$02	;
$B1E8	STA $41  	;
$B1EA	LDY $40  	;
$B1EC	BNE $B1F0	;
$B1EE	LDA #$ff	;
$B1F0	STA $42  	;
$B1F2	LDX #$00	;
$B1F4	STX $0488	;
$B1F7	STX $3B  	;
$B1F9	STX $3C  	;
$B1FB	STX $0558	;
$B1FE	DEX		;
$B1FF	STX $89  	;
$B201	LDX $40  	;
$B203	JSR $F3A6	;
$B206	DEX		;
$B207	BPL $B203	;
$B209	LDA #$00	;
$B20B	STA $C8  	;
$B20D	LDA $3C  	;
$B20F	LSR A		;
$B210	LSR A		;
$B211	CMP #$08	;
$B213	BCC $B217	;
$B215	LDA #$08	;
$B217	TAX		;
$B218	LDA $F3B0,X	;
$B21B	STA $C6  	;
$B21D	LDA $F3B9,X	;
$B220	STA $C7  	;
$B222	LDA $3C  	;
$B224	CMP #$02	;
$B226	BCS $B22E	;
$B228	LDA #$03	;
$B22A	STA $C6  	;
$B22C	STA $C7  	;
$B22E	LDX #$07	;
$B230	LDA #$00	;
$B232	STA $0448,X	;
$B235	STA $0475,X	;
$B238	STA $047E,X	;
$B23B	STA $0424,X	;
$B23E	STA $042D,X	;
$B241	STA $0412,X	;
$B244	STA $041B,X	;
$B247	STA $0463,X	;
$B24A	STA $046C,X	;
$B24D	STA $0400,X	;
$B250	STA $0409,X	;
$B253	LDA #$01	;
$B255	STA $043F,X	;
$B258	STA $045A,X	;
$B25B	LDA #$03	;
$B25D	STA $0436,X	;
$B260	DEX		;
$B261	BPL $B230	;
$B263	LDX #$05	;
$B265	LDA #$ff	;
$B267	STA $8A,X	;
$B269	DEX		;
$B26A	BPL $B265	;
$B26C	LDX $40  	;
$B26E	JSR $F37C	;
$B271	DEX		;
$B272	BPL $B26E	;
$B274	JSR $D23C	;
$B277	JSR $D289	;
$B27A	LDA $C6  	;
$B27C	CMP #$10	;
$B27E	BCS $B284	;
$B280	LDA #$58	;
$B282	STA $C6  	;
$B284	JSR $F49B	;
$B287	JSR $D8F5	;
$B28A	LDA $16  	;
$B28C	BEQ $B291	;
$B28E	JMP $C1BB	; (in an if statement) 
$B291	LDA $C8  	;
$B293	BEQ $B298	;
$B295	JMP $CF09	; (in an if statement) 
$B298	JSR $C70C	;
$B29B	LDA $3B  	;
$B29D	AND #$03	;
$B29F	BNE $B2A9	;
$B2A1	LDA #$08	;
$B2A3	STA $F2  	;
$B2A5	LDX $3A  	;
$B2A7	BNE $B2AF	;
$B2A9	LDA #$ff	;
$B2AB	STA $3D  	;
$B2AD	INC $3C  	;
$B2AF	JSR $F466	;
$B2B2	LDA $3D  	;
$B2B4	BEQ $B2BB	;
$B2B6	DEC $3D  	;
$B2B8	JSR $F3C2	;
$B2BB	JSR $F1A9	;
$B2BE	JSR $E687	;
$B2C1	JSR $C6EF	;
$B2C4	JSR $C786	;
$B2C7	JSR $C827	;
$B2CA	JSR $C8AD	;
$B2CD	JSR $D8D3	;
$B2D0	JSR $E57D	;
$B2D3	JSR $CB6A	;
$B2D6	INC $4C  	;
$B2D8	LDX $40  	;
$B2DA	LDA $88,X	;
$B2DC	BPL $B303	;
$B2DE	LDA $3A  	;
$B2E0	BNE $B31C	;
$B2E2	LDA $41,X	;
$B2E4	BMI $B303	;
$B2E6	DEC $C3,X	;
$B2E8	BNE $B31D	;
$B2EA	TXA		;
$B2EB	PHA		;
$B2EC	JSR $C71C	;
$B2EF	PLA		;
$B2F0	TAX		;
$B2F1	LDY #$02	;
$B2F3	DEC $41,X	;
$B2F5	STY $46  	;
$B2F7	BMI $B303	;
$B2F9	JSR $F37C	;
$B2FC	JSR $F3A6	;
$B2FF	LDA #$80	;
$B301	STA $F2  	;
$B303	DEX		;
$B304	BPL $B2DA	;
$B306	LDA $41  	;
$B308	BPL $B30E	;
$B30A	LDA $42  	;
$B30C	BMI $B35C	;
$B30E	LDA $3A  	;
$B310	BEQ $B31D	;
$B312	JSR $E75E	;
$B315	LDA $061C	;
$B318	AND #$30	;
$B31A	BEQ $B2AF	;
$B31C	RTS		; (within an if statement) 
$B31D	LDX #$05	;
$B31F	LDA $8A,X	;
$B321	BEQ $B325	;
$B323	BPL $B2AF	;
$B325	DEX		;
$B326	BPL $B31F	;
$B328	LDA $BB  	;
$B32A	BPL $B2AF	;
$B32C	LDX $40  	;
$B32E	LDY $88,X	;
$B330	DEY		;
$B331	BPL $B342	;
$B333	LDA $41,X	;
$B335	BMI $B342	;
$B337	LDA #$ff	;
$B339	STA $88,X	;
$B33B	LDA #$01	;
$B33D	STA $C3,X	;
$B33F	JMP $F2AF	; (in an if statement) 
$B342	DEX		;
$B343	BPL $B32E	;
$B345	LDA #$02	;
$B347	STA $F2  	;
$B349	LDX #$96	;
$B34B	JSR $F454	;
$B34E	LDX $3B  	;
$B350	INX		;
$B351	CPX #$10	;
$B353	BNE $B357	;
$B355	LDX #$04	;
$B357	STX $3B  	;
$B359	JMP $F209	; (in an if statement) 
$B35C	LDA #$01	;
$B35E	STA $F2  	;
$B360	LDA #$00	;
$B362	STA $17  	;
$B364	STA $18  	;
$B366	STA $15  	;
$B368	JSR $F401	;
$B36B	JSR $F45B	;
$B36E	JSR $E75E	;
$B371	AND #$30	;
$B373	BNE $B379	;
$B375	DEC $15  	;
$B377	BNE $B36B	;
$B379	JMP $F1CA	;

$B37C	LDA $41,X	;
$B37E	BMI $B3A3	;
$B380	LDA $F3A4,X	;
$B383	STA $91,X	;
$B385	LDA #$b8	;
$B387	STA $9A,X	;
$B389	STA $BD,X	;
$B38B	LDA #$c8	;
$B38D	STA $BF,X	;
$B38F	LDA #$5a	;
$B391	LDY $41,X	;
$B393	BPL $B397	;
$B395	LDA #$01	;
$B397	STA $C3,X	;
$B399	LDA #$00	;
$B39B	STA $C1,X	;
$B39D	STA $042D,X	;
$B3A0	STA $0424,X	;
$B3A3	RTS		;

$B3A4	JSR $A9D0	;
$B3A7	.byte $03	; INVALID OPCODE !!!
$B3A8	STA $0451,X	;
$B3AB	LDA #$02	;
$B3AD	STA $88,X	;
$B3AF	RTS		;

$B3B0	CLI		;
$B3B1	BVC $B40B	;
$B3B3	BVC $B405	;
$B3B5	RTI		; (within an if statement) 
$B3B6	SEC		;
$B3B7	BMI $B3E1	;
$B3B9	.byte $04	; INVALID OPCODE !!!
$B3BA	.byte $04	; INVALID OPCODE !!!
$B3BB	.byte $03	; INVALID OPCODE !!!
$B3BC	.byte $03	; INVALID OPCODE !!!
$B3BD	.byte $02	; INVALID OPCODE !!!
$B3BE	.byte $02	; INVALID OPCODE !!!
$B3BF	.byte $02	; INVALID OPCODE !!!
$B3C0	.byte $02	; INVALID OPCODE !!!
$B3C1	.byte $02	; INVALID OPCODE !!!
$B3C2	LDA $3D  	;
$B3C4	AND #$20	;
$B3C6	BEQ $B3E4	;
$B3C8	LDX #$0a	;
$B3CA	LDA $F3EB,X	;
$B3CD	STA $57,X	;
$B3CF	DEX		;
$B3D0	BPL $B3CA	;
$B3D2	LDY #$0a	;
$B3D4	LDA $3C  	;
$B3D6	STA $43  	;
$B3D8	JSR $D772	;
$B3DB	STA $60  	;
$B3DD	LDA $43  	;
$B3DF	STA $61  	;
$B3E1	JMP $C123	; (in an if statement) 
$B3E4	LDA #$f6	;
$B3E6	LDY #$f3	;
$B3E8	JMP $C127	; (in an if statement) 
$B3EB	JSR $086C	;
$B3EE	ORA $0A11,Y	;
$B3F1	.byte $1c	; INVALID OPCODE !!!
$B3F2	ASL $0025	;
$B3F5	BRK		;
$B3F6	JSR $086C	;
$B3F9	BIT $24  	;
$B3FB	BIT $24  	;
$B3FD	BIT $24  	;
$B3FF	BIT $24  	;
$B401	JSR $F45B	;
$B404	LDX #$01	;
$B406	LDA $F431,X	;
$B409	LDY $F433,X	;
$B40C	JSR $C127	;
$B40F	DEX		;
$B410	BPL $B406	;
$B412	LDX #$0f	;
$B414	LDA #$24	;
$B416	STA $5A,X	;
$B418	DEX		;
$B419	BPL $B414	;
$B41B	LDA #$10	;
$B41D	STA $59  	;
$B41F	LDA #$21	;
$B421	STA $57  	;
$B423	LDX #$02	;
$B425	LDA $F435,X	;
$B428	STA $58  	;
$B42A	JSR $C123	;
$B42D	DEX		;
$B42E	BPL $B425	;
$B430	RTS		;

$B431	SEC		;
$B432	.byte $4b	; INVALID OPCODE !!!
$B433	.byte $f4	; INVALID OPCODE !!!
$B434	.byte $f4	; INVALID OPCODE !!!
$B435	DEY		;
$B436	TAY		;
$B437	INX		;
$B438	AND ($C8,X)	;
$B43A	BPL $B460	;
$B43C	BIT $24  	;
$B43E	BPL $B44A	;
$B440	ASL $0E,X	;
$B442	BIT $24  	;
$B444	CLC		;
$B445	.byte $1f	; INVALID OPCODE !!!
$B446	ASL $241B	;
$B449	BIT $24  	;
$B44B	.byte $23	; INVALID OPCODE !!!
$B44C	.byte $da	; INVALID OPCODE !!!
$B44D	.byte $04	; INVALID OPCODE !!!
$B44E	TAX		;
$B44F	TAX		;
$B450	TAX		;
$B451	TAX		;
$B452	LDX #$14	;
$B454	JSR $F45B	;
$B457	DEX		;
$B458	BNE $B454	;
$B45A	RTS		; (within an if statement) 
$B45B	LDA #$00	;
$B45D	STA $02  	;
$B45F	LDA $02  	;
$B461	BEQ $B45F	;
$B463	DEC $02  	;
$B465	RTS		;

$B466	JSR $F45F	;
$B469	LDA $3A  	;
$B46B	BNE $B465	;
$B46D	JSR $E75E	;
$B470	AND #$10	;
$B472	BEQ $B465	;
$B474	LDA #$04	;
$B476	STA $F2  	;
$B478	LDA $01  	;
$B47A	AND #$ef	;
$B47C	STA $2001	;PPU setup #2
$B47F	JSR $F45B	;
$B482	JSR $E75E	;
$B485	AND #$10	;
$B487	BEQ $B47F	;
$B489	LDA $01  	;
$B48B	STA $2001	;PPU setup #2
$B48E	LDY #$04	;
$B490	LDA $C8  	;
$B492	ORA $16  	;
$B494	BEQ $B498	;
$B496	LDY #$20	;
$B498	STY $F2  	;
$B49A	RTS		;

$B49B	LDA #$01	;
$B49D	STA $048E	;
$B4A0	STA $048F	;
$B4A3	LDA #$ff	;
$B4A5	STA $BB  	;
$B4A7	STA $87  	;
$B4A9	STA $048C	;
$B4AC	LDX #$01	;
$B4AE	STX $0459	;
$B4B1	STX $90  	;
$B4B3	INX		;
$B4B4	STX $46  	;
$B4B6	LDA #$40	;
$B4B8	STA $99  	;
$B4BA	RTS		;

$B4BB	.byte $ff	; INVALID OPCODE !!!
$B4BC	.byte $ff	; INVALID OPCODE !!!
$B4BD	.byte $ff	; INVALID OPCODE !!!
$B4BE	.byte $ff	; INVALID OPCODE !!!
$B4BF	.byte $ff	; INVALID OPCODE !!!
$B4C0	.byte $ff	; INVALID OPCODE !!!
$B4C1	.byte $ff	; INVALID OPCODE !!!
$B4C2	.byte $ff	; INVALID OPCODE !!!
$B4C3	.byte $ff	; INVALID OPCODE !!!
$B4C4	.byte $ff	; INVALID OPCODE !!!
$B4C5	.byte $ff	; INVALID OPCODE !!!
$B4C6	.byte $ff	; INVALID OPCODE !!!
$B4C7	.byte $ff	; INVALID OPCODE !!!
$B4C8	.byte $ff	; INVALID OPCODE !!!
$B4C9	.byte $ff	; INVALID OPCODE !!!
$B4CA	.byte $ff	; INVALID OPCODE !!!
$B4CB	.byte $ff	; INVALID OPCODE !!!
$B4CC	.byte $ff	; INVALID OPCODE !!!
$B4CD	.byte $ff	; INVALID OPCODE !!!
$B4CE	.byte $ff	; INVALID OPCODE !!!
$B4CF	.byte $ff	; INVALID OPCODE !!!
$B4D0	.byte $ff	; INVALID OPCODE !!!
$B4D1	.byte $ff	; INVALID OPCODE !!!
$B4D2	.byte $ff	; INVALID OPCODE !!!
$B4D3	.byte $ff	; INVALID OPCODE !!!
$B4D4	.byte $ff	; INVALID OPCODE !!!
$B4D5	.byte $ff	; INVALID OPCODE !!!
$B4D6	.byte $ff	; INVALID OPCODE !!!
$B4D7	.byte $ff	; INVALID OPCODE !!!
$B4D8	.byte $ff	; INVALID OPCODE !!!
$B4D9	.byte $ff	; INVALID OPCODE !!!
$B4DA	.byte $ff	; INVALID OPCODE !!!
$B4DB	.byte $ff	; INVALID OPCODE !!!
$B4DC	.byte $ff	; INVALID OPCODE !!!
$B4DD	.byte $ff	; INVALID OPCODE !!!
$B4DE	.byte $ff	; INVALID OPCODE !!!
$B4DF	.byte $ff	; INVALID OPCODE !!!
$B4E0	.byte $ff	; INVALID OPCODE !!!
$B4E1	.byte $ff	; INVALID OPCODE !!!
$B4E2	.byte $ff	; INVALID OPCODE !!!
$B4E3	.byte $ff	; INVALID OPCODE !!!
$B4E4	.byte $ff	; INVALID OPCODE !!!
$B4E5	.byte $ff	; INVALID OPCODE !!!
$B4E6	.byte $ff	; INVALID OPCODE !!!
$B4E7	.byte $ff	; INVALID OPCODE !!!
$B4E8	.byte $ff	; INVALID OPCODE !!!
$B4E9	.byte $ff	; INVALID OPCODE !!!
$B4EA	.byte $ff	; INVALID OPCODE !!!
$B4EB	.byte $ff	; INVALID OPCODE !!!
$B4EC	.byte $ff	; INVALID OPCODE !!!
$B4ED	.byte $ff	; INVALID OPCODE !!!
$B4EE	.byte $ff	; INVALID OPCODE !!!
$B4EF	.byte $ff	; INVALID OPCODE !!!
$B4F0	.byte $ff	; INVALID OPCODE !!!
$B4F1	.byte $ff	; INVALID OPCODE !!!
$B4F2	.byte $ff	; INVALID OPCODE !!!
$B4F3	.byte $ff	; INVALID OPCODE !!!
$B4F4	.byte $ff	; INVALID OPCODE !!!
$B4F5	.byte $ff	; INVALID OPCODE !!!
$B4F6	.byte $ff	; INVALID OPCODE !!!
$B4F7	.byte $ff	; INVALID OPCODE !!!
$B4F8	.byte $ff	; INVALID OPCODE !!!
$B4F9	.byte $ff	; INVALID OPCODE !!!
$B4FA	.byte $ff	; INVALID OPCODE !!!
$B4FB	.byte $ff	; INVALID OPCODE !!!
$B4FC	.byte $ff	; INVALID OPCODE !!!
$B4FD	.byte $ff	; INVALID OPCODE !!!
$B4FE	.byte $ff	; INVALID OPCODE !!!
$B4FF	.byte $ff	; INVALID OPCODE !!!
$B500	JSR $F78F	;
$B503	RTS		;

$B504	LDA #$00	;
$B506	TAX		;
$B507	STA $FD  	;
$B509	BEQ $B51B	;
$B50B	TXA		;
$B50C	LSR A		;
$B50D	TAX		;
$B50E	INX		;
$B50F	TXA		;
$B510	CMP #$04	;
$B512	BEQ $B503	;
$B514	LDA $FD  	;
$B516	CLC		;
$B517	ADC #$04	;
$B519	STA $FD  	;
$B51B	TXA		;
$B51C	ASL A		;
$B51D	TAX		;
$B51E	LDA $E0,X	;
$B520	STA $FE  	;
$B522	LDA $E1,X	;
$B524	STA $FF  	;
$B526	LDA $E1,X	;
$B528	BEQ $B50B	;
$B52A	TXA		;
$B52B	LSR A		;
$B52C	TAX		;
$B52D	DEC $D0,X	;
$B52F	BNE $B50E	;
$B531	LDY $E8,X	;
$B533	INC $E8,X	;
$B535	LDA ($FE),Y	;
$B537	BEQ $B500	;
$B539	TAY		;
$B53A	CMP #$ff	;
$B53C	BEQ $B547	;
$B53E	AND #$c0	;
$B540	CMP #$c0	;
$B542	BEQ $B553	;
$B544	JMP $F561	; (in an if statement) 
$B547	LDA $D8,X	;
$B549	BEQ $B55E	;
$B54B	DEC $D8,X	;
$B54D	LDA $EC,X	;
$B54F	STA $E8,X	;
$B551	BNE $B55E	;
$B553	TYA		;
$B554	AND #$3f	;
$B556	STA $D8,X	;
$B558	DEC $D8,X	;
$B55A	LDA $E8,X	;
$B55C	STA $EC,X	;
$B55E	JMP $F531	;

$B561	TYA		;
$B562	BPL $B57B	;
$B564	AND #$0f	;
$B566	CLC		;
$B567	ADC $DF  	;
$B569	TAY		;
$B56A	LDA $F660,Y	;
$B56D	STA $D4,X	;
$B56F	TAY		;
$B570	TXA		;
$B571	CMP #$02	;
$B573	BEQ $B5C4	;
$B575	LDY $E8,X	;
$B577	INC $E8,X	;
$B579	LDA ($FE),Y	;
$B57B	TAY		;
$B57C	TXA		;
$B57D	CMP #$03	;
$B57F	BEQ $B5E1	;
$B581	PHA		;
$B582	TAX		;
$B583	CMP #$01	;
$B585	BEQ $B5B9	;
$B587	LDX $FD  	;
$B589	LDA $F601,Y	;
$B58C	BEQ $B599	;
$B58E	STA $4002,X	;Audio -> Square 1
$B591	LDA $F600,Y	;
$B594	ORA #$08	;
$B596	STA $4003,X	;Audio -> Square 1
$B599	TAY		;
$B59A	PLA		;
$B59B	TAX		;
$B59C	TYA		;
$B59D	BNE $B5AA	;
$B59F	LDY #$00	;
$B5A1	TXA		;
$B5A2	CMP #$02	;
$B5A4	BEQ $B5AC	;
$B5A6	LDY #$10	;
$B5A8	BNE $B5AC	;
$B5AA	LDY $DC,X	;
$B5AC	TYA		;
$B5AD	LDY $FD  	;
$B5AF	STA $4000,Y	;Audio -> Square 1
$B5B2	LDA $D4,X	;
$B5B4	STA $D0,X	;
$B5B6	JMP $F50E	; (in an if statement) 
$B5B9	LDA $F5  	;
$B5BB	AND #$02	;
$B5BD	BEQ $B587	;
$B5BF	PLA		;
$B5C0	TAX		;
$B5C1	JMP $F5B2	; (in an if statement) 
$B5C4	TYA		;
$B5C5	LDY $06F0	;
$B5C8	BEQ $B5CE	;
$B5CA	LDA #$ff	;
$B5CC	BNE $B5D9	;
$B5CE	CLC		;
$B5CF	ADC #$fe	;
$B5D1	ASL A		;
$B5D2	ASL A		;
$B5D3	CMP #$3c	;
$B5D5	BCC $B5D9	;
$B5D7	LDA #$3c	;
$B5D9	STA $4008	;Audio -> Triangle
$B5DC	STA $DE  	;
$B5DE	JMP $F575	; (in an if statement) 
$B5E1	LDA $F4  	;
$B5E3	CMP #$02	;
$B5E5	BEQ $B5F9	;
$B5E7	LDA $F700,Y	;
$B5EA	STA $400C	;Audio -> Noise control reg
$B5ED	LDA $F701,Y	;
$B5F0	STA $400E	;Audio -> Noise Frequency reg #1
$B5F3	LDA $F702,Y	;
$B5F6	STA $400F	;Audio -> Noise Frequency reg #2
$B5F9	JMP $F5B2	;

$B5FC	ASL $FF,X	;
$B5FE	BPL $B5C5	;
$B600	.byte $07	; INVALID OPCODE !!!
$B601	BEQ $B603	;
$B603	BRK		;
$B604	BRK		;
$B605	.byte $d4	; INVALID OPCODE !!!
$B606	BRK		;
$B607	INY		;
$B608	BRK		;
$B609	LDA $B200,X	;
$B60C	BRK		;
$B60D	TAY		;
$B60E	BRK		;
$B60F	.byte $9f	; INVALID OPCODE !!!
$B610	BRK		;
$B611	STX $00,Y 	;
$B613	STA $8500	;
$B616	BRK		;
$B617	ROR $7600,X	; saved-to-battery RAM 
$B61A	BRK		;
$B61B	BVS $B61E	;
$B61D	.byte $ab	; INVALID OPCODE !!!
$B61E	ORA ($93,X)	;
$B620	ORA ($7C,X)	;
$B622	ORA ($67,X)	;
$B624	ORA ($52,X)	;
$B626	ORA ($3F,X)	;
$B628	ORA ($2D,X)	;
$B62A	ORA ($1C,X)	;
$B62C	ORA ($0C,X)	;
$B62E	BRK		;
$B62F	SBC $EE00,X	;
$B632	BRK		;
$B633	SBC ($03,X)	;
$B635	.byte $57	; INVALID OPCODE !!!
$B636	.byte $03	; INVALID OPCODE !!!
$B637	.byte $27	; INVALID OPCODE !!!
$B638	.byte $02	; INVALID OPCODE !!!
$B639	SBC $CF02,Y	;
$B63C	.byte $02	; INVALID OPCODE !!!
$B63D	LDX $02  	;
$B63F	.byte $80	; INVALID OPCODE !!!
$B640	.byte $02	; INVALID OPCODE !!!
$B641	.byte $5c	; INVALID OPCODE !!!
$B642	.byte $02	; INVALID OPCODE !!!
$B643	.byte $3a	; INVALID OPCODE !!!
$B644	.byte $02	; INVALID OPCODE !!!
$B645	.byte $1a	; INVALID OPCODE !!!
$B646	ORA ($FC,X)	;
$B648	ORA ($DF,X)	;
$B64A	ORA ($C4,X)	;
$B64C	.byte $03	; INVALID OPCODE !!!
$B64D	SED		;
$B64E	BRK		;
$B64F	ADC #$00	;
$B651	.byte $63	; INVALID OPCODE !!!
$B652	BRK		;
$B653	LSR $5800,X	; MMC5 register or expansion RAM 
$B656	BRK		;
$B657	.byte $53	; INVALID OPCODE !!!
$B658	BRK		;
$B659	.byte $4f	; INVALID OPCODE !!!
$B65A	BRK		;
$B65B	LSR A		;
$B65C	BRK		;
$B65D	LSR $00  	;
$B65F	.byte $42	; INVALID OPCODE !!!
$B660	.byte $03	; INVALID OPCODE !!!
$B661	ASL $0C  	;
$B663	CLC		;
$B664	BMI $B678	;
$B666	BIT $09  	;
$B668	PHP		;
$B669	.byte $04	; INVALID OPCODE !!!
$B66A	.byte $07	; INVALID OPCODE !!!
$B66B	ORA ($04,X)	;
$B66D	PHP		;
$B66E	BPL $B690	;
$B670	RTI		; (within an if statement) 
$B671	CLC		;
$B672	BMI $B680	;
$B674	ORA ($06,X)	;
$B676	.byte $0c	; INVALID OPCODE !!!
$B677	CLC		;
$B678	BMI $B6DA	;
$B67A	BIT $48  	;
$B67C	.byte $12	; INVALID OPCODE !!!
$B67D	BPL $B687	;
$B67F	ASL $0302	;
$B682	.byte $04	; INVALID OPCODE !!!
$B683	LDA #$00	;
$B685	BEQ $B691	;
$B687	LDA #$08	;
$B689	BNE $B691	;
$B68B	LDA #$0c	;
$B68D	BNE $B691	;
$B68F	LDA #$04	;
$B691	STA $F9  	;
$B693	LDA #$40	;
$B695	STA $FA  	;
$B697	STX $FB  	;
$B699	STY $FC  	;
$B69B	LDY #$00	;
$B69D	LDA ($FB),Y	;
$B69F	STA ($F9),Y	;
$B6A1	INY		;
$B6A2	TYA		;
$B6A3	CMP #$04	;
$B6A5	BNE $B69D	;
$B6A7	RTS		; (within an if statement) 
$B6A8	TAX		;
$B6A9	JSR $F798	;
$B6AC	STX $F6  	;
$B6AE	LDA $06F5	;
$B6B1	BEQ $B6BE	;
$B6B3	CMP #$02	;
$B6B5	BNE $B6BE	;
$B6B7	STA $F0  	;
$B6B9	LDA #$00	;
$B6BB	STA $06F5	;
$B6BE	LDA $FBCA,Y	;
$B6C1	TAY		;
$B6C2	LDX #$00	;
$B6C4	LDA $FBCA,Y	;
$B6C7	STA $DF,X	;
$B6C9	INY		;
$B6CA	INX		;
$B6CB	TXA		;
$B6CC	CMP #$09	;
$B6CE	BNE $B6C4	;
$B6D0	LDA #$01	;
$B6D2	STA $D0  	;
$B6D4	STA $D1  	;
$B6D6	STA $D2  	;
$B6D8	STA $D3  	;
$B6DA	LDA #$00	;
$B6DC	STA $E8  	;
$B6DE	STA $E9  	;
$B6E0	STA $EA  	;
$B6E2	STA $EB  	;
$B6E4	RTS		;

$B6E5	STY $AB,X	;
$B6E7	SBC $0058,X	;
$B6EA	.byte $7f	; INVALID OPCODE !!!
$B6EB	.byte $04	; INVALID OPCODE !!!
$B6EC	CLC		;
$B6ED	.byte $3f	; INVALID OPCODE !!!
$B6EE	.byte $7f	; INVALID OPCODE !!!
$B6EF	BRK		;
$B6F0	BRK		;
$B6F1	ASL $7F  	;
$B6F3	ASL A		;
$B6F4	CPY #$08	;
$B6F6	.byte $7f	; INVALID OPCODE !!!
$B6F7	ORA $C0  	;
$B6F9	CMP ($89,X)	;
$B6FB	.byte $02	; INVALID OPCODE !!!
$B6FC	.byte $0f	; INVALID OPCODE !!!
$B6FD	.byte $ff	; INVALID OPCODE !!!
$B6FE	.byte $ff	; INVALID OPCODE !!!
$B6FF	.byte $ff	; INVALID OPCODE !!!
$B700	BPL $B702	;
$B702	CLC		;
$B703	BPL $B706	;
$B705	CLC		;
$B706	BRK		;
$B707	ORA ($88,X)	;
$B709	.byte $02	; INVALID OPCODE !!!
$B70A	.byte $02	; INVALID OPCODE !!!
$B70B	RTI		;

$B70C	.byte $03	; INVALID OPCODE !!!
$B70D	ORA $40  	;
$B70F	.byte $04	; INVALID OPCODE !!!
$B710	.byte $07	; INVALID OPCODE !!!
$B711	RTI		;

$B712	LDA #$7f	;
$B714	STA $4001	;Audio -> Square 1
$B717	STA $4005	;Audio -> Square 2
$B71A	STX $DC  	;
$B71C	STY $DD  	;
$B71E	RTS		;

$B71F	LDX #$e5	;
$B721	LDY #$f6	;
$B723	BNE $B745	;
$B725	LDA $F3  	;
$B727	LSR A		;
$B728	BCS $B736	;
$B72A	LDA $F7  	;
$B72C	LSR A		;
$B72D	BCS $B749	;
$B72F	LDA $F0  	;
$B731	AND #$10	;
$B733	BNE $B71F	;
$B735	RTS		; (within an if statement) 
$B736	LDA $F7  	;
$B738	ORA #$01	;
$B73A	STA $F7  	;
$B73C	LDA #$00	;
$B73E	STA $06E4	;
$B741	LDX #$fc	;
$B743	LDY #$f5	;
$B745	JSR $F683	;
$B748	RTS		; (within an if statement) 
$B749	INC $06E4	;
$B74C	LDA $06E4	;
$B74F	CMP #$58	;
$B751	BNE $B77B	;
$B753	LDA #$00	;
$B755	STA $F7  	;
$B757	RTS		; (within an if statement) 
$B758	LDA #$c0	;
$B75A	STA $4017	;Joypad & I/O port for port #2
$B75D	JSR $FB25	;
$B760	JSR $F90A	;
$B763	JSR $FA38	;
$B766	JSR $FAAC	;
$B769	JSR $F824	;
$B76C	LDA $F1  	;
$B76E	STA $06E9	;
$B771	LDA #$00	;
$B773	STA $F0  	;
$B775	STA $F1  	;
$B777	STA $F2  	;
$B779	STA $F3  	;
$B77B	RTS		;

$B77C	LDA $F4  	;
$B77E	AND #$06	;
$B780	BNE $B77B	;
$B782	LDA $F4  	;
$B784	AND #$f0	;
$B786	STA $F4  	;
$B788	LDX #$e9	;
$B78A	LDY #$f6	;
$B78C	JMP $F879	;

$B78F	LDA $F6  	;
$B791	CMP #$20	;
$B793	BNE $B79F	;
$B795	INC $06E8	;
$B798	AND #$0f	;
$B79A	CMP #$0f	;
$B79C	BNE $B7A5	;
$B79E	TXA		;
$B79F	LDA $F4  	;
$B7A1	AND #$20	;
$B7A3	BNE $B7C7	;
$B7A5	LDA #$10	;
$B7A7	STA $400C	;Audio -> Noise control reg
$B7AA	STA $4000	;Audio -> Square 1
$B7AD	STA $4004	;Audio -> Square 2
$B7B0	LDA #$00	;
$B7B2	STA $F4  	;
$B7B4	STA $F5  	;
$B7B6	STA $F6  	;
$B7B8	STA $06FA	;
$B7BB	STA $F7  	;
$B7BD	STA $4008	;Audio -> Triangle
$B7C0	STA $4011	;Audio -> DPCM D/A data
$B7C3	STA $06F0	;
$B7C6	RTS		; (within an if statement) 
$B7C7	LDA #$10	;
$B7C9	STA $4004	;Audio -> Square 2
$B7CC	STA $400C	;Audio -> Noise control reg
$B7CF	LDA #$00	;
$B7D1	BEQ $B7B4	;
$B7D3	LDA #$00	;
$B7D5	STA $06FA	;
$B7D8	RTS		;

$B7D9	LDX #$f5	;
$B7DB	LDY #$f6	;
$B7DD	JMP $F879	;

$B7E0	INC $06FB	;
$B7E3	LDA $06FB	;
$B7E6	CMP #$10	;
$B7E8	BEQ $B7D9	;
$B7EA	CMP #$20	;
$B7EC	BEQ $B7D3	;
$B7EE	RTS		;

$B7EF	LDA #$00	;
$B7F1	STA $06FB	;
$B7F4	LDA #$f0	;
$B7F6	STA $06FA	;
$B7F9	LDX #$f1	;
$B7FB	LDY #$f6	;
$B7FD	JMP $F879	;

$B800	LDA $F4  	;
$B802	AND #$f0	;
$B804	ORA #$02	;

function_B806:
$B806	STA $F4  	;
$B808	LDA #$00	;
$B80A	STA $06F7	;
$B80D	LDX #$f1	;
$B80F	LDY #$f6	;
$B811	JMP $F879	;

$B814	INC $06F7	;
$B817	LDA $06F7	;
$B81A	CMP #$10	;
$B81C	BNE $B85B	;
$B81E	JMP $F89B	; (in an if statement) 
$B821	JMP $F7A5	; (in an if statement) 
$B824	LDA $F0  	;
$B826	LSR A		;
$B827	BCS $B821	;
$B829	LDA $F6  	;
$B82B	CMP #$df	;
$B82D	BEQ $B83B	;
$B82F	CMP #$7f	;
$B831	BEQ $B83B	;
$B833	CMP #$20	;
$B835	BEQ $B83B	;
$B837	LDA $F6  	;
$B839	BNE $B85B	;
$B83B	LDA $06FA	;
$B83E	CMP #$0f	;
$B840	BEQ $B7EF	;
$B842	CMP #$f0	;
$B844	BEQ $B7E0	;
$B846	LDA $F0  	;
$B848	LSR A		;
$B849	LSR A		;
$B84A	BCS $B800	;
$B84C	LSR A		;
$B84D	BCS $B85F	;
$B84F	LSR A		;
$B850	BCS $B85C	;
$B852	LDA $F4  	;
$B854	LSR A		;
$B855	LSR A		;
$B856	BCS $B814	;
$B858	LSR A		;
$B859	BCS $B87D	;
$B85B	RTS		; (within an if statement) 
$B85C	JMP $F77C	; (in an if statement) 
$B85F	LDA $F4  	;
$B861	AND #$80	;
$B863	BNE $B85B	;
$B865	LDA $F4  	;
$B867	AND #$f0	;
$B869	ORA #$04	;
$B86B	STA $F4  	;
$B86D	LDA #$00	;
$B86F	STA $06F3	;
$B872	STA $06F1	;
$B875	LDX #$ed	;
$B877	LDY #$f6	;
$B879	JSR $F68B	;
$B87C	RTS		; (within an if statement) 
$B87D	INC $06F3	;
$B880	LDA $06F3	;
$B883	CMP #$03	;
$B885	BNE $B8A1	;
$B887	LDA #$00	;
$B889	STA $06F3	;
$B88C	INC $06F1	;
$B88F	LDA $06F1	;
$B892	CMP #$10	;
$B894	BNE $B8A2	;
$B896	LDA #$10	;
$B898	STA $400C	;Audio -> Noise control reg
$B89B	LDA $F4  	;
$B89D	AND #$f0	;
$B89F	STA $F4  	;
$B8A1	RTS		;

$B8A2	STA $400E	;Audio -> Noise Frequency reg #1
$B8A5	RTS		;

$B8A6	LDA #$00	;
$B8A8	STA $06E0	;
$B8AB	CLC		;
$B8AC	LDA $1B  	;
$B8AE	AND #$07	;
$B8B0	ADC #$02	;
$B8B2	STA $06E1	;
$B8B5	LDA $F7  	;
$B8B7	AND #$00	;
$B8B9	ORA #$80	;
$B8BB	STA $F7  	;
$B8BD	BNE $B8E8	;
$B8BF	INC $06E0	;
$B8C2	LDA $06E0	;
$B8C5	CMP $06E1	;
$B8C8	BNE $B8E8	;
$B8CA	LDA #$10	;
$B8CC	STA $4000	;Audio -> Square 1
$B8CF	STA $4004	;Audio -> Square 2
$B8D2	LDA #$00	;
$B8D4	STA $F7  	;
$B8D6	LDA $F4  	;
$B8D8	AND #$0f	;
$B8DA	STA $F4  	;
$B8DC	RTS		; (within an if statement) 
$B8DD	JSR $F7A5	;
$B8E0	LDA #$80	;
$B8E2	STA $F4  	;
$B8E4	LDA #$02	;
$B8E6	STA $F0  	;
$B8E8	LDX #$f9	;
$B8EA	LDY #$f6	;
$B8EC	JSR $F683	;
$B8EF	LDA $1B  	;
$B8F1	AND #$0f	;
$B8F3	STA $4002	;Audio -> Square 1
$B8F6	LDX #$f9	;
$B8F8	LDY #$f6	;
$B8FA	JSR $F68F	;
$B8FD	LDA $1B  	;
$B8FF	LSR A		;
$B900	LSR A		;
$B901	AND #$0f	;
$B903	STA $4006	;Audio -> Square 2
$B906	RTS		;

$B907	JMP $F8A6	;

$B90A	LDA $F6  	;
$B90C	BEQ $B91B	;
$B90E	CMP #$df	;
$B910	BEQ $B91B	;
$B912	LDA $F0  	;
$B914	AND #$e0	;
$B916	BEQ $B94E	;
$B918	JSR $F7A5	;
$B91B	LDA $F0  	;
$B91D	ASL A		;
$B91E	BCS $B8DD	;
$B920	ASL A		;
$B921	BCS $B952	;
$B923	ASL A		;
$B924	BCS $B965	;
$B926	LDA $F4  	;
$B928	ASL A		;
$B929	BCS $B8E8	;
$B92B	LDA $F4  	;
$B92D	AND #$e0	;
$B92F	BNE $B94E	;
$B931	LDA $F6  	;
$B933	CMP #$df	;
$B935	BEQ $B94B	;
$B937	LDA $F6  	;
$B939	BNE $B94E	;
$B93B	LDA $F3  	;
$B93D	ASL A		;
$B93E	BCS $B907	;
$B940	ASL A		;
$B941	BCS $B977	;
$B943	LDA $F7  	;
$B945	ASL A		;
$B946	BCS $B94F	;
$B948	ASL A		;
$B949	BCS $B993	;
$B94B	JSR $F725	;
$B94E	RTS		; (within an if statement) 
$B94F	JMP $F8BF	; (in an if statement) 
$B952	LDA #$0f	;
$B954	STA $06FA	;
$B957	LDA $F4  	;
$B959	AND #$0f	;
$B95B	ORA #$40	;
$B95D	STA $F4  	;
$B95F	LDX #$d1	;
$B961	LDY #$f9	;
$B963	BNE $B98F	;
$B965	LDA #$02	;
$B967	STA $F0  	;
$B969	LDA $F4  	;
$B96B	AND #$0f	;
$B96D	ORA #$20	;
$B96F	STA $F4  	;
$B971	LDX #$cd	;
$B973	LDY #$f9	;
$B975	BNE $B98F	;
$B977	LDA #$00	;
$B979	STA $06FC	;
$B97C	LDA $F7  	;
$B97E	AND #$00	;
$B980	ORA #$40	;
$B982	STA $F7  	;
$B984	LDX #$d5	;
$B986	LDY #$f9	;
$B988	JSR $F68F	;
$B98B	LDX #$d9	;
$B98D	LDY #$f9	;
$B98F	JSR $F683	;
$B992	RTS		; (within an if statement) 
$B993	INC $06FC	;
$B996	LDA $06FC	;
$B999	CMP #$12	;
$B99B	BEQ $B9CA	;
$B99D	CMP #$06	;
$B99F	BCC $B9B1	;
$B9A1	LDA $1B  	;
$B9A3	ORA #$10	;
$B9A5	AND #$7f	;
$B9A7	STA $06FE	;
$B9AA	ROL A		;
$B9AB	STA $06FD	;
$B9AE	JMP $F9BD	; (in an if statement) 
$B9B1	INC $06FD	;
$B9B4	INC $06FD	;
$B9B7	INC $06FE	;
$B9BA	INC $06FE	;
$B9BD	LDA $06FD	;
$B9C0	STA $4006	;Audio -> Square 2
$B9C3	LDA $06FE	;
$B9C6	STA $4002	;Audio -> Square 1
$B9C9	RTS		; (within an if statement) 
$B9CA	JMP $F8CA	;

$B9CD	CLV		;
$B9CE	CMP $20,X	;
$B9D0	BRK		;
$B9D1	.byte $9f	; INVALID OPCODE !!!
$B9D2	.byte $93	; INVALID OPCODE !!!
$B9D3	.byte $80	; INVALID OPCODE !!!
$B9D4	.byte $22	; INVALID OPCODE !!!
$B9D5	.byte $3f	; INVALID OPCODE !!!
$B9D6	TSX		;
$B9D7	CPX #$06	;
$B9D9	.byte $3f	; INVALID OPCODE !!!
$B9DA	.byte $bb	; INVALID OPCODE !!!
$B9DB	DEC $B806	;
$B9DE	.byte $93	; INVALID OPCODE !!!
$B9DF	BVC $B9E3	;
$B9E1	.byte $80	; INVALID OPCODE !!!
$B9E2	.byte $7f	; INVALID OPCODE !!!
$B9E3	RTS		;

$B9E4	PLA		;
$B9E5	.byte $80	; INVALID OPCODE !!!
$B9E6	.byte $7f	; INVALID OPCODE !!!
$B9E7	.byte $62	; INVALID OPCODE !!!
$B9E8	PLA		;
$B9E9	LDA $F5  	;
$B9EB	AND #$02	;
$B9ED	BNE $BA26	;
$B9EF	LDA $F6  	;
$B9F1	CMP #$df	;
$B9F3	BEQ $B9F9	;
$B9F5	LDA $F6  	;
$B9F7	BNE $BA26	;
$B9F9	LDA #$00	;
$B9FB	STA $06F9	;
$B9FE	LDA $F5  	;
$BA00	AND #$e0	;
$BA02	ORA #$02	;
$BA04	STA $F5  	;
$BA06	LDX #$dd	;
$BA08	LDY #$f9	;
$BA0A	BNE $BA7F	;
$BA0C	INC $06F9	;
$BA0F	LDA $06F9	;
$BA12	CMP #$07	;
$BA14	BNE $BA26	;
$BA16	LDA #$7f	;
$BA18	STA $4005	;Audio -> Square 2
$BA1B	LDA #$10	;
$BA1D	STA $4004	;Audio -> Square 2
$BA20	LDA $F5  	;
$BA22	AND #$e0	;
$BA24	STA $F5  	;
$BA26	RTS		; (within an if statement) 
$BA27	JSR $F7A5	;
$BA2A	LDX #$e1	;
$BA2C	LDY #$f9	;
$BA2E	JSR $F683	;
$BA31	LDX #$e5	;
$BA33	LDY #$f9	;
$BA35	JMP $FA7F	; (in an if statement) 
$BA38	LDA $F6  	;
$BA3A	BEQ $BA42	;
$BA3C	AND #$0f	;
$BA3E	CMP #$0f	;
$BA40	BNE $BA63	;
$BA42	LDA $F4  	;
$BA44	AND #$80	;
$BA46	BNE $BA63	;
$BA48	LDA $F7  	;
$BA4A	AND #$c0	;
$BA4C	BNE $BA63	;
$BA4E	LDA $F1  	;
$BA50	LSR A		;
$BA51	BCS $BA27	;
$BA53	LSR A		;
$BA54	BCS $B9E9	;
$BA56	LSR A		;
$BA57	BCS $BA83	;
$BA59	LSR A		;
$BA5A	LSR A		;
$BA5B	BCS $BA64	;
$BA5D	LDA $F5  	;
$BA5F	LSR A		;
$BA60	LSR A		;
$BA61	BCS $BA0C	;
$BA63	RTS		; (within an if statement) 
$BA64	LDA $F6  	;
$BA66	BNE $BA63	;
$BA68	LDA $F5  	;
$BA6A	AND #$02	;
$BA6C	BNE $BA63	;
$BA6E	LDX #$8a	;
$BA70	LDY #$fa	;
$BA72	JSR $F68F	;
$BA75	LDA $1B  	;
$BA77	AND #$3f	;
$BA79	ORA #$10	;
$BA7B	STA $4006	;Audio -> Square 2
$BA7E	RTS		; (within an if statement) 
$BA7F	JSR $F68F	;
$BA82	RTS		; (within an if statement) 
$BA83	LDY #$0a	;
$BA85	LDA #$ef	;
$BA87	JMP $FBA5	;

$BA8A	CMP $A886,Y	;
$BA8D	PHA		;
$BA8E	PHP		;
$BA8F	.byte $7f	; INVALID OPCODE !!!
$BA90	RTI		;

$BA91	PLP		;
$BA92	PHP		;
$BA93	.byte $7f	; INVALID OPCODE !!!
$BA94	EOR $28  	;
$BA96	INC $06F6	;
$BA99	LDA $06F6	;
$BA9C	CMP #$04	;
$BA9E	BNE $BAD8	;
$BAA0	LDA $F5  	;
$BAA2	AND #$1f	;
$BAA4	STA $F5  	;
$BAA6	LDX #$92	;
$BAA8	LDY #$fa	;
$BAAA	BNE $BB00	;
$BAAC	LDA $F6  	;
$BAAE	BEQ $BABA	;
$BAB0	CMP #$08	;
$BAB2	BEQ $BABA	;
$BAB4	AND #$0f	;
$BAB6	CMP #$0f	;
$BAB8	BNE $BAD8	;
$BABA	LDA $F4  	;
$BABC	AND #$80	;
$BABE	BNE $BAD8	;
$BAC0	LDA $F1  	;
$BAC2	ASL A		;
$BAC3	BCS $BB17	;
$BAC5	ASL A		;
$BAC6	BCS $BAE2	;
$BAC8	LDA $F5  	;
$BACA	ASL A		;
$BACB	ASL A		;
$BACC	BCS $BA96	;
$BACE	LDA $F1  	;
$BAD0	AND #$20	;
$BAD2	BEQ $BAD9	;
$BAD4	LDA $F6  	;
$BAD6	BEQ $BB04	;
$BAD8	RTS		; (within an if statement) 
$BAD9	LDA $F6  	;
$BADB	CMP #$df	;
$BADD	BNE $BAD8	;
$BADF	JMP $F79F	; (in an if statement) 
$BAE2	LDA $F5  	;
$BAE4	AND #$1f	;
$BAE6	ORA #$40	;
$BAE8	STA $F5  	;
$BAEA	LDA #$00	;
$BAEC	STA $4008	;Audio -> Triangle
$BAEF	STA $F6  	;
$BAF1	STA $06F6	;
$BAF4	LDA #$10	;
$BAF6	STA $4004	;Audio -> Square 2
$BAF9	STA $400C	;Audio -> Noise control reg
$BAFC	LDX #$8e	;
$BAFE	LDY #$fa	;
$BB00	JSR $F687	;
$BB03	RTS		; (within an if statement) 
$BB04	LDA $06E9	;
$BB07	AND #$20	;
$BB09	BNE $BB10	;
$BB0B	LDA #$02	;
$BB0D	STA $06F5	;
$BB10	LDY #$08	;
$BB12	LDA #$df	;
$BB14	JMP $FBA5	; (in an if statement) 
$BB17	LDY #$04	;
$BB19	LDA #$7f	;
$BB1B	JMP $FBA5	;

$BB1E	LDY #$00	;
$BB20	LDA #$02	;
$BB22	JMP $FBC1	;

$BB25	LDA $06E8	;
$BB28	BNE $BB5E	;
$BB2A	LDA $F2  	;
$BB2C	LSR A		;
$BB2D	BCS $BB82	;
$BB2F	LSR A		;
$BB30	BCS $BB1E	;
$BB32	LSR A		;
$BB33	BCS $BB4C	;
$BB35	LSR A		;
$BB36	BCS $BB7C	;
$BB38	LSR A		;
$BB39	BCS $BB69	;
$BB3B	LSR A		;
$BB3C	BCS $BB5E	;
$BB3E	LSR A		;
$BB3F	BCS $BB58	;
$BB41	LSR A		;
$BB42	BCS $BB52	;
$BB44	LDA $F6  	;
$BB46	BNE $BB49	;
$BB48	RTS		; (within an if statement) 
$BB49	JMP $F504	; (in an if statement) 
$BB4C	LDY #$02	;
$BB4E	LDA #$04	;
$BB50	BNE $BBA5	;
$BB52	LDY #$09	;
$BB54	LDA #$80	;
$BB56	BNE $BB6D	;
$BB58	LDY #$07	;
$BB5A	LDA #$40	;
$BB5C	BNE $BB6D	;
$BB5E	LDA #$00	;
$BB60	STA $06E8	;
$BB63	LDY #$06	;
$BB65	LDA #$20	;
$BB67	BNE $BBC1	;
$BB69	LDY #$05	;
$BB6B	LDA #$10	;
$BB6D	JSR $F6A8	;
$BB70	LDX #$fc	;
$BB72	LDY #$fc	;
$BB74	JSR $F712	;
$BB77	INC $06F0	;
$BB7A	BNE $BB49	;
$BB7C	LDY #$03	;
$BB7E	LDA #$08	;
$BB80	BNE $BB86	;
$BB82	LDY #$01	;
$BB84	LDA #$01	;
$BB86	JSR $F6A8	;
$BB89	LDX #$80	;
$BB8B	LDY #$80	;
$BB8D	JSR $F71A	;
$BB90	LDA #$83	;
$BB92	STA $4001	;Audio -> Square 1
$BB95	LDA #$7f	;
$BB97	STA $4005	;Audio -> Square 2
$BB9A	BNE $BBAF	;
$BB9C	JSR $F6A8	;
$BB9F	LDX #$04	;
$BBA1	LDY #$04	;
$BBA3	BNE $BBAC	;
$BBA5	JSR $F6A8	;
$BBA8	LDX #$80	;
$BBAA	LDY #$80	;
$BBAC	JSR $F712	;
$BBAF	LDA #$00	;
$BBB1	STA $06F0	;
$BBB4	LDA $F4  	;
$BBB6	AND #$20	;
$BBB8	BEQ $BB49	;
$BBBA	LDA #$d5	;
$BBBC	STA $4001	;Audio -> Square 1
$BBBF	BNE $BB49	;
$BBC1	JSR $F6A8	;
$BBC4	LDX #$80	;
$BBC6	LDY #$ba	;
$BBC8	BNE $BB8D	;
$BBCA	.byte $0b	; INVALID OPCODE !!!
$BBCB	.byte $14	; INVALID OPCODE !!!
$BBCC	ORA $2F26,X	;
$BBCF	SEC		;
$BBD0	EOR ($4A,X)	;
$BBD2	.byte $53	; INVALID OPCODE !!!
$BBD3	.byte $5c	; INVALID OPCODE !!!
$BBD4	ADC $0C  	;
$BBD6	.byte $02	; INVALID OPCODE !!!
$BBD7	.byte $ff	; INVALID OPCODE !!!
$BBD8	.byte $0b	; INVALID OPCODE !!!
$BBD9	.byte $ff	; INVALID OPCODE !!!
$BBDA	ASL $31FF,X	;
$BBDD	.byte $ff	; INVALID OPCODE !!!
$BBDE	ORA $18,X	;
$BBE0	INC $FE2A,X	;
$BBE3	ADC $FE  	;
$BBE5	STX $FE  	;
$BBE7	.byte $0c	; INVALID OPCODE !!!
$BBE8	ORA $00FE	;
$BBEB	BRK		;
$BBEC	.byte $13	; INVALID OPCODE !!!
$BBED	INC $0000,X	;
$BBF0	ORA $38,X	;
$BBF2	.byte $ff	; INVALID OPCODE !!!
$BBF3	.byte $5a	; INVALID OPCODE !!!
$BBF4	.byte $ff	; INVALID OPCODE !!!
$BBF5	ADC $94FF,Y	;
$BBF8	.byte $ff	; INVALID OPCODE !!!
$BBF9	BRK		;
$BBFA	BRK		;
$BBFB	BRK		;
$BBFC	.byte $d7	; INVALID OPCODE !!!
$BBFD	INC $FEED,X	;
$BC00	BRK		;
$BC01	BRK		;
$BC02	BRK		;
$BC03	.byte $b3	; INVALID OPCODE !!!
$BC04	.byte $ff	; INVALID OPCODE !!!
$BC05	CMP #$ff	;
$BC07	.byte $da	; INVALID OPCODE !!!
$BC08	.byte $ff	; INVALID OPCODE !!!
$BC09	.byte $ef	; INVALID OPCODE !!!
$BC0A	.byte $ff	; INVALID OPCODE !!!
$BC0B	ORA $A5,X	;
$BC0D	.byte $fc	; INVALID OPCODE !!!
$BC0E	ASL A		;
$BC0F	SBC $FD98,X	;
$BC12	CPX #$fd	;
$BC14	ORA $B2,X	;
$BC16	INC $0000,X	;
$BC19	CMP $FE  	;
$BC1B	BRK		;
$BC1C	BRK		;
$BC1D	ORA $00,X	;
$BC1F	BRK		;
$BC20	.byte $92	; INVALID OPCODE !!!
$BC21	INC $FEA1,X	;
$BC24	BRK		;
$BC25	BRK		;
$BC26	.byte $0c	; INVALID OPCODE !!!
$BC27	EOR $72FC,Y	; saved-to-battery RAM 
$BC2A	.byte $fc	; INVALID OPCODE !!!
$BC2B	STY $00FC	;
$BC2E	BRK		;
$BC2F	BRK		;
$BC30	BRK		;
$BC31	BRK		;
$BC32	SEC		;
$BC33	.byte $fc	; INVALID OPCODE !!!
$BC34	EOR #$fc	;
$BC36	BRK		;
$BC37	BRK		;
$BC38	.byte $82	; INVALID OPCODE !!!
$BC39	.byte $02	; INVALID OPCODE !!!
$BC3A	.byte $8b	; INVALID OPCODE !!!
$BC3B	.byte $02	; INVALID OPCODE !!!
$BC3C	.byte $80	; INVALID OPCODE !!!
$BC3D	PHP		;
$BC3E	.byte $02	; INVALID OPCODE !!!
$BC3F	BPL $BC43	;
$BC41	ASL $02,X	;
$BC43	.byte $52	; INVALID OPCODE !!!
$BC44	.byte $02	; INVALID OPCODE !!!
$BC45	.byte $02	; INVALID OPCODE !!!
$BC46	.byte $02	; INVALID OPCODE !!!
$BC47	.byte $1a	; INVALID OPCODE !!!
$BC48	BRK		;
$BC49	.byte $82	; INVALID OPCODE !!!
$BC4A	.byte $02	; INVALID OPCODE !!!
$BC4B	.byte $80	; INVALID OPCODE !!!
$BC4C	BPL $BC50	;
$BC4E	ASL $02,X	;
$BC50	.byte $52	; INVALID OPCODE !!!
$BC51	.byte $02	; INVALID OPCODE !!!
$BC52	.byte $5a	; INVALID OPCODE !!!
$BC53	.byte $02	; INVALID OPCODE !!!
$BC54	.byte $02	; INVALID OPCODE !!!
$BC55	.byte $02	; INVALID OPCODE !!!
$BC56	LSR $81,X	;
$BC58	.byte $02	; INVALID OPCODE !!!
$BC59	.byte $80	; INVALID OPCODE !!!
$BC5A	.byte $12	; INVALID OPCODE !!!
$BC5B	.byte $02	; INVALID OPCODE !!!
$BC5C	.byte $0c	; INVALID OPCODE !!!
$BC5D	.byte $02	; INVALID OPCODE !!!
$BC5E	.byte $04	; INVALID OPCODE !!!
$BC5F	.byte $02	; INVALID OPCODE !!!
$BC60	.byte $0c	; INVALID OPCODE !!!
$BC61	.byte $02	; INVALID OPCODE !!!
$BC62	.byte $04	; INVALID OPCODE !!!
$BC63	.byte $02	; INVALID OPCODE !!!
$BC64	ROL A		;
$BC65	.byte $02	; INVALID OPCODE !!!
$BC66	STA ($04,X)	;
$BC68	.byte $02	; INVALID OPCODE !!!
$BC69	.byte $80	; INVALID OPCODE !!!
$BC6A	.byte $04	; INVALID OPCODE !!!
$BC6B	.byte $02	; INVALID OPCODE !!!
$BC6C	STA ($04,X)	;
$BC6E	DEY		;
$BC6F	.byte $02	; INVALID OPCODE !!!
$BC70	.byte $02	; INVALID OPCODE !!!
$BC71	BRK		;
$BC72	DEY		;
$BC73	.byte $02	; INVALID OPCODE !!!
$BC74	.byte $02	; INVALID OPCODE !!!
$BC75	.byte $80	; INVALID OPCODE !!!
$BC76	.byte $04	; INVALID OPCODE !!!
$BC77	.byte $02	; INVALID OPCODE !!!
$BC78	ROL A		;
$BC79	.byte $02	; INVALID OPCODE !!!
$BC7A	BIT $02  	;
$BC7C	ROL A		;
$BC7D	.byte $02	; INVALID OPCODE !!!
$BC7E	BIT $02  	;
$BC80	.byte $1c	; INVALID OPCODE !!!
$BC81	.byte $02	; INVALID OPCODE !!!
$BC82	STA ($22,X)	;
$BC84	.byte $02	; INVALID OPCODE !!!
$BC85	.byte $80	; INVALID OPCODE !!!
$BC86	.byte $22	; INVALID OPCODE !!!
$BC87	.byte $02	; INVALID OPCODE !!!
$BC88	STA ($24,X)	;
$BC8A	DEY		;
$BC8B	.byte $02	; INVALID OPCODE !!!
$BC8C	DEY		;
$BC8D	.byte $02	; INVALID OPCODE !!!
$BC8E	.byte $80	; INVALID OPCODE !!!
$BC8F	LSR $02,X	;
$BC91	LSR $1202	;
$BC94	.byte $02	; INVALID OPCODE !!!
$BC95	LSR $1202	;
$BC98	.byte $02	; INVALID OPCODE !!!
$BC99	.byte $0c	; INVALID OPCODE !!!
$BC9A	.byte $02	; INVALID OPCODE !!!
$BC9B	STA ($10,X)	;
$BC9D	.byte $02	; INVALID OPCODE !!!
$BC9E	.byte $80	; INVALID OPCODE !!!
$BC9F	BPL $BCA3	;
$BCA1	STA ($12,X)	;
$BCA3	DEY		;
$BCA4	.byte $02	; INVALID OPCODE !!!
$BCA5	.byte $c3	; INVALID OPCODE !!!
$BCA6	STA ($02,X)	;
$BCA8	.byte $02	; INVALID OPCODE !!!
$BCA9	.byte $1c	; INVALID OPCODE !!!
$BCAA	.byte $02	; INVALID OPCODE !!!
$BCAB	.byte $02	; INVALID OPCODE !!!
$BCAC	.byte $02	; INVALID OPCODE !!!
$BCAD	.byte $1c	; INVALID OPCODE !!!
$BCAE	.byte $1c	; INVALID OPCODE !!!
$BCAF	.byte $ff	; INVALID OPCODE !!!
$BCB0	DEC $88  	;
$BCB2	.byte $1c	; INVALID OPCODE !!!
$BCB3	.byte $ff	; INVALID OPCODE !!!
$BCB4	.byte $c7	; INVALID OPCODE !!!
$BCB5	.byte $82	; INVALID OPCODE !!!
$BCB6	JMP $2A4C	;

$BCB9	JMP $C6FF	;

$BCBC	DEY		;
$BCBD	.byte $1c	; INVALID OPCODE !!!
$BCBE	.byte $ff	; INVALID OPCODE !!!
$BCBF	CPY $81  	;
$BCC1	LSR $02  	;
$BCC3	LSR $02  	;
$BCC5	.byte $32	; INVALID OPCODE !!!
$BCC6	.byte $02	; INVALID OPCODE !!!
$BCC7	LSR $80  	;
$BCC9	ROL $FF2E	;
$BCCC	.byte $c3	; INVALID OPCODE !!!
$BCCD	.byte $82	; INVALID OPCODE !!!
$BCCE	LSR $46  	;
$BCD0	STA ($32,X)	;
$BCD2	.byte $32	; INVALID OPCODE !!!
$BCD3	LSR $2E  	;
$BCD5	.byte $ff	; INVALID OPCODE !!!
$BCD6	.byte $80	; INVALID OPCODE !!!
$BCD7	.byte $0c	; INVALID OPCODE !!!
$BCD8	.byte $0c	; INVALID OPCODE !!!
$BCD9	STA ($46,X)	;
$BCDB	LSR $46  	;
$BCDD	.byte $80	; INVALID OPCODE !!!
$BCDE	.byte $04	; INVALID OPCODE !!!
$BCDF	.byte $04	; INVALID OPCODE !!!
$BCE0	STA ($46,X)	;
$BCE2	LSR $02  	;
$BCE4	INY		;
$BCE5	.byte $82	; INVALID OPCODE !!!
$BCE6	JMP $2A4C	;

$BCE9	JMP $C2FF	;

$BCEC	STA ($46,X)	;
$BCEE	.byte $80	; INVALID OPCODE !!!
$BCEF	.byte $32	; INVALID OPCODE !!!
$BCF0	.byte $32	; INVALID OPCODE !!!
$BCF1	.byte $82	; INVALID OPCODE !!!
$BCF2	LSR $04  	;
$BCF4	STA ($46,X)	;
$BCF6	ROL A		;
$BCF7	.byte $ff	; INVALID OPCODE !!!
$BCF8	.byte $c2	; INVALID OPCODE !!!
$BCF9	STA ($0C,X)	;
$BCFB	.byte $0c	; INVALID OPCODE !!!
$BCFC	.byte $80	; INVALID OPCODE !!!
$BCFD	.byte $04	; INVALID OPCODE !!!
$BCFE	.byte $04	; INVALID OPCODE !!!
$BCFF	STA ($04,X)	;
$BD01	.byte $80	; INVALID OPCODE !!!
$BD02	ROL $812E	;
$BD05	ROL $2482	;
$BD08	.byte $ff	; INVALID OPCODE !!!
$BD09	BRK		;
$BD0A	STA ($32,X)	;
$BD0C	.byte $02	; INVALID OPCODE !!!
$BD0D	.byte $02	; INVALID OPCODE !!!
$BD0E	ASL $0C  	;
$BD10	.byte $32	; INVALID OPCODE !!!
$BD11	.byte $02	; INVALID OPCODE !!!
$BD12	.byte $02	; INVALID OPCODE !!!
$BD13	TXA		;
$BD14	ROL $028B	;
$BD17	TXA		;
$BD18	ROL $028B	;
$BD1B	TXA		;
$BD1C	ROL $028B	;
$BD1F	DEY		;
$BD20	ROL $2E32	;
$BD23	BNE $BCB1	;
$BD25	BIT $FF24	;
$BD28	BNE $BD58	;
$BD2A	JSR $C3FF	;
$BD2D	.byte $80	; INVALID OPCODE !!!
$BD2E	PLP		;
$BD2F	.byte $02	; INVALID OPCODE !!!
$BD30	.byte $82	; INVALID OPCODE !!!
$BD31	.byte $02	; INVALID OPCODE !!!
$BD32	.byte $80	; INVALID OPCODE !!!
$BD33	BIT $3202	;
$BD36	.byte $02	; INVALID OPCODE !!!
$BD37	BIT $02  	;
$BD39	.byte $82	; INVALID OPCODE !!!
$BD3A	.byte $02	; INVALID OPCODE !!!
$BD3B	STA ($02,X)	;
$BD3D	.byte $80	; INVALID OPCODE !!!
$BD3E	PLP		;
$BD3F	.byte $02	; INVALID OPCODE !!!
$BD40	ASL $02  	;
$BD42	PLP		;
$BD43	.byte $02	; INVALID OPCODE !!!
$BD44	STA ($02,X)	;
$BD46	.byte $80	; INVALID OPCODE !!!
$BD47	BIT $02  	;
$BD49	.byte $32	; INVALID OPCODE !!!
$BD4A	.byte $02	; INVALID OPCODE !!!
$BD4B	BIT $02  	;
$BD4D	.byte $ff	; INVALID OPCODE !!!
$BD4E	.byte $80	; INVALID OPCODE !!!
$BD4F	PLP		;
$BD50	.byte $02	; INVALID OPCODE !!!
$BD51	.byte $82	; INVALID OPCODE !!!
$BD52	.byte $02	; INVALID OPCODE !!!
$BD53	.byte $80	; INVALID OPCODE !!!
$BD54	BIT $3202	;
$BD57	.byte $02	; INVALID OPCODE !!!
$BD58	BIT $02  	;
$BD5A	.byte $82	; INVALID OPCODE !!!
$BD5B	.byte $02	; INVALID OPCODE !!!
$BD5C	.byte $89	; INVALID OPCODE !!!
$BD5D	.byte $0c	; INVALID OPCODE !!!
$BD5E	ASL A		;
$BD5F	PHP		;
$BD60	ASL $32  	;
$BD62	BMI $BD92	;
$BD64	BIT $282A	;
$BD67	ROL $24  	;
$BD69	.byte $02	; INVALID OPCODE !!!
$BD6A	.byte $02	; INVALID OPCODE !!!
$BD6B	.byte $02	; INVALID OPCODE !!!
$BD6C	STX $02  	;
$BD6E	.byte $c7	; INVALID OPCODE !!!
$BD6F	STY $02  	;
$BD71	.byte $ff	; INVALID OPCODE !!!
$BD72	CPY $80  	;
$BD74	PLP		;
$BD75	.byte $02	; INVALID OPCODE !!!
$BD76	.byte $82	; INVALID OPCODE !!!
$BD77	.byte $02	; INVALID OPCODE !!!
$BD78	.byte $80	; INVALID OPCODE !!!
$BD79	BIT $3202	;
$BD7C	.byte $02	; INVALID OPCODE !!!
$BD7D	BIT $02  	;
$BD7F	.byte $82	; INVALID OPCODE !!!
$BD80	.byte $02	; INVALID OPCODE !!!
$BD81	STA ($02,X)	;
$BD83	.byte $80	; INVALID OPCODE !!!
$BD84	PLP		;
$BD85	.byte $02	; INVALID OPCODE !!!
$BD86	ASL $02  	;
$BD88	PLP		;
$BD89	.byte $02	; INVALID OPCODE !!!
$BD8A	STA ($02,X)	;
$BD8C	.byte $80	; INVALID OPCODE !!!
$BD8D	BIT $02  	;
$BD8F	.byte $32	; INVALID OPCODE !!!
$BD90	.byte $02	; INVALID OPCODE !!!
$BD91	BIT $02  	;
$BD93	.byte $ff	; INVALID OPCODE !!!
$BD94	INY		;
$BD95	STY $02  	;
$BD97	.byte $ff	; INVALID OPCODE !!!
$BD98	STA ($14,X)	;
$BD9A	.byte $02	; INVALID OPCODE !!!
$BD9B	.byte $02	; INVALID OPCODE !!!
$BD9C	.byte $14	; INVALID OPCODE !!!
$BD9D	.byte $1a	; INVALID OPCODE !!!
$BD9E	.byte $14	; INVALID OPCODE !!!
$BD9F	.byte $02	; INVALID OPCODE !!!
$BDA0	.byte $02	; INVALID OPCODE !!!
$BDA1	DEY		;
$BDA2	BPL $BDB4	;
$BDA4	BPL $BDB6	;
$BDA6	.byte $14	; INVALID OPCODE !!!
$BDA7	BPL $BD2E	;
$BDA9	.byte $3c	; INVALID OPCODE !!!
$BDAA	STA ($44,X)	;
$BDAC	STA $4A  	;
$BDAE	STA ($44,X)	;
$BDB0	DEY		;
$BDB1	PLP		;
$BDB2	BIT $20  	;
$BDB4	LSR $42  	;
$BDB6	RTI		;

$BDB7	DEC $81  	;
$BDB9	.byte $3c	; INVALID OPCODE !!!
$BDBA	.byte $02	; INVALID OPCODE !!!
$BDBB	.byte $02	; INVALID OPCODE !!!
$BDBC	.byte $44	; INVALID OPCODE !!!
$BDBD	.byte $02	; INVALID OPCODE !!!
$BDBE	.byte $02	; INVALID OPCODE !!!
$BDBF	.byte $02	; INVALID OPCODE !!!
$BDC0	LSR A		;
$BDC1	.byte $02	; INVALID OPCODE !!!
$BDC2	LSR $36  	;
$BDC4	ROL $38,X	;
$BDC6	SEC		;
$BDC7	.byte $02	; INVALID OPCODE !!!
$BDC8	.byte $3a	; INVALID OPCODE !!!
$BDC9	.byte $02	; INVALID OPCODE !!!
$BDCA	.byte $80	; INVALID OPCODE !!!
$BDCB	.byte $3c	; INVALID OPCODE !!!
$BDCC	.byte $3c	; INVALID OPCODE !!!
$BDCD	STA ($02,X)	;
$BDCF	BIT $02  	;
$BDD1	.byte $02	; INVALID OPCODE !!!
$BDD2	BIT $8824	;
$BDD5	BIT $1E  	;
$BDD7	LSR $36  	;
$BDD9	SEC		;
$BDDA	.byte $3a	; INVALID OPCODE !!!
$BDDB	.byte $ff	; INVALID OPCODE !!!
$BDDC	CPY $84  	;
$BDDE	.byte $02	; INVALID OPCODE !!!
$BDDF	.byte $ff	; INVALID OPCODE !!!
$BDE0	CLD		;
$BDE1	STA ($06,X)	;
$BDE3	.byte $ff	; INVALID OPCODE !!!
$BDE4	DEC $88  	;
$BDE6	ASL $FF  	;
$BDE8	.byte $c7	; INVALID OPCODE !!!
$BDE9	STA ($06,X)	;
$BDEB	ASL $80  	;
$BDED	ASL $06  	;
$BDEF	STA ($06,X)	;
$BDF1	ASL $80  	;
$BDF3	ASL $06  	;
$BDF5	STA ($06,X)	;
$BDF7	ASL $FF  	;
$BDF9	DEC $88  	;
$BDFB	ASL $FF  	;
$BDFD	CPX #$81	;
$BDFF	ASL $06  	;
$BE01	.byte $ff	; INVALID OPCODE !!!
$BE02	.byte $82	; INVALID OPCODE !!!
$BE03	.byte $0f	; INVALID OPCODE !!!
$BE04	STA ($06,X)	;
$BE06	ASL $EA  	;
$BE08	ASL $06  	;
$BE0A	ASL $06  	;
$BE0C	.byte $ff	; INVALID OPCODE !!!
$BE0D	CMP $80  	;
$BE0F	ASL $FF58	;
$BE12	BRK		;
$BE13	CMP $80  	;
$BE15	ASL $FF58	;
$BE18	.byte $82	; INVALID OPCODE !!!
$BE19	.byte $1c	; INVALID OPCODE !!!
$BE1A	.byte $1c	; INVALID OPCODE !!!
$BE1B	.byte $c3	; INVALID OPCODE !!!
$BE1C	.byte $82	; INVALID OPCODE !!!
$BE1D	.byte $1c	; INVALID OPCODE !!!
$BE1E	.byte $1c	; INVALID OPCODE !!!
$BE1F	STA ($1C,X)	;
$BE21	.byte $1c	; INVALID OPCODE !!!
$BE22	.byte $1c	; INVALID OPCODE !!!
$BE23	.byte $02	; INVALID OPCODE !!!
$BE24	.byte $ff	; INVALID OPCODE !!!
$BE25	.byte $c7	; INVALID OPCODE !!!
$BE26	DEY		;
$BE27	.byte $1c	; INVALID OPCODE !!!
$BE28	.byte $ff	; INVALID OPCODE !!!
$BE29	BRK		;
$BE2A	.byte $83	; INVALID OPCODE !!!
$BE2B	.byte $02	; INVALID OPCODE !!!
$BE2C	.byte $80	; INVALID OPCODE !!!
$BE2D	ASL $0E02	;
$BE30	.byte $02	; INVALID OPCODE !!!
$BE31	.byte $0c	; INVALID OPCODE !!!
$BE32	.byte $02	; INVALID OPCODE !!!
$BE33	ASL $4E02	; unknown register 
$BE36	.byte $02	; INVALID OPCODE !!!
$BE37	.byte $02	; INVALID OPCODE !!!
$BE38	.byte $02	; INVALID OPCODE !!!
$BE39	ASL $0C02	;
$BE3C	.byte $02	; INVALID OPCODE !!!
$BE3D	.byte $02	; INVALID OPCODE !!!
$BE3E	.byte $02	; INVALID OPCODE !!!
$BE3F	ASL $0C02	;
$BE42	.byte $02	; INVALID OPCODE !!!
$BE43	ASL $4E02	; unknown register 
$BE46	.byte $02	; INVALID OPCODE !!!
$BE47	.byte $02	; INVALID OPCODE !!!
$BE48	.byte $02	; INVALID OPCODE !!!
$BE49	ASL $0C02	;
$BE4C	.byte $02	; INVALID OPCODE !!!
$BE4D	ASL $0E02	;
$BE50	.byte $02	; INVALID OPCODE !!!
$BE51	.byte $0c	; INVALID OPCODE !!!
$BE52	.byte $02	; INVALID OPCODE !!!
$BE53	ASL $4E02	; unknown register 
$BE56	.byte $02	; INVALID OPCODE !!!
$BE57	.byte $02	; INVALID OPCODE !!!
$BE58	.byte $02	; INVALID OPCODE !!!
$BE59	ASL $0C02	;
$BE5C	.byte $02	; INVALID OPCODE !!!
$BE5D	DEY		;
$BE5E	LSR $1618	;
$BE61	.byte $12	; INVALID OPCODE !!!
$BE62	ASL $0E0C	;
$BE65	.byte $83	; INVALID OPCODE !!!
$BE66	.byte $02	; INVALID OPCODE !!!
$BE67	STA ($3E,X)	;
$BE69	ROL $4682,X	; unknown register 
$BE6C	.byte $1c	; INVALID OPCODE !!!
$BE6D	LSR $81  	;
$BE6F	.byte $02	; INVALID OPCODE !!!
$BE70	SEC		;
$BE71	ROL $8202,X	;
$BE74	LSR $1C  	;
$BE76	.byte $82	; INVALID OPCODE !!!
$BE77	PHA		;
$BE78	PHA		;
$BE79	STA ($3E,X)	;
$BE7B	ROL $3882,X	;
$BE7E	DEY		;
$BE7F	BIT $20  	;
$BE81	.byte $1c	; INVALID OPCODE !!!
$BE82	PHA		;
$BE83	LSR $42  	;
$BE85	ROL $0982,X	;
$BE88	ORA #$c6	;
$BE8A	.byte $82	; INVALID OPCODE !!!
$BE8B	.byte $03	; INVALID OPCODE !!!
$BE8C	.byte $0c	; INVALID OPCODE !!!
$BE8D	.byte $ff	; INVALID OPCODE !!!
$BE8E	DEC $88  	;
$BE90	ASL $FF  	;
$BE92	SBC $2A89	;
$BE95	.byte $02	; INVALID OPCODE !!!
$BE96	.byte $04	; INVALID OPCODE !!!
$BE97	.byte $0c	; INVALID OPCODE !!!
$BE98	.byte $02	; INVALID OPCODE !!!
$BE99	.byte $04	; INVALID OPCODE !!!
$BE9A	PHP		;
$BE9B	.byte $02	; INVALID OPCODE !!!
$BE9C	BMI $BEC4	;
$BE9E	.byte $02	; INVALID OPCODE !!!
$BE9F	BMI $BEA0	;
$BEA1	.byte $80	; INVALID OPCODE !!!
$BEA2	.byte $02	; INVALID OPCODE !!!
$BEA3	SBC $0C89	;
$BEA6	.byte $02	; INVALID OPCODE !!!
$BEA7	.byte $12	; INVALID OPCODE !!!
$BEA8	LSR $1202	;
$BEAB	CLC		;
$BEAC	.byte $02	; INVALID OPCODE !!!
$BEAD	ASL $0208	;
$BEB0	ASL $80FF	;
$BEB3	.byte $42	; INVALID OPCODE !!!
$BEB4	.byte $02	; INVALID OPCODE !!!
$BEB5	PHA		;
$BEB6	.byte $02	; INVALID OPCODE !!!
$BEB7	ASL $2402,X	;
$BEBA	.byte $02	; INVALID OPCODE !!!
$BEBB	.byte $02	; INVALID OPCODE !!!
$BEBC	.byte $02	; INVALID OPCODE !!!
$BEBD	ROL A		;
$BEBE	.byte $02	; INVALID OPCODE !!!
$BEBF	DEC $8C  	;
$BEC1	BMI $BEED	;
$BEC3	.byte $ff	; INVALID OPCODE !!!
$BEC4	BRK		;
$BEC5	.byte $80	; INVALID OPCODE !!!
$BEC6	BIT $02  	;
$BEC8	ROL A		;
$BEC9	.byte $02	; INVALID OPCODE !!!
$BECA	BMI $BECE	;
$BECC	ASL $02  	;
$BECE	.byte $02	; INVALID OPCODE !!!
$BECF	.byte $02	; INVALID OPCODE !!!
$BED0	.byte $0c	; INVALID OPCODE !!!
$BED1	.byte $02	; INVALID OPCODE !!!
$BED2	DEC $8C  	;
$BED4	.byte $12	; INVALID OPCODE !!!
$BED5	CLC		;
$BED6	.byte $ff	; INVALID OPCODE !!!
$BED7	.byte $80	; INVALID OPCODE !!!
$BED8	LSR $54,X	;
$BEDA	.byte $52	; INVALID OPCODE !!!
$BEDB	BVC $BE5E	;
$BEDD	.byte $02	; INVALID OPCODE !!!
$BEDE	.byte $80	; INVALID OPCODE !!!
$BEDF	LSR $545A,X	; MMC5 register or expansion RAM 
$BEE2	BVC $BEFC	;
$BEE4	.byte $14	; INVALID OPCODE !!!
$BEE5	BPL $BEF1	;
$BEE7	ASL $30  	;
$BEE9	BIT $0228	;
$BEEC	BRK		;
$BEED	.byte $80	; INVALID OPCODE !!!
$BEEE	.byte $1a	; INVALID OPCODE !!!
$BEEF	CLC		;
$BEF0	ASL $14,X	;
$BEF2	STA ($02,X)	;
$BEF4	.byte $80	; INVALID OPCODE !!!
$BEF5	.byte $02	; INVALID OPCODE !!!
$BEF6	LSR $545A,X	; MMC5 register or expansion RAM 
$BEF9	BVC $BF13	;
$BEFB	.byte $14	; INVALID OPCODE !!!
$BEFC	BPL $BF08	;
$BEFE	ASL $30  	;
$BF00	BIT $8228	;
$BF03	.byte $1c	; INVALID OPCODE !!!
$BF04	.byte $02	; INVALID OPCODE !!!
$BF05	.byte $1c	; INVALID OPCODE !!!
$BF06	.byte $02	; INVALID OPCODE !!!
$BF07	.byte $02	; INVALID OPCODE !!!
$BF08	.byte $1c	; INVALID OPCODE !!!
$BF09	.byte $1c	; INVALID OPCODE !!!
$BF0A	BRK		;
$BF0B	STA ($10,X)	;
$BF0D	ASL A		;
$BF0E	.byte $32	; INVALID OPCODE !!!
$BF0F	PLP		;
$BF10	.byte $80	; INVALID OPCODE !!!
$BF11	.byte $32	; INVALID OPCODE !!!
$BF12	.byte $02	; INVALID OPCODE !!!
$BF13	.byte $32	; INVALID OPCODE !!!
$BF14	.byte $02	; INVALID OPCODE !!!
$BF15	.byte $82	; INVALID OPCODE !!!
$BF16	.byte $32	; INVALID OPCODE !!!
$BF17	STA ($06,X)	;
$BF19	.byte $02	; INVALID OPCODE !!!
$BF1A	ASL $02  	;
$BF1C	.byte $82	; INVALID OPCODE !!!
$BF1D	.byte $32	; INVALID OPCODE !!!
$BF1E	STA ($54,X)	;
$BF20	.byte $1a	; INVALID OPCODE !!!
$BF21	BPL $BF2D	;
$BF23	.byte $80	; INVALID OPCODE !!!
$BF24	BPL $BF28	;
$BF26	BPL $BF2A	;
$BF28	.byte $82	; INVALID OPCODE !!!
$BF29	BPL $BEAC	;
$BF2B	ASL $02,X	;
$BF2D	ASL $02,X	;
$BF2F	.byte $82	; INVALID OPCODE !!!
$BF30	ASL A		;
$BF31	.byte $83	; INVALID OPCODE !!!
$BF32	.byte $03	; INVALID OPCODE !!!
$BF33	.byte $0c	; INVALID OPCODE !!!
$BF34	.byte $82	; INVALID OPCODE !!!
$BF35	.byte $03	; INVALID OPCODE !!!
$BF36	.byte $0c	; INVALID OPCODE !!!
$BF37	.byte $0c	; INVALID OPCODE !!!
$BF38	.byte $c2	; INVALID OPCODE !!!
$BF39	DEY		;
$BF3A	.byte $1c	; INVALID OPCODE !!!
$BF3B	.byte $1c	; INVALID OPCODE !!!
$BF3C	.byte $1c	; INVALID OPCODE !!!
$BF3D	.byte $1c	; INVALID OPCODE !!!
$BF3E	.byte $1c	; INVALID OPCODE !!!
$BF3F	.byte $1c	; INVALID OPCODE !!!
$BF40	.byte $83	; INVALID OPCODE !!!
$BF41	.byte $1c	; INVALID OPCODE !!!
$BF42	.byte $80	; INVALID OPCODE !!!
$BF43	.byte $04	; INVALID OPCODE !!!
$BF44	.byte $04	; INVALID OPCODE !!!
$BF45	ROL A		;
$BF46	.byte $02	; INVALID OPCODE !!!
$BF47	.byte $82	; INVALID OPCODE !!!
$BF48	.byte $1c	; INVALID OPCODE !!!
$BF49	.byte $ff	; INVALID OPCODE !!!
$BF4A	STA ($4C,X)	;
$BF4C	.byte $02	; INVALID OPCODE !!!
$BF4D	JMP $2A02	;

$BF50	.byte $02	; INVALID OPCODE !!!
$BF51	JMP $811C	;

$BF54	JMP $4C02	; unknown register 

$BF57	.byte $02	; INVALID OPCODE !!!
$BF58	JMP $8800	;

$BF5B	ROL $2E2E	;
$BF5E	BMI $BF64	;
$BF60	BMI $BF26	;
$BF62	.byte $80	; INVALID OPCODE !!!
$BF63	ROL $FF04	;
$BF66	.byte $83	; INVALID OPCODE !!!
$BF67	.byte $02	; INVALID OPCODE !!!
$BF68	DEY		;
$BF69	ROL $2E2E	;
$BF6C	BMI $BF72	;
$BF6E	BMI $BF34	;
$BF70	.byte $80	; INVALID OPCODE !!!
$BF71	ROL $FF04	;
$BF74	.byte $83	; INVALID OPCODE !!!
$BF75	.byte $02	; INVALID OPCODE !!!
$BF76	STY $02  	;
$BF78	.byte $02	; INVALID OPCODE !!!
$BF79	.byte $c2	; INVALID OPCODE !!!
$BF7A	DEY		;
$BF7B	ROL $3E3E,X	;
$BF7E	.byte $42	; INVALID OPCODE !!!
$BF7F	LSR $42  	;
$BF81	STY $3E  	;
$BF83	.byte $ff	; INVALID OPCODE !!!
$BF84	STA $3E  	;
$BF86	STA ($3E,X)	;
$BF88	DEY		;
$BF89	.byte $1c	; INVALID OPCODE !!!
$BF8A	LSR $1C  	;
$BF8C	STA ($02,X)	;
$BF8E	ROL $3E3E,X	;
$BF91	.byte $82	; INVALID OPCODE !!!
$BF92	.byte $34	; INVALID OPCODE !!!
$BF93	.byte $02	; INVALID OPCODE !!!
$BF94	.byte $c2	; INVALID OPCODE !!!
$BF95	DEY		;
$BF96	ASL $06  	;
$BF98	ASL $06  	;
$BF9A	ASL $06  	;
$BF9C	.byte $82	; INVALID OPCODE !!!
$BF9D	ASL $06  	;
$BF9F	ASL $06  	;
$BFA1	.byte $ff	; INVALID OPCODE !!!
$BFA2	.byte $c2	; INVALID OPCODE !!!
$BFA3	STA ($06,X)	;
$BFA5	ASL $80  	;
$BFA7	ASL $06  	;
$BFA9	STA ($06,X)	;
$BFAB	ASL $06  	;
$BFAD	ASL $80  	;
$BFAF	ASL $06  	;
$BFB1	.byte $ff	; INVALID OPCODE !!!
$BFB2	ORA #$80	;
$BFB4	BPL $BFB8	;
$BFB6	BPL $BFBA	;
$BFB8	BPL $BFBC	;
$BFBA	.byte $0c	; INVALID OPCODE !!!
$BFBB	.byte $0c	; INVALID OPCODE !!!
$BFBC	.byte $0c	; INVALID OPCODE !!!
$BFBD	.byte $02	; INVALID OPCODE !!!
$BFBE	.byte $0c	; INVALID OPCODE !!!
$BFBF	.byte $02	; INVALID OPCODE !!!
$BFC0	.byte $14	; INVALID OPCODE !!!
$BFC1	.byte $14	; INVALID OPCODE !!!
$BFC2	.byte $14	; INVALID OPCODE !!!
$BFC3	.byte $02	; INVALID OPCODE !!!
$BFC4	.byte $14	; INVALID OPCODE !!!
$BFC5	.byte $02	; INVALID OPCODE !!!
$BFC6	STA $10  	;
$BFC8	BRK		;
$BFC9	.byte $80	; INVALID OPCODE !!!
$BFCA	.byte $32	; INVALID OPCODE !!!
$BFCB	.byte $02	; INVALID OPCODE !!!
$BFCC	.byte $32	; INVALID OPCODE !!!
$BFCD	.byte $02	; INVALID OPCODE !!!
$BFCE	.byte $32	; INVALID OPCODE !!!
$BFCF	.byte $02	; INVALID OPCODE !!!
$BFD0	.byte $c2	; INVALID OPCODE !!!
$BFD1	.byte $32	; INVALID OPCODE !!!
$BFD2	.byte $32	; INVALID OPCODE !!!
$BFD3	.byte $32	; INVALID OPCODE !!!
$BFD4	.byte $02	; INVALID OPCODE !!!
$BFD5	.byte $32	; INVALID OPCODE !!!
$BFD6	.byte $02	; INVALID OPCODE !!!
$BFD7	.byte $ff	; INVALID OPCODE !!!
$BFD8	STA $32  	;
$BFDA	.byte $80	; INVALID OPCODE !!!
$BFDB	.byte $54	; INVALID OPCODE !!!
$BFDC	.byte $02	; INVALID OPCODE !!!
$BFDD	.byte $54	; INVALID OPCODE !!!
$BFDE	.byte $02	; INVALID OPCODE !!!
$BFDF	.byte $54	; INVALID OPCODE !!!
$BFE0	.byte $02	; INVALID OPCODE !!!
$BFE1	BVC $C033	;
$BFE3	BVC $BFE7	;
$BFE5	BVC $BFE9	;
$BFE7	LSR $56,X	;
$BFE9	LSR $02,X	;
$BFEB	LSR $02,X	;
$BFED	STA $54  	;
$BFEF	CPY $85  	;
$BFF1	.byte $0c	; INVALID OPCODE !!!
$BFF2	.byte $ff	; INVALID OPCODE !!!
$BFF3	.byte $ff	; INVALID OPCODE !!!
$BFF4	.byte $ff	; INVALID OPCODE !!!
$BFF5	.byte $ff	; INVALID OPCODE !!!
$BFF6	.byte $ff	; INVALID OPCODE !!!
$BFF7	JMP $F758	; (in an if statement) 
$BFFA	TXA		;
$BFFB	CPY #$00	;
$BFFD	CPY #$ed	;
$BFFF	CPY #$a9	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to C033 was coincidental data)

function_C000:
$C000	LDA #$00	;
$C002	STA $2000	;PPU setup #1
$C005	STA $2001	;PPU setup #2
$C008	LDA $2002	;PPU status
$C00B	BPL $C008	;
$C00D	SEI		;
$C00E	CLD		;
$C00F	LDX #$ff	;
$C011	TXS		;
$C012	LDX #$12	;
$C014	LDA #$00	;
$C016	STA $00,X	;
$C018	INX		;
$C019	BNE $C016	;
$C01B	LDX #$02	;
$C01D	LDA $07FA,X	;
$C020	CMP $C078,X	;
$C023	BNE $C02A	;
$C025	DEX		;
$C026	BPL $C01D	;
$C028	BMI $C06D	;
$C02A	LDX #$00	;
$C02C	TXA		;
$C02D	STA $00,X	;
$C02F	STA $0700,X	;
$C032	INX		;
$C033	BNE $C02D	;
$C035	LDA #$32	;
$C037	STA $15  	;
$C039	LDA #$32	;
$C03B	JSR $D6D4	;
$C03E	LDA #$00	;
$C040	STA $46  	;
$C042	JSR $C56F	;
$C045	DEC $15  	;
$C047	BNE $C039	;
$C049	LDX #$0e	;
$C04B	LDA $C07B,X	;
$C04E	STA $0629,X	;
$C051	DEX		;
$C052	BPL $C04B	;
$C054	LDX #$04	;
$C056	LDA #$00	;
$C058	STA $03,X	;
$C05A	DEX		;
$C05B	BPL $C056	;
$C05D	LDA #$00	;
$C05F	JSR $D6D4	;
$C062	LDX #$02	;
$C064	LDA $C078,X	;
$C067	STA $07FA,X	;
$C06A	DEX		;
$C06B	BPL $C064	;
$C06D	LDA #$1e	;
$C06F	STA $01  	;
$C071	LDA #$90	;
$C073	STA $00  	;
$C075	JMP $F1CA	;

$C078	PHA		;
$C079	EOR ($4C,X)	;
$C07B	BRK		;
$C07C	BRK		;
$C07D	BRK		;
$C07E	ORA ($00,X)	;
$C080	BRK		;
$C081	BRK		;
$C082	BRK		;
$C083	ORA ($00,X)	;
$C085	BRK		;
$C086	BRK		;
$C087	ORA $02  	;
$C089	BRK		;

function_C08A:
$C08A	PHA		;
$C08B	TXA		;
$C08C	PHA		;
$C08D	TYA		;
$C08E	PHA		;
$C08F	LDA #$00	;
$C091	STA $2003	;SPR-RAM address select
$C094	LDA #$02	;
$C096	STA $4014	;Sprite DMA trigger
$C099	LDA $52  	;
$C09B	CMP $53  	;
$C09D	BEQ $C0A2	;
$C09F	JSR $C172	;
$C0A2	JSR $D603	;
$C0A5	JSR $D78E	;
$C0A8	INC $19  	;
$C0AA	LDA #$20	;
$C0AC	STA $2006	;VRAM address select
$C0AF	LDA #$00	;
$C0B1	STA $2006	;VRAM address select
$C0B4	LDA #$00	;
$C0B6	STA $2005	;PPU scroll
$C0B9	STA $2005	;PPU scroll
$C0BC	JSR $FFF7	;
$C0BF	LDA #$01	;
$C0C1	STA $02  	;
$C0C3	LDA $16  	;
$C0C5	BEQ $C0E7	;
$C0C7	LDA $2002	;PPU status
$C0CA	BMI $C0C7	;
$C0CC	LDX #$04	;
$C0CE	LDY #$c6	;
$C0D0	DEY		;
$C0D1	BNE $C0D0	;
$C0D3	DEX		;
$C0D4	BNE $C0D0	;
$C0D6	LDA $18  	;
$C0D8	ORA $00  	;
$C0DA	STA $2000	;PPU setup #1
$C0DD	LDA $17  	;
$C0DF	STA $2005	;PPU scroll
$C0E2	LDA #$00	;
$C0E4	STA $2005	;PPU scroll
$C0E7	PLA		;
$C0E8	TAY		;
$C0E9	PLA		;
$C0EA	TAX		;
$C0EB	PLA		;
$C0EC	RTI		;

$C0ED	JMP $C0ED	;


function_C0F0:
$C0F0	LDA $00  	;
$C0F2	AND #$7f	;
$C0F4	STA $2000	;PPU setup #1
$C0F7	STA $00  	;
$C0F9	RTS		;


function_C0FA:
$C0FA	LDA $00  	;
$C0FC	ORA #$80	;
$C0FE	BNE $C0F4	;

function_C100:
$C100	LDA #$00	;
$C102	PHA		;
$C103	JSR $F45B	;
$C106	PLA		;
$C107	STA $2001	;PPU setup #2
$C10A	RTS		;


function_C10B:
$C10B	LDA $01  	;
$C10D	BNE $C102	;

function_C10F:
$C10F	JSR $C14A	;
$C112	LDY #$00	;
$C114	LDA $0057,Y	;
$C117	STA $0300,X	;
$C11A	INX		;
$C11B	INY		;
$C11C	CPY $56  	;
$C11E	BNE $C114	;
$C120	STX $53  	;
$C122	RTS		;


function_C123:
$C123	LDA #$57	;
$C125	LDY #$00	;

function_C127:
$C127	STA $21  	;
$C129	STY $22  	;
$C12B	TXA		;
$C12C	PHA		;
$C12D	LDY #$02	;
$C12F	LDA ($21),Y	;
$C131	CLC		;
$C132	ADC #$03	;
$C134	STA $12  	;
$C136	LDX $53  	;
$C138	LDY #$00	;
$C13A	LDA ($21),Y	;
$C13C	STA $0300,X	;
$C13F	INX		;
$C140	INY		;
$C141	CPY $12  	;
$C143	BNE $C13A	;
$C145	STX $53  	;
$C147	PLA		;
$C148	TAX		;
$C149	RTS		;


function_C14A:
$C14A	LDX $53  	;
$C14C	LDA #$00	;
$C14E	STA $12  	;
$C150	LDA $55  	;
$C152	ASL A		;
$C153	ASL A		;
$C154	ASL A		;
$C155	ASL A		;
$C156	ROL $12  	;
$C158	ASL A		;
$C159	ROL $12  	;
$C15B	ORA $54  	;
$C15D	PHA		;
$C15E	LDA $12  	;
$C160	ORA #$20	;
$C162	STA $0300,X	;
$C165	INX		;
$C166	PLA		;
$C167	STA $0300,X	;
$C16A	INX		;
$C16B	LDA $56  	;
$C16D	STA $0300,X	;
$C170	INX		;
$C171	RTS		;


function_C172:
$C172	TYA		;
$C173	PHA		;
$C174	TXA		;
$C175	PHA		;
$C176	JSR $C17E	;
$C179	PLA		;
$C17A	TAX		;
$C17B	PLA		;
$C17C	TAY		;
$C17D	RTS		;


function_C17E:
$C17E	LDX $52  	;
$C180	LDA $0300,X	;
$C183	INX		;
$C184	STA $50  	;
$C186	STA $2006	;VRAM address select
$C189	LDA $0300,X	;
$C18C	INX		;
$C18D	STA $2006	;VRAM address select
$C190	LDY $0300,X	;
$C193	INX		;
$C194	LDA $0300,X	;
$C197	INX		;
$C198	STA $2007	;VRAM data
$C19B	DEY		;
$C19C	BNE $C194	;
$C19E	LDA $50  	;
$C1A0	CMP #$3f	;
$C1A2	BNE $C1B4	;
$C1A4	LDA #$3f	;
$C1A6	STA $2006	;VRAM address select
$C1A9	LDA #$00	;
$C1AB	STA $2006	;VRAM address select
$C1AE	STA $2006	;VRAM address select
$C1B1	STA $2006	;VRAM address select
$C1B4	STX $52  	;
$C1B6	CPX $53  	;
$C1B8	BNE $C17E	;
$C1BA	RTS		;

$C1BB	LDA #$20	;
$C1BD	STA $F2  	;
$C1BF	JSR $C51D	;
$C1C2	JSR $C52F	;
$C1C5	LDA #$ff	;
$C1C7	STA $CD  	;
$C1C9	LDA #$a3	;
$C1CB	STA $23  	;
$C1CD	LDA #$c4	;
$C1CF	STA $24  	;
$C1D1	LDA #$80	;
$C1D3	STA $91  	;
$C1D5	STA $0488	;
$C1D8	LDA #$70	;
$C1DA	STA $9A  	;
$C1DC	JSR $CD40	;
$C1DF	LDA #$00	;
$C1E1	STA $41  	;
$C1E3	STA $C9  	;
$C1E5	STA $CA  	;
$C1E7	STA $BA  	;
$C1E9	STA $C5  	;
$C1EB	STA $C8  	;
$C1ED	JSR $F49B	;
$C1F0	LDX #$13	;
$C1F2	LDA #$ff	;
$C1F4	STA $0530,X	;
$C1F7	LDA #$f0	;
$C1F9	STA $04A4,X	;
$C1FC	DEX		;
$C1FD	BPL $C1F2	;
$C1FF	JSR $F466	;
$C202	JSR $E687	;
$C205	LDA $C5  	;
$C207	BNE $C20C	;
$C209	JSR $C6EF	;
$C20C	LDA $19  	;
$C20E	LSR A		;
$C20F	BCS $C214	;
$C211	JMP $C2C6	; (in an if statement) 
$C214	LDA $C5  	;
$C216	BEQ $C21D	;
$C218	DEC $C5  	;
$C21A	JMP $C2C6	; (in an if statement) 
$C21D	LDA $17  	;
$C21F	BNE $C227	;
$C221	LDA $18  	;
$C223	EOR #$01	;
$C225	STA $18  	;
$C227	DEC $17  	;
$C229	LDA $0488	;
$C22C	BEQ $C243	;
$C22E	INC $0488	;
$C231	LDA $0488	;
$C234	CMP #$f0	;
$C236	BCC $C23D	;
$C238	LDA #$00	;
$C23A	STA $0488	;
$C23D	LDA $BD  	;
$C23F	BEQ $C243	;
$C241	INC $91  	;
$C243	LDX #$07	;
$C245	LDA $055D,X	;
$C248	BMI $C263	;
$C24A	INC $0567,X	;
$C24D	LDA $0567,X	;
$C250	CMP #$f8	;
$C252	BNE $C263	;
$C254	LDA #$ff	;
$C256	STA $055D,X	;
$C259	LDA #$f0	;
$C25B	STA $057B,X	;
$C25E	LDA #$00	;
$C260	STA $05CE	;
$C263	DEX		;
$C264	BPL $C245	;
$C266	LDX #$13	;
$C268	LDA $0530,X	;
$C26B	BMI $C27F	;
$C26D	INC $0490,X	;
$C270	LDA $0490,X	;
$C273	CMP #$f8	;
$C275	BCC $C27F	;
$C277	LDA #$f0	;
$C279	STA $04A4,X	;
$C27C	STA $0530,X	;
$C27F	DEX		;
$C280	BPL $C268	;
$C282	LDA $17  	;
$C284	AND #$07	;
$C286	BNE $C2C6	;
$C288	LDX $88  	;
$C28A	DEX		;
$C28B	BMI $C2C6	;
$C28D	LDA #$00	;
$C28F	STA $3E  	;
$C291	LDA #$01	;
$C293	JSR $D6D4	;
$C296	INC $C9  	;
$C298	LDA $C9  	;
$C29A	AND #$1f	;
$C29C	BNE $C2B2	;
$C29E	INC $CA  	;
$C2A0	LDA $CA  	;
$C2A2	CMP #$0a	;
$C2A4	BNE $C2B2	;
$C2A6	LDA #$02	;
$C2A8	STA $CA  	;
$C2AA	LDY $BA  	;
$C2AC	INY		;
$C2AD	TYA		;
$C2AE	AND #$03	;
$C2B0	STA $BA  	;
$C2B2	LDX $CA  	;
$C2B4	LDA $C3B5,X	;
$C2B7	ASL A		;
$C2B8	TAY		;
$C2B9	LDA $C3AB,Y	;
$C2BC	STA $25  	;
$C2BE	LDA $C3AC,Y	;
$C2C1	STA $26  	;
$C2C3	JSR $C3A8	;
$C2C6	LDX #$07	;
$C2C8	LDA $055D,X	;
$C2CB	BMI $C2E5	;
$C2CD	JSR $CEC4	;
$C2D0	LDA $05CD	;
$C2D3	BEQ $C2E5	;
$C2D5	DEC $05CD	;
$C2D8	INC $05CE	;
$C2DB	TXA		;
$C2DC	PHA		;
$C2DD	LDA $0559	;
$C2E0	JSR $D6D4	;
$C2E3	PLA		;
$C2E4	TAX		;
$C2E5	JSR $CE25	;
$C2E8	DEX		;
$C2E9	BPL $C2C8	;
$C2EB	LDX #$13	;
$C2ED	LDA $0530,X	;
$C2F0	BMI $C30D	;
$C2F2	LDA $C5  	;
$C2F4	BNE $C30A	;
$C2F6	JSR $C9AC	;
$C2F9	LDA $04A4,X	;
$C2FC	CMP #$02	;
$C2FE	BCS $C303	;
$C300	JSR $CA45	;
$C303	CMP #$d8	;
$C305	BCC $C30A	;
$C307	JSR $CA45	;
$C30A	JSR $CB12	;
$C30D	LDA $19  	;
$C30F	AND #$07	;
$C311	LSR A		;
$C312	TAY		;
$C313	LDA $C9D3,Y	;
$C316	PHA		;
$C317	LDA $19  	;
$C319	LSR A		;
$C31A	TXA		;
$C31B	BCC $C323	;
$C31D	STA $12  	;
$C31F	LDA #$13	;
$C321	SBC $12  	;
$C323	ASL A		;
$C324	ASL A		;
$C325	TAY		;
$C326	PLA		;
$C327	STA $02B1,Y	;
$C32A	LDA $04A4,X	;
$C32D	STA $02B0,Y	;
$C330	LDA $0490,X	;
$C333	STA $02B3,Y	;
$C336	LDA #$00	;
$C338	STA $02B2,Y	;
$C33B	DEX		;
$C33C	BPL $C2ED	;
$C33E	LDA $05CE	;
$C341	CMP #$14	;
$C343	BCC $C365	;
$C345	INC $47  	;
$C347	LDA #$00	;
$C349	JSR $D6D4	;
$C34C	DEC $47  	;
$C34E	LDA #$10	;
$C350	STA $F2  	;
$C352	INC $C8  	;
$C354	JSR $D3E3	;
$C357	JSR $C51D	;
$C35A	DEC $C8  	;
$C35C	LDX #$64	;
$C35E	JSR $F454	;
$C361	LDA #$20	;
$C363	STA $F2  	;
$C365	LDX #$f0	;
$C367	LDA $0488	;
$C36A	BEQ $C36E	;
$C36C	LDX #$88	;
$C36E	STX $0200	;
$C371	STX $0204	;
$C374	STA $0203	;
$C377	CLC		;
$C378	ADC #$08	;
$C37A	STA $0207	;
$C37D	LDA $19  	;
$C37F	AND #$03	;
$C381	STA $0202	;
$C384	STA $0206	;
$C387	LDX #$e3	;
$C389	STX $0201	;
$C38C	INX		;
$C38D	STX $0205	;
$C390	LDA $88  	;
$C392	BMI $C397	;
$C394	JMP $C1FF	; (in an if statement) 
$C397	JSR $C56F	;
$C39A	LDA #$01	;
$C39C	STA $F0  	;
$C39E	JSR $F45B	;
$C3A1	LDA #$02	;
$C3A3	STA $F2  	;
$C3A5	JMP $F360	;


function_C3A8:
$C3A8	JMP ($0025)	;
$C3AB	.byte $bf	; INVALID OPCODE !!!
$C3AC	.byte $c3	; INVALID OPCODE !!!
$C3AD	SBC $34C3	;
$C3B0	CPY $55  	;
$C3B2	CPY $54  	;
$C3B4	CPY $00  	;
$C3B6	BRK		;
$C3B7	.byte $02	; INVALID OPCODE !!!
$C3B8	.byte $02	; INVALID OPCODE !!!
$C3B9	.byte $02	; INVALID OPCODE !!!
$C3BA	.byte $02	; INVALID OPCODE !!!
$C3BB	.byte $02	; INVALID OPCODE !!!
$C3BC	.byte $04	; INVALID OPCODE !!!
$C3BD	.byte $03	; INVALID OPCODE !!!
$C3BE	ORA ($A0,X)	;
$C3C0	BRK		;
$C3C1	LDA ($23),Y	;
$C3C3	INC $23  	;
$C3C5	BNE $C3C9	;
$C3C7	INC $24  	;
$C3C9	TAX		;
$C3CA	BEQ $C3EC	;
$C3CC	ASL A		;
$C3CD	ASL A		;
$C3CE	ASL A		;
$C3CF	STA $15  	;
$C3D1	LDA #$00	;
$C3D3	STA $14  	;
$C3D5	TXA		;
$C3D6	AND #$c0	;
$C3D8	CMP #$80	;
$C3DA	BNE $C3E2	;
$C3DC	JSR $C461	;
$C3DF	JMP $C3BF	; (in an if statement) 
$C3E2	CMP #$00	;
$C3E4	BNE $C3EC	;
$C3E6	JSR $C47C	;
$C3E9	JMP $C3BF	; (in an if statement) 
$C3EC	RTS		;

$C3ED	JSR $F1A9	;
$C3F0	AND #$7f	;
$C3F2	CMP #$04	;
$C3F4	BCC $C402	;
$C3F6	CMP #$18	;
$C3F8	BCS $C402	;
$C3FA	ASL A		;
$C3FB	ASL A		;
$C3FC	ASL A		;
$C3FD	STA $15  	;

function_C3FF:
$C3FF	JSR $C461	;

function_C402:
$C402	JSR $F1A9	;
$C405	AND #$3f	;
$C407	CMP #$02	;
$C409	BCC $C42F	;
$C40B	CMP #$18	;
$C40D	BCS $C42F	;
$C40F	ASL A		;
$C410	ASL A		;
$C411	ASL A		;
$C412	STA $15  	;
$C414	JSR $F1A9	;
$C417	AND #$3f	;
$C419	LDX $BA  	;
$C41B	ADC $C430,X	;
$C41E	STA $14  	;
$C420	JSR $C47C	;
$C423	JSR $F1A9	;
$C426	LSR A		;
$C427	BCC $C402	;
$C429	JSR $CA45	;
$C42C	JMP $C402	; (in an if statement) 
$C42F	RTS		;

$C430	JSR $4030	; unknown register 
$C433	RTS		;

$C434	JSR $F1A9	;
$C437	AND #$cf	;
$C439	BNE $C3ED	;
$C43B	LDY $89  	;
$C43D	INY		;
$C43E	BNE $C3ED	;
$C440	LDA #$e6	;
$C442	STA $9B  	;
$C444	LDA $1B  	;
$C446	AND #$7f	;
$C448	ADC #$40	;
$C44A	STA $92  	;
$C44C	LDA #$80	;
$C44E	STA $89  	;
$C450	LDA #$00	;
$C452	STA $80  	;
$C454	RTS		;

$C455	JSR $C402	;
$C458	JSR $F1A9	;
$C45B	AND #$7f	;
$C45D	STA $0508,X	;
$C460	RTS		;


function_C461:
$C461	LDX #$07	;
$C463	LDA $055D,X	;
$C466	BMI $C46C	;
$C468	DEX		;
$C469	BPL $C463	;
$C46B	RTS		; (within an if statement) 
$C46C	LDA #$01	;
$C46E	STA $055D,X	;
$C471	LDA #$00	;
$C473	STA $0567,X	;
$C476	LDA $15  	;
$C478	STA $057B,X	;
$C47B	RTS		;


function_C47C:
$C47C	LDX #$13	;
$C47E	LDA $0530,X	;
$C481	BMI $C487	;
$C483	DEX		;
$C484	BPL $C47E	;
$C486	RTS		; (within an if statement) 
$C487	LDA #$00	;
$C489	STA $0530,X	;
$C48C	STA $0490,X	;
$C48F	STA $04F4,X	;
$C492	STA $0508,X	;
$C495	STA $04E0,X	;
$C498	LDA $14  	;
$C49A	STA $051C,X	;
$C49D	LDA $15  	;
$C49F	STA $04A4,X	;
$C4A2	RTS		;

$C4A3	BRK		;
$C4A4	BRK		;
$C4A5	ORA #$00	;
$C4A7	PHP		;
$C4A8	STY $0700	;
$C4AB	CLC		;
$C4AC	BRK		;
$C4AD	CLC		;
$C4AE	BRK		;
$C4AF	ORA $1A00,Y	;
$C4B2	BRK		;
$C4B3	STY $94  	;
$C4B5	.byte $1a	; INVALID OPCODE !!!
$C4B6	BRK		;
$C4B7	.byte $1a	; INVALID OPCODE !!!
$C4B8	BRK		;
$C4B9	.byte $1a	; INVALID OPCODE !!!
$C4BA	BRK		;
$C4BB	.byte $0b	; INVALID OPCODE !!!
$C4BC	.byte $12	; INVALID OPCODE !!!
$C4BD	BRK		;
$C4BE	.byte $0c	; INVALID OPCODE !!!
$C4BF	.byte $13	; INVALID OPCODE !!!
$C4C0	BRK		;
$C4C1	ORA $0014	;
$C4C4	.byte $14	; INVALID OPCODE !!!
$C4C5	BRK		;
$C4C6	BRK		;
$C4C7	BCC $C4C9	;
$C4C9	.byte $07	; INVALID OPCODE !!!
$C4CA	BRK		;
$C4CB	.byte $07	; INVALID OPCODE !!!
$C4CC	STY $0096	;
$C4CF	PHP		;
$C4D0	BRK		;
$C4D1	ORA #$00	;
$C4D3	BRK		;
$C4D4	CLC		;
$C4D5	BRK		;
$C4D6	.byte $17	; INVALID OPCODE !!!
$C4D7	BRK		;
$C4D8	ASL $00,X	;
$C4DA	BRK		;
$C4DB	BRK		;
$C4DC	BRK		;
$C4DD	BRK		;
$C4DE	BRK		;
$C4DF	TXA		;
$C4E0	BCC $C4E2	;
$C4E2	BRK		;
$C4E3	BRK		;
$C4E4	PHP		;
$C4E5	BRK		;
$C4E6	ORA #$98	;
$C4E8	BRK		;
$C4E9	ASL A		;
$C4EA	BRK		;
$C4EB	BRK		;
$C4EC	BRK		;
$C4ED	STX $8A  	;
$C4EF	ORA $00,X	;
$C4F1	.byte $14	; INVALID OPCODE !!!
$C4F2	BRK		;
$C4F3	STX $0013	;
$C4F6	BRK		;
$C4F7	.byte $03	; INVALID OPCODE !!!
$C4F8	ORA $0D00	;
$C4FB	ASL $0C00	;
$C4FE	ORA $0D00	;
$C501	ORA $8600,Y	;
$C504	.byte $92	; INVALID OPCODE !!!
$C505	BRK		;
$C506	BRK		;
$C507	TYA		;
$C508	BRK		;
$C509	BRK		;
$C50A	ASL A		;
$C50B	.byte $12	; INVALID OPCODE !!!
$C50C	BRK		;
$C50D	ORA #$13	;
$C50F	BRK		;
$C510	PHP		;
$C511	.byte $14	; INVALID OPCODE !!!
$C512	BRK		;
$C513	.byte $07	; INVALID OPCODE !!!
$C514	ORA $00,X	;
$C516	.byte $07	; INVALID OPCODE !!!
$C517	ASL $00,X	;
$C519	.byte $07	; INVALID OPCODE !!!
$C51A	BRK		;
$C51B	BRK		;
$C51C	BRK		;

function_C51D:
$C51D	JSR $D0D8	;
$C520	ASL $0559	;
$C523	LDA $0559	;
$C526	ASL A		;
$C527	ASL A		;
$C528	ADC $0559	;
$C52B	STA $0559	;
$C52E	RTS		;


function_C52F:
$C52F	LDA #$00	;
$C531	STA $12  	;
$C533	LDA $12  	;
$C535	ASL A		;
$C536	ASL A		;
$C537	ADC $12  	;
$C539	STA $1D  	;
$C53B	LDA #$07	;
$C53D	STA $1E  	;
$C53F	LDY #$04	;
$C541	LDA ($1D),Y	;
$C543	CMP $0003,Y	;
$C546	BCC $C559	;
$C548	BNE $C54F	;
$C54A	DEY		;
$C54B	BPL $C541	;
$C54D	BMI $C559	;
$C54F	INC $12  	;
$C551	LDA $12  	;
$C553	CMP #$32	;
$C555	BNE $C533	;
$C557	DEC $12  	;
$C559	INC $12  	;
$C55B	LDA $12  	;
$C55D	PHA		;
$C55E	STA $43  	;
$C560	LDY #$0a	;
$C562	JSR $D772	;
$C565	STA $4A  	;
$C567	LDA $43  	;
$C569	STA $49  	;
$C56B	PLA		;
$C56C	STA $12  	;
$C56E	RTS		;


function_C56F:
$C56F	JSR $C52F	;
$C572	DEC $12  	;
$C574	LDA #$31	;
$C576	SEC		;
$C577	SBC $12  	;
$C579	STA $13  	;
$C57B	ASL A		;
$C57C	ASL A		;
$C57D	ADC $13  	;
$C57F	TAY		;
$C580	LDA $12  	;
$C582	ASL A		;
$C583	ASL A		;
$C584	ADC $12  	;
$C586	STA $1D  	;
$C588	CLC		;
$C589	ADC #$05	;
$C58B	STA $1F  	;
$C58D	LDA #$07	;
$C58F	STA $1E  	;
$C591	STA $20  	;
$C593	TYA		;
$C594	BEQ $C5A2	;
$C596	DEY		;
$C597	LDA ($1D),Y	;
$C599	STA ($1F),Y	;
$C59B	DEY		;
$C59C	BNE $C597	;
$C59E	LDA ($1D),Y	;
$C5A0	STA ($1F),Y	;
$C5A2	LDY #$04	;
$C5A4	LDA $0003,Y	;
$C5A7	STA ($1D),Y	;
$C5A9	DEY		;
$C5AA	BPL $C5A4	;
$C5AC	RTS		;

$C5AD	ORA ($02,X)	;
$C5AF	.byte $03	; INVALID OPCODE !!!
$C5B0	.byte $03	; INVALID OPCODE !!!
$C5B1	.byte $02	; INVALID OPCODE !!!
$C5B2	ORA ($FF,X)	;
$C5B4	.byte $03	; INVALID OPCODE !!!
$C5B5	.byte $04	; INVALID OPCODE !!!
$C5B6	ORA $06  	;
$C5B8	.byte $ff	; INVALID OPCODE !!!
$C5B9	LDA $048D	;
$C5BC	LSR A		;
$C5BD	LSR A		;
$C5BE	LSR A		;
$C5BF	TAX		;
$C5C0	LDA $048A	;
$C5C3	BNE $C5CB	;
$C5C5	LDA $C5AD,X	;
$C5C8	JMP $C5CE	; (in an if statement) 
$C5CB	LDA $C5B1,X	;
$C5CE	STA $87  	;
$C5D0	LDX #$08	;
$C5D2	JSR $E39A	;
$C5D5	LDA $048C	;
$C5D8	BEQ $C609	;
$C5DA	LDX $048B	;
$C5DD	LDA $048D	;
$C5E0	CMP #$20	;
$C5E2	BNE $C5EA	;
$C5E4	LDA #$ff	;
$C5E6	STA $88,X	;
$C5E8	BMI $C606	;
$C5EA	BCS $C609	;
$C5EC	LDA $0450	;
$C5EF	BNE $C5F8	;
$C5F1	LDA $99  	;
$C5F3	CLC		;
$C5F4	ADC #$04	;
$C5F6	BNE $C5FD	;
$C5F8	LDA $99  	;
$C5FA	SEC		;
$C5FB	SBC #$04	;
$C5FD	STA $91,X	;
$C5FF	LDA $A2  	;
$C601	SEC		;
$C602	SBC #$0a	;
$C604	STA $9A,X	;
$C606	JSR $E39A	;
$C609	RTS		;


function_C60A:
$C60A	LDA #$ff	;
$C60C	STA $048B	;
$C60F	LDX #$07	;
$C611	LDA $88,X	;
$C613	BMI $C621	;
$C615	LDA $9A,X	;
$C617	CMP #$b4	;
$C619	BCC $C621	;
$C61B	LDA $91,X	;
$C61D	CMP $99  	;
$C61F	BEQ $C625	;
$C621	DEX		;
$C622	BPL $C611	;
$C624	RTS		; (within an if statement) 
$C625	STX $048B	;
$C628	LDA $0448,X	;
$C62B	STA $0450	;
$C62E	LDA #$00	;
$C630	STA $048A	;
$C633	STA $048D	;
$C636	STA $048C	;
$C639	STA $0489	;
$C63C	LDA #$dc	;
$C63E	STA $A2  	;
$C640	RTS		;


function_C641:
$C641	INC $99  	;
$C643	LDA $99  	;
$C645	CMP #$b1	;
$C647	BCC $C64D	;
$C649	LDA #$40	;
$C64B	STA $99  	;
$C64D	RTS		;


function_C64E:
$C64E	LDA $0489	;
$C651	BNE $C665	;
$C653	DEC $A2  	;
$C655	LDA $A2  	;
$C657	CMP #$c4	;
$C659	BCS $C667	;
$C65B	INC $A2  	;
$C65D	INC $048A	;
$C660	INC $0489	;
$C663	BNE $C667	;
$C665	INC $A2  	;
$C667	INC $048D	;
$C66A	LDA $048D	;
$C66D	CMP #$18	;
$C66F	BNE $C699	;
$C671	LDX $048B	;
$C674	LDA $88,X	;
$C676	BMI $C699	;
$C678	LDA $9A,X	;
$C67A	CLC		;
$C67B	ADC #$10	;
$C67D	CMP $A2  	;
$C67F	BCC $C699	;
$C681	LDY $0451,X	;
$C684	LDA $C6AE,Y	;
$C687	STA $0451,X	;
$C68A	LDA #$00	;
$C68C	STA $7F,X	;
$C68E	STA $88,X	;
$C690	LDA $F2  	;
$C692	ORA #$40	;
$C694	STA $F2  	;
$C696	INC $048C	;
$C699	LDA $048A	;
$C69C	BEQ $C6AD	;
$C69E	LDA $048D	;
$C6A1	CMP #$28	;
$C6A3	BEQ $C6A9	;
$C6A5	CMP #$30	;
$C6A7	BNE $C6AD	;
$C6A9	LDA #$cc	;
$C6AB	STA $A2  	;
$C6AD	RTS		;

$C6AE	PHP		;
$C6AF	ORA #$0a	;
$C6B1	.byte $0b	; INVALID OPCODE !!!
$C6B2	PHP		;
$C6B3	ORA #$0a	;
$C6B5	.byte $0b	; INVALID OPCODE !!!
$C6B6	PHP		;
$C6B7	ORA #$0a	;
$C6B9	.byte $0b	; INVALID OPCODE !!!

function_C6BA:
$C6BA	LDA $0489	;
$C6BD	BNE $C6EE	;
$C6BF	LDX $048B	;
$C6C2	LDA $88,X	;
$C6C4	BMI $C6D6	;
$C6C6	LDA $9A,X	;
$C6C8	CMP #$b4	;
$C6CA	BCC $C6D6	;
$C6CC	LDA $91,X	;
$C6CE	CMP #$40	;
$C6D0	BCC $C6D6	;
$C6D2	CMP #$b1	;
$C6D4	BCC $C6E4	;
$C6D6	LDA #$30	;
$C6D8	SEC		;
$C6D9	SBC $048D	;
$C6DC	STA $048D	;
$C6DF	INC $0489	;
$C6E2	BNE $C6EE	;
$C6E4	LDA $91,X	;
$C6E6	STA $99  	;
$C6E8	LDA $0448,X	;
$C6EB	STA $0450	;
$C6EE	RTS		;


function_C6EF:
$C6EF	LDA $87  	;
$C6F1	BPL $C703	;
$C6F3	JSR $C641	;
$C6F6	JSR $C60A	;
$C6F9	LDA $048B	;
$C6FC	BPL $C6FF	;
$C6FE	RTS		; (within an if statement) 
$C6FF	LDA #$40	;
$C701	STA $F3  	;
$C703	JSR $C6BA	;
$C706	JSR $C64E	;
$C709	JMP $C5B9	;


function_C70C:
$C70C	LDX #$01	;
$C70E	LDA #$ff	;
$C710	STA $0530,X	;
$C713	STA $0544,X	;
$C716	DEX		;
$C717	BPL $C70E	;
$C719	JSR $C770	;

function_C71C:
$C71C	LDX $3C  	;
$C71E	CPX #$18	;
$C720	BCC $C724	;
$C722	LDX #$18	;
$C724	LDA $C73E,X	;
$C727	STA $BA  	;
$C729	LDA $C757,X	;
$C72C	STA $B8  	;
$C72E	LDA #$f0	;
$C730	STA $02E0	;
$C733	STA $02E4	;
$C736	STA $02E8	;
$C739	LDA #$03	;
$C73B	JMP $C84C	;

$C73E	BRK		;
$C73F	BRK		;
$C740	BRK		;
$C741	BRK		;
$C742	BRK		;
$C743	BRK		;
$C744	BRK		;
$C745	BRK		;
$C746	BRK		;
$C747	BRK		;
$C748	ORA ($01,X)	;
$C74A	ORA ($01,X)	;
$C74C	ORA ($01,X)	;
$C74E	.byte $02	; INVALID OPCODE !!!
$C74F	ORA ($01,X)	;
$C751	ORA ($01,X)	;
$C753	ORA ($01,X)	;
$C755	ORA ($01,X)	;
$C757	.byte $0f	; INVALID OPCODE !!!
$C758	.byte $0f	; INVALID OPCODE !!!
$C759	.byte $0c	; INVALID OPCODE !!!
$C75A	.byte $0c	; INVALID OPCODE !!!
$C75B	.byte $0c	; INVALID OPCODE !!!
$C75C	.byte $0c	; INVALID OPCODE !!!
$C75D	ASL A		;
$C75E	ASL A		;
$C75F	ASL A		;
$C760	ASL A		;
$C761	.byte $0c	; INVALID OPCODE !!!
$C762	.byte $0c	; INVALID OPCODE !!!
$C763	ASL A		;
$C764	ASL A		;
$C765	ASL A		;
$C766	PHP		;
$C767	ASL A		;
$C768	ASL A		;
$C769	PHP		;
$C76A	PHP		;
$C76B	PHP		;
$C76C	PHP		;
$C76D	PHP		;
$C76E	PHP		;
$C76F	ORA $A5  	;
; wait, a function began on the previous byte...

function_C770:
$C770	LDA $A3  	;
$C772	BPL $C777	;
$C774	STA $A4  	;
$C776	RTS		; (within an if statement) 
$C777	JSR $F1A9	;
$C77A	CMP $A3  	;
$C77C	BCC $C774	;
$C77E	BEQ $C774	;
$C780	CLC		;
$C781	SBC $A3  	;
$C783	JMP $C77A	;


function_C786:
$C786	LDA $19  	;
$C788	AND #$7f	;
$C78A	BEQ $C78D	;
$C78C	RTS		; (within an if statement) 
$C78D	DEC $B8  	;
$C78F	BNE $C78C	;
$C791	LDX #$00	;
$C793	LDA $0530,X	;
$C796	BMI $C7A3	;
$C798	INX		;
$C799	LDA $0530,X	;
$C79C	BMI $C7A3	;
$C79E	LDA #$01	;
$C7A0	STA $B8  	;
$C7A2	RTS		; (within an if statement) 
$C7A3	LDY $A4  	;
$C7A5	STY $A5  	;
$C7A7	BPL $C7AA	;
$C7A9	RTS		; (within an if statement) 
$C7AA	LDA #$80	;
$C7AC	STA $04B8,X	;
$C7AF	STA $04CC,X	;
$C7B2	LDA #$00	;
$C7B4	STA $0530,X	;
$C7B7	LDA $00B2,Y	;
$C7BA	STA $0490,X	;
$C7BD	LDA $00B5,Y	;
$C7C0	STA $04A4,X	;
$C7C3	LDY $BA  	;
$C7C5	JSR $F1A9	;
$C7C8	AND #$1f	;
$C7CA	ADC $C895,Y	;
$C7CD	STA $0508,X	;
$C7D0	LDA $C8A1,Y	;
$C7D3	STA $051C,X	;
$C7D6	LDA $C89B,Y	;
$C7D9	STA $04E0,X	;
$C7DC	LDA $C8A7,Y	;
$C7DF	STA $04F4,X	;
$C7E2	JSR $F1A9	;
$C7E5	AND #$03	;
$C7E7	STA $0544,X	;
$C7EA	TAY		;
$C7EB	LDA $C88D,Y	;
$C7EE	CLC		;
$C7EF	ADC $0490,X	;
$C7F2	STA $0490,X	;
$C7F5	LDA $C891,Y	;
$C7F8	CLC		;
$C7F9	ADC $04A4,X	;
$C7FC	STA $04A4,X	;
$C7FF	LDA $C885,Y	;
$C802	BEQ $C807	;
$C804	JSR $CA33	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to C807 was coincidental data)

function_C806:
$C806	DEX		;
$C807	LDA $C889,Y	;
$C80A	BEQ $C80F	;
$C80C	JSR $CA4B	;
$C80F	LDA $BA  	;
$C811	CMP #$05	;
$C813	BCS $C817	;
$C815	INC $BA  	;
$C817	LDA #$06	;
$C819	SEC		;
$C81A	SBC $BA  	;
$C81C	STA $B8  	;
$C81E	LDA $F0  	;
$C820	ORA #$04	;
$C822	STA $F0  	;
$C824	JMP $C770	;


function_C827:
$C827	LDA $B8  	;
$C829	CMP #$01	;
$C82B	BNE $C880	;
$C82D	LDA $0530	;
$C830	BMI $C83C	;
$C832	LDA $0531	;
$C835	BMI $C83C	;
$C837	LDA #$02	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to C880 was coincidental data)

function_C838:
$C838	.byte $02	; INVALID OPCODE !!!
$C839	STA $B8  	;
$C83B	RTS		;

$C83C	LDA $19  	;
$C83E	AND #$7f	;
$C840	CMP #$40	;
$C842	BCC $C880	;
$C844	BNE $C84C	;
$C846	LDA $F1  	;
$C848	ORA #$08	;
$C84A	STA $F1  	;

function_C84C:
$C84C	AND #$03	;
$C84E	TAX		;
$C84F	LDA $C881,X	;
$C852	STA $5A  	;
$C854	LDX $A4  	;
$C856	BMI $C880	;
$C858	LDA #$23	;
$C85A	STA $57  	;
$C85C	LDA $A6,X	;
$C85E	STA $58  	;
$C860	LDA #$01	;
$C862	STA $59  	;
$C864	JSR $C879	;
$C867	LDA $A9,X	;
$C869	STA $58  	;
$C86B	JSR $C879	;
$C86E	LDA $AC,X	;
$C870	STA $58  	;
$C872	JSR $C879	;
$C875	LDA $AF,X	;
$C877	STA $58  	;

function_C879:
$C879	LDA #$57	;
$C87B	LDY #$00	;
$C87D	JMP $C127	; (in an if statement) 
$C880	RTS		;

$C881	EOR $FF,X	;
$C883	BRK		;
$C884	.byte $ff	; INVALID OPCODE !!!
$C885	BRK		;
$C886	BRK		;
$C887	.byte $ff	; INVALID OPCODE !!!
$C888	.byte $ff	; INVALID OPCODE !!!
$C889	.byte $ff	; INVALID OPCODE !!!
$C88A	BRK		;
$C88B	BRK		;
$C88C	.byte $ff	; INVALID OPCODE !!!
$C88D	BPL $C89F	;
$C88F	BEQ $C881	;
$C891	DEC $2222,X	;
$C894	DEC $7060,X	; saved-to-battery RAM 
$C897	.byte $80	; INVALID OPCODE !!!
$C898	BCC $C83A	;
$C89A	BCS $C89C	;
$C89C	BRK		;
$C89D	BRK		;
$C89E	BRK		;
$C89F	BRK		;
$C8A0	BRK		;
$C8A1	CPY #$f0	;
$C8A3	JSR $8050	;
$C8A6	BCS $C8A8	;
$C8A8	BRK		;
$C8A9	ORA ($01,X)	;
$C8AB	ORA ($01,X)	;

function_C8AD:
$C8AD	LDX #$01	;
$C8AF	LDA $0530,X	;
$C8B2	BPL $C8B7	;
$C8B4	JMP $C9A5	; (in an if statement) 
$C8B7	LDA $0544,X	;
$C8BA	BMI $C937	;
$C8BC	TAY		;
$C8BD	TXA		;
$C8BE	PHA		;
$C8BF	LDX $A5  	;
$C8C1	LDA $B2,X	;
$C8C3	ADC $C9DB,Y	;
$C8C6	STA $02E3	;
$C8C9	STA $02E7	;
$C8CC	STA $02EB	;
$C8CF	LDA $B5,X	;
$C8D1	ADC $C9EB,Y	;
$C8D4	STA $02E0	;
$C8D7	ADC $C9FB,Y	;
$C8DA	STA $02E4	;
$C8DD	ADC $C9FB,Y	;
$C8E0	STA $02E8	;
$C8E3	TYA		;
$C8E4	AND #$03	;
$C8E6	TAX		;
$C8E7	TYA		;
$C8E8	LSR A		;
$C8E9	LSR A		;
$C8EA	TAY		;
$C8EB	LDA $19  	;
$C8ED	LSR A		;
$C8EE	LSR A		;
$C8EF	BCS $C8F5	;
$C8F1	TYA		;
$C8F2	ADC #$05	;
$C8F4	TAY		;
$C8F5	LDA $CA0B,Y	;
$C8F8	STA $02E1	;
$C8FB	LDA $CA15,Y	;
$C8FE	STA $02E5	;
$C901	LDA $CA1F,Y	;
$C904	STA $02E9	;
$C907	LDA $CA29,X	;
$C90A	STA $02E2	;
$C90D	STA $02E6	;
$C910	STA $02EA	;
$C913	PLA		;
$C914	TAX		;
$C915	LDA $19  	;
$C917	AND #$07	;
$C919	BNE $C92D	;
$C91B	LDA $0544,X	;
$C91E	CLC		;
$C91F	ADC #$04	;
$C921	STA $0544,X	;
$C924	CMP #$14	;
$C926	BCC $C92D	;
$C928	LDA #$ff	;
$C92A	STA $0544,X	;
$C92D	LDA $0544,X	;
$C930	CMP #$10	;
$C932	BCS $C937	;
$C934	JMP $C9A5	; (in an if statement) 
$C937	JSR $C9AC	;
$C93A	LDA $0490,X	;
$C93D	CMP #$02	;
$C93F	BCS $C944	;
$C941	JSR $CA2D	;
$C944	LDA $0490,X	;
$C947	CMP #$f7	;
$C949	BCC $C94E	;
$C94B	JSR $CA2D	;
$C94E	LDA $04A4,X	;
$C951	CMP #$02	;
$C953	BCS $C958	;
$C955	JSR $CA45	;
$C958	LDA $04A4,X	;
$C95B	CMP #$e0	;
$C95D	BCC $C96C	;
$C95F	LDA #$ff	;
$C961	STA $0530,X	;
$C964	LDA #$f0	;
$C966	STA $04A4,X	;
$C969	JMP $C9A5	; (in an if statement) 
$C96C	JSR $CA5D	;
$C96F	JSR $CB12	;
$C972	LDY $0530,X	;
$C975	INY		;
$C976	TYA		;
$C977	AND #$07	;
$C979	STA $0530,X	;
$C97C	LDY $0530,X	;
$C97F	LDA $C9D3,Y	;
$C982	STA $12  	;
$C984	TXA		;
$C985	ASL A		;
$C986	ASL A		;
$C987	CLC		;
$C988	TAY		;
$C989	LDA $04A4,X	;
$C98C	CMP #$d0	;
$C98E	STA $0200,Y	;
$C991	LDA $0490,X	;
$C994	STA $0203,Y	;
$C997	LDA $12  	;
$C999	STA $0201,Y	;
$C99C	LDA #$00	;
$C99E	BCC $C9A2	;
$C9A0	LDA #$20	;
$C9A2	STA $0202,Y	;
$C9A5	DEX		;
$C9A6	BMI $C9AB	;
$C9A8	JMP $C8AF	; (in an if statement) 
$C9AB	RTS		;


function_C9AC:
$C9AC	LDA $0508,X	;
$C9AF	CLC		;
$C9B0	ADC $04B8,X	;
$C9B3	STA $04B8,X	;
$C9B6	LDA $04E0,X	;
$C9B9	ADC $0490,X	;
$C9BC	STA $0490,X	;
$C9BF	LDA $051C,X	;
$C9C2	CLC		;
$C9C3	ADC $04CC,X	;
$C9C6	STA $04CC,X	;
$C9C9	LDA $04F4,X	;
$C9CC	ADC $04A4,X	;
$C9CF	STA $04A4,X	;
$C9D2	RTS		;

$C9D3	STA $9F9E,X	;
$C9D6	.byte $9e	; INVALID OPCODE !!!
$C9D7	STA $A1A0,X	;
$C9DA	LDY #$08	;
$C9DC	PHP		;
$C9DD	BEQ $C9CF	;
$C9DF	PHP		;
$C9E0	PHP		;
$C9E1	BEQ $C9D3	;
$C9E3	PHP		;
$C9E4	PHP		;
$C9E5	BEQ $C9D7	;
$C9E7	PHP		;
$C9E8	PHP		;
$C9E9	BEQ $C9DB	;
$C9EB	INC $0A0A	;
$C9EE	INC $0AEE	;
$C9F1	ASL A		;
$C9F2	INC $0AEE	;
$C9F5	ASL A		;
$C9F6	INC $0AEE	;
$C9F9	ASL A		;
$C9FA	INC $08F8	;
$C9FD	PHP		;
$C9FE	SED		;
$C9FF	SED		;
$CA00	PHP		;
$CA01	PHP		;
$CA02	SED		;
$CA03	SED		;
$CA04	PHP		;
$CA05	PHP		;
$CA06	SED		;
$CA07	SED		;
$CA08	PHP		;
$CA09	PHP		;
$CA0A	SED		;
$CA0B	STA ($93),Y	;
$CA0D	.byte $97	; INVALID OPCODE !!!
$CA0E	.byte $97	; INVALID OPCODE !!!
$CA0F	.byte $fc	; INVALID OPCODE !!!
$CA10	.byte $92	; INVALID OPCODE !!!
$CA11	STA $9A,X	;
$CA13	TXS		;
$CA14	.byte $fc	; INVALID OPCODE !!!
$CA15	.byte $fc	; INVALID OPCODE !!!
$CA16	STY $98,X	;
$CA18	TYA		;
$CA19	.byte $fc	; INVALID OPCODE !!!
$CA1A	.byte $fc	; INVALID OPCODE !!!
$CA1B	STX $9B,Y 	;
$CA1D	.byte $9b	; INVALID OPCODE !!!
$CA1E	.byte $fc	; INVALID OPCODE !!!
$CA1F	.byte $fc	; INVALID OPCODE !!!
$CA20	.byte $fc	; INVALID OPCODE !!!
$CA21	STA $FC99,Y	;
$CA24	.byte $fc	; INVALID OPCODE !!!
$CA25	.byte $fc	; INVALID OPCODE !!!
$CA26	.byte $9c	; INVALID OPCODE !!!
$CA27	.byte $9c	; INVALID OPCODE !!!
$CA28	.byte $fc	; INVALID OPCODE !!!
$CA29	CPY #$40	;
$CA2B	BRK		;
$CA2C	.byte $80	; INVALID OPCODE !!!

function_CA2D:
$CA2D	LDA $F3  	;
$CA2F	ORA #$80	;
$CA31	STA $F3  	;

function_CA33:
$CA33	LDA #$00	;
$CA35	SEC		;
$CA36	SBC $0508,X	;
$CA39	STA $0508,X	;
$CA3C	LDA #$00	;
$CA3E	SBC $04E0,X	;
$CA41	STA $04E0,X	;
$CA44	RTS		;


function_CA45:
$CA45	LDA $F3  	;
$CA47	ORA #$80	;
$CA49	STA $F3  	;

function_CA4B:
$CA4B	LDA #$00	;
$CA4D	SEC		;
$CA4E	SBC $051C,X	;
$CA51	STA $051C,X	;
$CA54	LDA #$00	;
$CA56	SBC $04F4,X	;
$CA59	STA $04F4,X	;
$CA5C	RTS		;


function_CA5D:
$CA5D	LDY $CD  	;
$CA5F	LDA #$00	;
$CA61	STA $CC  	;
$CA63	LDA ($27),Y	;
$CA65	SEC		;
$CA66	SBC #$08	;
$CA68	CMP $04A4,X	;
$CA6B	BCS $CAD3	;
$CA6D	ADC #$03	;
$CA6F	CMP $04A4,X	;
$CA72	BCC $CA78	;
$CA74	LDA #$01	;
$CA76	BNE $CA88	;
$CA78	LDA ($29),Y	;
$CA7A	CMP $04A4,X	;
$CA7D	BCC $CAD3	;
$CA7F	SBC #$03	;
$CA81	CMP $04A4,X	;
$CA84	BCS $CAA3	;
$CA86	LDA #$02	;
$CA88	STA $CC  	;
$CA8A	LDA ($23),Y	;
$CA8C	CMP #$10	;
$CA8E	BEQ $CA98	;
$CA90	SEC		;
$CA91	SBC #$04	;
$CA93	CMP $0490,X	;
$CA96	BCS $CA9F	;
$CA98	LDA ($25),Y	;
$CA9A	CMP $0490,X	;
$CA9D	BCS $CAA3	;
$CA9F	LDA #$00	;
$CAA1	STA $CC  	;
$CAA3	LDA ($23),Y	;
$CAA5	CMP #$10	;
$CAA7	BEQ $CABE	;
$CAA9	SEC		;
$CAAA	SBC #$08	;
$CAAC	CMP $0490,X	;
$CAAF	BCS $CAD3	;
$CAB1	ADC #$03	;
$CAB3	CMP $0490,X	;
$CAB6	BCC $CABE	;
$CAB8	LDA $CC  	;
$CABA	ORA #$04	;
$CABC	BNE $CAD1	;
$CABE	LDA ($25),Y	;
$CAC0	CMP #$ff	;
$CAC2	BEQ $CAD3	;
$CAC4	CMP $0490,X	;
$CAC7	BCC $CAD3	;
$CAC9	SBC #$03	;
$CACB	BCS $CAD3	;
$CACD	LDA $CC  	;
$CACF	ORA #$08	;
$CAD1	STA $CC  	;
$CAD3	LDA $CC  	;
$CAD5	BNE $CADE	;
$CAD7	DEY		;
$CAD8	BMI $CADD	;
$CADA	JMP $CA5F	; (in an if statement) 
$CADD	RTS		; (within an if statement) 
$CADE	LSR $CC  	;
$CAE0	BCC $CAEA	;
$CAE2	LDA $04F4,X	;
$CAE5	BMI $CAEA	;
$CAE7	JSR $CA45	;
$CAEA	LSR $CC  	;
$CAEC	BCC $CAF6	;
$CAEE	LDA $04F4,X	;
$CAF1	BPL $CAF6	;
$CAF3	JSR $CA45	;
$CAF6	LSR $CC  	;
$CAF8	BCC $CB02	;
$CAFA	LDA $04E0,X	;
$CAFD	BMI $CB02	;
$CAFF	JSR $CA2D	;
$CB02	LSR $CC  	;
$CB04	BCC $CB0E	;
$CB06	LDA $04E0,X	;
$CB09	BPL $CB0E	;
$CB0B	JSR $CA2D	;
$CB0E	JMP $CAD7	;

$CB11	RTS		;


function_CB12:
$CB12	LDY #$01	;
$CB14	LDA $0088,Y	;
$CB17	BMI $CB66	;
$CB19	BEQ $CB66	;
$CB1B	LDA $00BD,Y	;
$CB1E	BNE $CB66	;
$CB20	LDA $0490,X	;
$CB23	SEC		;
$CB24	SBC $0091,Y	;
$CB27	JSR $F084	;
$CB2A	CMP #$08	;
$CB2C	BCS $CB66	;
$CB2E	LDA $04A4,X	;
$CB31	SEC		;
$CB32	SBC $009A,Y	;
$CB35	SEC		;
$CB36	SBC #$08	;
$CB38	JSR $F084	;
$CB3B	CMP #$0c	;
$CB3D	BCS $CB66	;
$CB3F	LDA #$00	;
$CB41	STA $0088,Y	;
$CB44	LDA #$01	;
$CB46	STA $007F,Y	;
$CB49	STA $00C1,Y	;
$CB4C	LDA #$0b	;
$CB4E	STA $0451,Y	;
$CB51	LDA #$20	;
$CB53	STA $045A,Y	;
$CB56	LDA $F0  	;
$CB58	ORA #$80	;
$CB5A	STA $F0  	;
$CB5C	LDA #$f0	;
$CB5E	STA $04A4,X	;
$CB61	LDA #$ff	;
$CB63	STA $0530,X	;
$CB66	DEY		;
$CB67	BPL $CB14	;
$CB69	RTS		;


function_CB6A:
$CB6A	LDX $05D1	;
$CB6D	BMI $CB9D	;
$CB6F	JSR $CB9E	;
$CB72	LDA $0604,X	;
$CB75	BEQ $CB9A	;
$CB77	TXA		;
$CB78	EOR $19  	;
$CB7A	AND #$01	;
$CB7C	BNE $CB9A	;
$CB7E	LDY $05FA,X	;
$CB81	INY		;
$CB82	TYA		;
$CB83	AND #$03	;
$CB85	STA $05FA,X	;
$CB88	JSR $CCC1	;
$CB8B	LDA $05FA,X	;
$CB8E	CMP #$01	;
$CB90	BNE $CB9A	;
$CB92	DEC $060E,X	;
$CB95	BNE $CB9A	;
$CB97	DEC $0604,X	;
$CB9A	DEX		;
$CB9B	BPL $CB6F	;
$CB9D	RTS		;


function_CB9E:
$CB9E	LDY #$07	;
$CBA0	LDA $0604,X	;
$CBA3	BNE $CBA8	;
$CBA5	JMP $CC30	; (in an if statement) 
$CBA8	LDA $0088,Y	;
$CBAB	BMI $CC25	;
$CBAD	BEQ $CC25	;
$CBAF	CPY #$02	;
$CBB1	BCC $CBB7	;
$CBB3	CMP #$01	;
$CBB5	BEQ $CC25	;
$CBB7	LDA $0091,Y	;
$CBBA	CLC		;
$CBBB	ADC #$08	;
$CBBD	SEC		;
$CBBE	SBC $05D2,X	;
$CBC1	STA $12  	;
$CBC3	JSR $F084	;
$CBC6	CMP #$12	;
$CBC8	BCS $CC25	;
$CBCA	LDA $009A,Y	;
$CBCD	CLC		;
$CBCE	ADC #$0c	;
$CBD0	SEC		;
$CBD1	SBC $05DC,X	;
$CBD4	STA $13  	;
$CBD6	JSR $F084	;
$CBD9	CMP #$12	;
$CBDB	BCS $CC25	;
$CBDD	LDA $12  	;
$CBDF	BMI $CBF2	;
$CBE1	CMP #$03	;
$CBE3	BCC $CC01	;
$CBE5	LDA #$02	;
$CBE7	STA $041B,Y	;
$CBEA	JSR $CC29	;
$CBED	JSR $EBB1	;
$CBF0	BNE $CC01	;
$CBF2	CMP #$fd	;
$CBF4	BCS $CC01	;
$CBF6	LDA #$fe	;
$CBF8	STA $041B,Y	;
$CBFB	JSR $EBB1	;
$CBFE	JSR $CC29	;
$CC01	LDA $13  	;
$CC03	BMI $CC16	;
$CC05	CMP #$03	;
$CC07	BCC $CC25	;
$CC09	LDA #$02	;
$CC0B	STA $042D,Y	;
$CC0E	JSR $EBA8	;
$CC11	JSR $CC29	;
$CC14	BNE $CC25	;
$CC16	CMP #$fd	;
$CC18	BCS $CC25	;
$CC1A	LDA #$fe	;
$CC1C	STA $042D,Y	;
$CC1F	JSR $EBA8	;
$CC22	JSR $CC29	;
$CC25	DEY		;
$CC26	BPL $CBA8	;
$CC28	RTS		;


function_CC29:
$CC29	LDA $F1  	;
$CC2B	ORA #$02	;
$CC2D	STA $F1  	;
$CC2F	RTS		;

$CC30	LDA $0088,Y	;
$CC33	BMI $CCAE	;
$CC35	BEQ $CCAE	;
$CC37	CPY #$02	;
$CC39	BCC $CC69	;
$CC3B	LDA $05FA,X	;
$CC3E	CMP #$03	;
$CC40	BNE $CC69	;
$CC42	LDA $05D2,X	;
$CC45	SEC		;
$CC46	SBC #$0a	;
$CC48	CMP $0091,Y	;
$CC4B	BCS $CC69	;
$CC4D	ADC #$04	;
$CC4F	CMP $0091,Y	;
$CC52	BCC $CC69	;
$CC54	LDA $05DC,X	;
$CC57	SEC		;
$CC58	SBC #$1c	;
$CC5A	CMP $009A,Y	;
$CC5D	BCS $CC69	;
$CC5F	ADC #$04	;
$CC61	CMP $009A,Y	;
$CC64	BCC $CC69	;
$CC66	JSR $CCB5	;
$CC69	LDA $0091,Y	;
$CC6C	CLC		;
$CC6D	ADC #$08	;
$CC6F	SEC		;
$CC70	SBC $05D2,X	;
$CC73	JSR $F084	;
$CC76	STA $12  	;
$CC78	LDA $009A,Y	;
$CC7B	CLC		;
$CC7C	ADC #$0c	;
$CC7E	SEC		;
$CC7F	SBC $05DC,X	;
$CC82	JSR $F084	;
$CC85	STA $13  	;
$CC87	LDA $05FA,X	;
$CC8A	CMP #$03	;
$CC8C	BEQ $CC98	;
$CC8E	LDA $12  	;
$CC90	PHA		;
$CC91	LDA $13  	;
$CC93	STA $12  	;
$CC95	PLA		;
$CC96	STA $13  	;
$CC98	LDA $12  	;
$CC9A	CMP #$14	;
$CC9C	BCS $CCAE	;
$CC9E	LDA $13  	;
$CCA0	CMP #$0b	;
$CCA2	BCS $CCAE	;
$CCA4	LDA #$01	;
$CCA6	STA $0604,X	;
$CCA9	LDA #$32	;
$CCAB	STA $060E,X	;
$CCAE	DEY		;
$CCAF	BMI $CCB4	;
$CCB1	JMP $CC30	; (in an if statement) 
$CCB4	RTS		;


function_CCB5:
$CCB5	TXA		;
$CCB6	PHA		;
$CCB7	TYA		;
$CCB8	TAX		;
$CCB9	INC $CB  	;
$CCBB	JSR $E979	;
$CCBE	PLA		;
$CCBF	TAX		;
$CCC0	RTS		;


function_CCC1:
$CCC1	LDA $05F0,X	;
$CCC4	STA $57  	;
$CCC6	LDA $05E6,X	;
$CCC9	STA $58  	;
$CCCB	LDA #$03	;
$CCCD	STA $59  	;
$CCCF	LDY $05FA,X	;
$CCD2	LDA $CD1C,Y	;
$CCD5	STA $5A  	;
$CCD7	LDA $CD20,Y	;
$CCDA	STA $5B  	;
$CCDC	LDA $CD24,Y	;
$CCDF	STA $5C  	;
$CCE1	JSR $CD05	;
$CCE4	LDA $CD28,Y	;
$CCE7	STA $5A  	;
$CCE9	LDA $CD2C,Y	;
$CCEC	STA $5B  	;
$CCEE	LDA $CD30,Y	;
$CCF1	STA $5C  	;
$CCF3	JSR $CD05	;
$CCF6	LDA $CD34,Y	;
$CCF9	STA $5A  	;
$CCFB	LDA $CD38,Y	;
$CCFE	STA $5B  	;
$CD00	LDA $CD3C,Y	;
$CD03	STA $5C  	;

function_CD05:
$CD05	TYA		;
$CD06	PHA		;
$CD07	LDA #$57	;
$CD09	LDY #$00	;
$CD0B	JSR $C127	;
$CD0E	PLA		;
$CD0F	TAY		;
$CD10	LDA $58  	;
$CD12	CLC		;
$CD13	ADC #$20	;
$CD15	STA $58  	;
$CD17	BCC $CD1B	;
$CD19	INC $57  	;
$CD1B	RTS		;

$CD1C	LDA ($24,X)	;
$CD1E	BIT $24  	;
$CD20	LDX #$9e	;
$CD22	.byte $ab	; INVALID OPCODE !!!
$CD23	BIT $24  	;
$CD25	BIT $AC  	;
$CD27	BIT $A3  	;
$CD29	BIT $AD  	;
$CD2B	TAY		;
$CD2C	LDY $9F  	;
$CD2E	LDX $A5A9	;
$CD31	BIT $AF  	;
$CD33	TAX		;
$CD34	BIT $24  	;
$CD36	BCS $CD5C	;
$CD38	LDX $A0  	;
$CD3A	LDA ($24),Y	;
$CD3C	.byte $a7	; INVALID OPCODE !!!
$CD3D	BIT $24  	;
$CD3F	BIT $A2  	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to CD5C was coincidental data)

function_CD40:
$CD40	LDX #$09	;
$CD42	LDA #$ff	;
$CD44	STA $055D,X	;
$CD47	LDA #$f0	;
$CD49	STA $057B,X	;
$CD4C	DEX		;
$CD4D	BPL $CD42	;
$CD4F	RTS		;


function_CD50:
$CD50	DEC $05CC	;
$CD53	BEQ $CD56	;
$CD55	RTS		; (within an if statement) 
$CD56	LDA $1B  	;
$CD58	AND #$3f	;
$CD5A	ADC #$28	;
$CD5C	STA $05CC	;
$CD5F	LDX #$09	;
$CD61	LDA $055D,X	;
$CD64	BMI $CD6A	;
$CD66	DEX		;
$CD67	BPL $CD61	;
$CD69	RTS		; (within an if statement) 
$CD6A	LDA #$00	;
$CD6C	STA $055D,X	;
$CD6F	STA $0599,X	;
$CD72	STA $058F,X	;
$CD75	LDA #$80	;
$CD77	STA $0571,X	;
$CD7A	STA $0585,X	;
$CD7D	LDA #$d0	;
$CD7F	STA $057B,X	;
$CD82	JSR $F1A9	;
$CD85	AND #$03	;
$CD87	TAY		;
$CD88	LDA $CEA4,Y	;
$CD8B	STA $0567,X	;
$CD8E	LDY #$00	;
$CD90	LDA $1B  	;
$CD92	STA $05B7,X	;
$CD95	BPL $CD98	;
$CD97	DEY		;
$CD98	TYA		;
$CD99	STA $05C1,X	;
$CD9C	DEC $05CB	;
$CD9F	RTS		;


function_CDA0:
$CDA0	LDX #$09	;
$CDA2	LDA $055D,X	;
$CDA5	BMI $CE18	;
$CDA7	BEQ $CDF2	;
$CDA9	LDA $0599,X	;
$CDAC	STA $12  	;
$CDAE	LDA $058F,X	;
$CDB1	STA $13  	;
$CDB3	JSR $F19C	;
$CDB6	LDA $05B7,X	;
$CDB9	CLC		;
$CDBA	ADC $12  	;
$CDBC	STA $05B7,X	;
$CDBF	STA $12  	;
$CDC1	LDA $05C1,X	;
$CDC4	ADC $13  	;
$CDC6	STA $05C1,X	;
$CDC9	STA $13  	;
$CDCB	JSR $F19C	;
$CDCE	LDA $0599,X	;
$CDD1	SEC		;
$CDD2	SBC $12  	;
$CDD4	STA $0599,X	;
$CDD7	LDA $058F,X	;
$CDDA	SBC $13  	;
$CDDC	STA $058F,X	;
$CDDF	LDA $0571,X	;
$CDE2	CLC		;
$CDE3	ADC $0599,X	;
$CDE6	STA $0571,X	;
$CDE9	LDA $0567,X	;
$CDEC	ADC $058F,X	;
$CDEF	STA $0567,X	;
$CDF2	LDA $0585,X	;
$CDF5	SEC		;
$CDF6	SBC $055A	;
$CDF9	STA $0585,X	;
$CDFC	BCS $CE01	;
$CDFE	DEC $057B,X	;
$CE01	LDA $057B,X	;
$CE04	CMP #$f0	;
$CE06	BEQ $CE13	;
$CE08	CMP #$a8	;
$CE0A	BCS $CE18	;
$CE0C	LDA #$01	;
$CE0E	STA $055D,X	;
$CE11	BNE $CE18	;
$CE13	LDA #$ff	;
$CE15	STA $055D,X	;
$CE18	JSR $CE25	;
$CE1B	JSR $CEC4	;
$CE1E	DEX		;
$CE1F	BMI $CE24	;
$CE21	JMP $CDA2	; (in an if statement) 
$CE24	RTS		;


function_CE25:
$CE25	LDY $055D,X	;
$CE28	INY		;
$CE29	LDA $CEA8,Y	;
$CE2C	STA $13  	;
$CE2E	TXA		;
$CE2F	STA $12  	;
$CE31	ASL A		;
$CE32	ADC $12  	;
$CE34	ASL A		;
$CE35	ASL A		;
$CE36	TAY		;
$CE37	LDA $057B,X	;
$CE3A	STA $0250,Y	;
$CE3D	STA $0254,Y	;
$CE40	CLC		;
$CE41	ADC #$08	;
$CE43	STA $0258,Y	;
$CE46	LDA $0567,X	;
$CE49	STA $0253,Y	;
$CE4C	CLC		;
$CE4D	ADC #$04	;
$CE4F	STA $025B,Y	;
$CE52	CLC		;
$CE53	ADC #$04	;
$CE55	STA $0257,Y	;
$CE58	LDA $13  	;
$CE5A	STA $0252,Y	;
$CE5D	STA $0256,Y	;
$CE60	STA $025A,Y	;
$CE63	LDA $055D,X	;
$CE66	BMI $CE8F	;
$CE68	LDA #$a8	;
$CE6A	STA $0251,Y	;
$CE6D	LDA #$a9	;
$CE6F	STA $0255,Y	;
$CE72	LDA $19  	;
$CE74	LSR A		;
$CE75	LSR A		;
$CE76	LSR A		;
$CE77	LSR A		;
$CE78	AND #$07	;
$CE7A	STX $13  	;
$CE7C	TAX		;
$CE7D	LDA $CEAB,X	;
$CE80	STA $0259,Y	;
$CE83	LDA $025A,Y	;
$CE86	EOR $CEB3,X	;
$CE89	STA $025A,Y	;
$CE8C	LDX $13  	;
$CE8E	RTS		; (within an if statement) 
$CE8F	LDA #$f0	;
$CE91	STA $057B,X	;
$CE94	LDA #$ac	;
$CE96	STA $0251,Y	;
$CE99	LDA #$ad	;
$CE9B	STA $0255,Y	;
$CE9E	LDA #$fc	;
$CEA0	STA $0259,Y	;
$CEA3	RTS		;

$CEA4	JSR $A050	;
$CEA7	BNE $CEAB	;
$CEA9	.byte $22	; INVALID OPCODE !!!
$CEAA	.byte $02	; INVALID OPCODE !!!
$CEAB	TAX		;
$CEAC	.byte $ab	; INVALID OPCODE !!!
$CEAD	.byte $ab	; INVALID OPCODE !!!
$CEAE	TAX		;
$CEAF	TAX		;
$CEB0	.byte $ab	; INVALID OPCODE !!!
$CEB1	.byte $ab	; INVALID OPCODE !!!
$CEB2	TAX		;
$CEB3	BRK		;
$CEB4	BRK		;
$CEB5	RTI		;

$CEB6	RTI		;

$CEB7	RTI		;

$CEB8	RTI		;

$CEB9	BRK		;
$CEBA	BRK		;
$CEBB	.byte $fc	; INVALID OPCODE !!!
$CEBC	.byte $fc	; INVALID OPCODE !!!
$CEBD	.byte $df	; INVALID OPCODE !!!
$CEBE	.byte $fc	; INVALID OPCODE !!!
$CEBF	.byte $fc	; INVALID OPCODE !!!
$CEC0	CPX #$e2	;
$CEC2	SBC ($FC,X)	;

function_CEC4:
$CEC4	LDY #$01	;
$CEC6	LDA $0088,Y	;
$CEC9	BMI $CF05	;
$CECB	BEQ $CF05	;
$CECD	LDA $055D,X	;
$CED0	BMI $CF08	;
$CED2	LDA $009A,Y	;
$CED5	CMP #$c0	;
$CED7	BCS $CF05	;
$CED9	SEC		;
$CEDA	SBC $057B,X	;
$CEDD	JSR $F084	;
$CEE0	CMP #$18	;
$CEE2	BCS $CF05	;
$CEE4	LDA $0091,Y	;
$CEE7	SEC		;
$CEE8	SBC $0567,X	;
$CEEB	JSR $F084	;
$CEEE	CMP #$10	;
$CEF0	BCS $CF05	;
$CEF2	LDA #$ff	;
$CEF4	STA $055D,X	;
$CEF7	LDA $05CD,Y	;
$CEFA	CLC		;
$CEFB	ADC #$01	;
$CEFD	STA $05CD,Y	;
$CF00	LDA #$02	;
$CF02	STA $F0  	;
$CF04	RTS		; (within an if statement) 
$CF05	DEY		;
$CF06	BPL $CEC6	;
$CF08	RTS		;

$CF09	LDA #$20	;
$CF0B	STA $F2  	;
$CF0D	JSR $D0D8	;
$CF10	JSR $CD40	;
$CF13	LDX $40  	;
$CF15	LDA $41,X	;
$CF17	BMI $CF1C	;
$CF19	JSR $F3A6	;
$CF1C	DEX		;
$CF1D	BPL $CF15	;
$CF1F	LDX #$00	;
$CF21	STX $BD  	;
$CF23	STX $BE  	;
$CF25	LDA #$14	;
$CF27	STA $05CB	;
$CF2A	JSR $F466	;
$CF2D	INC $4C  	;
$CF2F	JSR $D8D3	;
$CF32	JSR $E687	;
$CF35	LDA $05CB	;
$CF38	BEQ $CF3D	;
$CF3A	JSR $CD50	;
$CF3D	JSR $CDA0	;
$CF40	LDA $05CB	;
$CF43	BNE $CF2A	;
$CF45	LDX #$09	;
$CF47	LDA $055D,X	;
$CF4A	BPL $CF2A	;
$CF4C	DEX		;
$CF4D	BPL $CF47	;
$CF4F	LDA $19  	;
$CF51	BNE $CF2A	;
$CF53	JSR $D23C	;
$CF56	LDX #$02	;
$CF58	STX $46  	;
$CF5A	JSR $F454	;
$CF5D	LDA #$21	;
$CF5F	LDY #$d1	;
$CF61	JSR $C127	;
$CF64	LDA #$50	;
$CF66	LDY #$d1	;
$CF68	JSR $C127	;
$CF6B	LDA #$5b	;
$CF6D	LDY #$d1	;
$CF6F	JSR $C127	;
$CF72	LDX $40  	;
$CF74	LDA #$20	;
$CF76	STA $91,X	;
$CF78	LDA $D194,X	;
$CF7B	STA $9A,X	;
$CF7D	LDA #$03	;
$CF7F	STA $7F,X	;
$CF81	LDA #$01	;
$CF83	STA $0448,X	;
$CF86	JSR $F3A6	;
$CF89	JSR $E39A	;
$CF8C	DEX		;
$CF8D	BPL $CF74	;
$CF8F	LDA #$44	;
$CF91	STA $0567	;
$CF94	STA $0568	;
$CF97	LDA #$54	;
$CF99	STA $057B	;
$CF9C	LDA #$74	;
$CF9E	STA $057C	;
$CFA1	LDA #$01	;
$CFA3	STA $055D	;
$CFA6	STA $055E	;
$CFA9	LDX $40  	;
$CFAB	JSR $CE25	;
$CFAE	DEX		;
$CFAF	BPL $CFAB	;
$CFB1	JSR $F452	;
$CFB4	LDA #$2b	;
$CFB6	STA $57  	;
$CFB8	LDA #$24	;
$CFBA	STA $58  	;
$CFBC	STA $59  	;
$CFBE	LDA #$0c	;
$CFC0	STA $54  	;
$CFC2	LDA #$0b	;
$CFC4	STA $55  	;
$CFC6	LDA #$05	;
$CFC8	STA $56  	;
$CFCA	LDA $05CD	;
$CFCD	JSR $D1BF	;
$CFD0	LDA $40  	;
$CFD2	BEQ $CFDE	;
$CFD4	LDA #$0f	;
$CFD6	STA $55  	;
$CFD8	LDA $05CE	;
$CFDB	JSR $D1BF	;
$CFDE	JSR $F452	;
$CFE1	LDA $0559	;
$CFE4	STA $57  	;
$CFE6	LDA #$00	;
$CFE8	STA $58  	;
$CFEA	STA $59  	;
$CFEC	LDA #$08	;
$CFEE	STA $54  	;
$CFF0	LDA #$0b	;
$CFF2	STA $55  	;
$CFF4	LDA #$03	;
$CFF6	STA $56  	;
$CFF8	LDA $0559	;
$CFFB	JSR $C10F	;
$CFFE	LDA $40  	;
$D000	BEQ $D009	;
$D002	LDA #$0f	;
$D004	STA $55  	;
$D006	JSR $C10F	;
$D009	LDA #$ff	;
$D00B	STA $055D	;
$D00E	STA $055E	;
$D011	LDX $40  	;
$D013	JSR $CE25	;
$D016	DEX		;
$D017	BPL $D013	;
$D019	LDA #$02	;
$D01B	STA $F0  	;
$D01D	LDX #$02	;
$D01F	JSR $F454	;
$D022	LDX $40  	;
$D024	JSR $CE25	;
$D027	DEX		;
$D028	BPL $D024	;
$D02A	JSR $D196	;
$D02D	JSR $F452	;
$D030	LDA #$01	;
$D032	STA $F0  	;
$D034	JSR $D117	;
$D037	BNE $D05E	;
$D039	LDA #$66	;
$D03B	LDY #$d1	;
$D03D	JSR $C127	;
$D040	JSR $F45B	;
$D043	LDX #$1a	;
$D045	LDA $D17A,X	;
$D048	STA $57,X	;
$D04A	DEX		;
$D04B	BPL $D045	;
$D04D	LDA $055B	;
$D050	STA $68  	;
$D052	LDA $055C	;
$D055	STA $69  	;
$D057	JSR $C123	;
$D05A	LDA #$10	;
$D05C	STA $F2  	;
$D05E	LDX #$78	;
$D060	JSR $F454	;
$D063	JSR $D196	;
$D066	LDA #$00	;
$D068	STA $3E  	;
$D06A	LDX #$04	;
$D06C	JSR $D209	;
$D06F	JSR $C123	;
$D072	LDA $40  	;
$D074	BEQ $D084	;
$D076	INC $3E  	;
$D078	LDX #$12	;
$D07A	JSR $D209	;
$D07D	LDA #$65	;
$D07F	LDY #$00	;
$D081	JSR $C127	;
$D084	LDA #$01	;
$D086	STA $F1  	;
$D088	LDX #$02	;
$D08A	JSR $F454	;
$D08D	LDA $5D  	;
$D08F	CMP #$24	;
$D091	BNE $D066	;
$D093	LDA $40  	;
$D095	BEQ $D09E	;
$D097	LDA $006B	;
$D09A	CMP #$24	;
$D09C	BNE $D066	;
$D09E	LDX #$0a	;
$D0A0	JSR $F454	;
$D0A3	JSR $D117	;
$D0A6	BNE $D0C4	;
$D0A8	LDA $055B	;
$D0AB	STA $47  	;
$D0AD	LDA $055C	;
$D0B0	STA $48  	;
$D0B2	LDA $40  	;
$D0B4	STA $3E  	;
$D0B6	JSR $D6D2	;
$D0B9	DEC $3E  	;
$D0BB	BPL $D0B6	;
$D0BD	LDA #$01	;
$D0BF	STA $F1  	;
$D0C1	JSR $F452	;
$D0C4	LDA #$00	;
$D0C6	STA $47  	;
$D0C8	STA $48  	;
$D0CA	LDX #$01	;
$D0CC	LDA $41,X	;
$D0CE	BPL $D0D2	;
$D0D0	STA $88,X	;
$D0D2	DEX		;
$D0D3	BPL $D0CC	;
$D0D5	JMP $F349	;


function_D0D8:
$D0D8	LDX $0558	;
$D0DB	LDA $D103,X	;
$D0DE	STA $0559	;
$D0E1	LDA $D108,X	;
$D0E4	STA $055A	;
$D0E7	LDA $D10D,X	;
$D0EA	STA $055B	;
$D0ED	LDA $D112,X	;
$D0F0	STA $055C	;
$D0F3	CPX #$04	;
$D0F5	BCS $D0FA	;
$D0F7	INC $0558	;
$D0FA	LDA #$00	;
$D0FC	STA $05CD	;
$D0FF	STA $05CE	;
$D102	RTS		;

$D103	.byte $03	; INVALID OPCODE !!!
$D104	ORA $07  	;
$D106	.byte $07	; INVALID OPCODE !!!
$D107	.byte $07	; INVALID OPCODE !!!
$D108	.byte $80	; INVALID OPCODE !!!
$D109	BCC $D0A3	;
$D10B	LDY #$a8	;
$D10D	ORA ($01,X)	;
$D10F	.byte $02	; INVALID OPCODE !!!
$D110	.byte $02	; INVALID OPCODE !!!
$D111	.byte $03	; INVALID OPCODE !!!
$D112	BRK		;
$D113	ORA $00  	;
$D115	ORA $00  	;

function_D117:
$D117	LDA $05CD	;
$D11A	CLC		;
$D11B	ADC $05CE	;
$D11E	CMP #$14	;
$D120	RTS		;

$D121	.byte $3f	; INVALID OPCODE !!!
$D122	BRK		;
$D123	BPL $D134	;
$D125	BMI $D157	;
$D127	BMI $D138	;
$D129	BMI $D152	;
$D12B	ORA $0F,X	;
$D12D	BMI $D131	;
$D12F	AND ($0F,X)	;
$D131	ASL $16,X	;
$D133	ASL $21,X	;
$D135	.byte $73	; INVALID OPCODE !!!
$D136	.byte $0b	; INVALID OPCODE !!!
$D137	AND #$00	;
$D139	BRK		;
$D13A	BRK		;
$D13B	BRK		;
$D13C	BRK		;
$D13D	BIT $19  	;
$D13F	ORA $261C,X	;
$D142	AND ($F3,X)	;
$D144	.byte $0b	; INVALID OPCODE !!!
$D145	AND #$00	;
$D147	BRK		;
$D148	BRK		;
$D149	BRK		;
$D14A	BRK		;
$D14B	BIT $19  	;
$D14D	ORA $261C,X	;
$D150	.byte $23	; INVALID OPCODE !!!
$D151	INX		;
$D152	PHP		;
$D153	.byte $ff	; INVALID OPCODE !!!
$D154	.byte $ff	; INVALID OPCODE !!!
$D155	.byte $ff	; INVALID OPCODE !!!
$D156	.byte $ff	; INVALID OPCODE !!!
$D157	.byte $ff	; INVALID OPCODE !!!
$D158	.byte $ff	; INVALID OPCODE !!!
$D159	.byte $ff	; INVALID OPCODE !!!
$D15A	.byte $ff	; INVALID OPCODE !!!
$D15B	.byte $23	; INVALID OPCODE !!!
$D15C	CPY #$08	;
$D15E	RTI		;

$D15F	BVC $D1B1	;
$D161	BVC $D1B3	;
$D163	BCC $D105	;
$D165	LDY #$22	;
$D167	DEY		;
$D168	ORA ($19),Y	;
$D16A	BIT $0E  	;
$D16C	BIT $1B  	;
$D16E	BIT $0F  	;
$D170	BIT $0E  	;
$D172	BIT $0C  	;
$D174	BIT $1D  	;
$D176	BIT $2C  	;
$D178	BIT $222C	;
$D17B	DEC $17  	;
$D17D	.byte $1c	; INVALID OPCODE !!!
$D17E	ASL $0E19,X	;
$D181	.byte $1b	; INVALID OPCODE !!!
$D182	BIT $0B  	;
$D184	CLC		;
$D185	.byte $17	; INVALID OPCODE !!!
$D186	ASL $241C,X	;
$D189	BIT $24  	;
$D18B	ORA ($00,X)	;
$D18D	BRK		;
$D18E	BRK		;
$D18F	BRK		;
$D190	ORA $1C1D,Y	;
$D193	BIT $7050	; saved-to-battery RAM 

function_D196:
$D196	LDX #$1c	;
$D198	LDA $D134,X	;
$D19B	STA $57,X	;
$D19D	DEX		;
$D19E	BPL $D198	;
$D1A0	LDX #$04	;
$D1A2	LDY $05CD	;
$D1A5	JSR $D1D2	;
$D1A8	LDX #$12	;
$D1AA	LDY $05CE	;
$D1AD	JSR $D1D2	;
$D1B0	JSR $C123	;
$D1B3	LDA $40  	;
$D1B5	BNE $D1B8	;
$D1B7	RTS		; (within an if statement) 
$D1B8	LDA #$65	;
$D1BA	LDY #$00	;
$D1BC	JMP $C127	;


function_D1BF:
$D1BF	LDY #$00	;
$D1C1	CMP #$0a	;
$D1C3	BCC $D1CB	;
$D1C5	INY		;
$D1C6	SBC #$0a	;
$D1C8	JMP $D1C1	; (in an if statement) 
$D1CB	STY $5A  	;
$D1CD	STA $5B  	;
$D1CF	JMP $C10F	;


function_D1D2:
$D1D2	DEY		;
$D1D3	BMI $D1F4	;
$D1D5	LDA $0559	;
$D1D8	CLC		;
$D1D9	ADC $59,X	;
$D1DB	CMP #$0a	;
$D1DD	BCC $D1E3	;
$D1DF	SBC #$0a	;
$D1E1	INC $58,X	;
$D1E3	STA $59,X	;
$D1E5	LDA $58,X	;
$D1E7	CMP #$0a	;
$D1E9	BCC $D1F1	;
$D1EB	SBC #$0a	;
$D1ED	INC $57,X	;
$D1EF	STA $58,X	;
$D1F1	JMP $D1D2	; (in an if statement) 
$D1F4	LDY #$00	;
$D1F6	LDA $57,X	;
$D1F8	BEQ $D1FE	;
$D1FA	CMP #$24	;
$D1FC	BNE $D208	;
$D1FE	LDA #$24	;
$D200	STA $57,X	;
$D202	INX		;
$D203	INY		;
$D204	CPY #$04	;
$D206	BNE $D1F6	;
$D208	RTS		;


function_D209:
$D209	LDA $59,X	;
$D20B	CMP #$24	;
$D20D	BEQ $D239	;
$D20F	TAY		;
$D210	BNE $D22E	;
$D212	LDA $58,X	;
$D214	CMP #$24	;
$D216	BEQ $D239	;
$D218	LDA $58,X	;
$D21A	BNE $D228	;
$D21C	LDA $57,X	;
$D21E	CMP #$24	;
$D220	BEQ $D239	;
$D222	LDA #$0a	;
$D224	STA $58,X	;
$D226	DEC $57,X	;
$D228	LDA #$0a	;
$D22A	STA $59,X	;
$D22C	DEC $58,X	;
$D22E	DEC $59,X	;
$D230	TXA		;
$D231	PHA		;
$D232	LDA #$0a	;
$D234	JSR $D6D4	;
$D237	PLA		;
$D238	TAX		;
$D239	JMP $D1F4	;


function_D23C:
$D23C	JSR $C100	;
$D23F	JSR $C0F0	;
$D242	LDA #$20	;
$D244	STA $2006	;VRAM address select
$D247	LDA #$00	;
$D249	STA $2006	;VRAM address select
$D24C	JSR $D26B	;
$D24F	JSR $D26B	;
$D252	JSR $C0FA	;
$D255	JSR $C10B	;
$D258	LDX #$3f	;
$D25A	LDY #$00	;
$D25C	STY $4C  	;
$D25E	LDA #$f0	;
$D260	STA $0200,Y	;
$D263	INY		;
$D264	INY		;
$D265	INY		;
$D266	INY		;
$D267	DEX		;
$D268	BPL $D25E	;
$D26A	RTS		;


function_D26B:
$D26B	LDX #$f0	;
$D26D	LDA #$24	;
$D26F	STA $2007	;VRAM data
$D272	STA $2007	;VRAM data
$D275	STA $2007	;VRAM data
$D278	STA $2007	;VRAM data
$D27B	DEX		;
$D27C	BNE $D26F	;
$D27E	LDX #$40	;
$D280	LDA #$00	;
$D282	STA $2007	;VRAM data
$D285	DEX		;
$D286	BNE $D282	;
$D288	RTS		;


function_D289:
$D289	JSR $C100	;
$D28C	JSR $C0F0	;
$D28F	LDA $16  	;
$D291	BEQ $D296	;
$D293	JMP $D568	; (in an if statement) 
$D296	LDY $3B  	;
$D298	LDA $DB20,Y	;
$D29B	STA $1D  	;
$D29D	LDA $DB30,Y	;
$D2A0	STA $1E  	;
$D2A2	JSR $D48D	;
$D2A5	LDX #$00	;
$D2A7	JSR $D4DB	;
$D2AA	CMP #$ff	;
$D2AC	BEQ $D318	;
$D2AE	STA $54  	;
$D2B0	JSR $D4DB	;
$D2B3	STA $55  	;
$D2B5	LDY #$03	;
$D2B7	JSR $D4F1	;
$D2BA	LDA #$04	;
$D2BC	STA $12  	;
$D2BE	LDA $D489,Y	;
$D2C1	STA $2007	;VRAM data
$D2C4	CLC		;
$D2C5	ADC #$04	;
$D2C7	DEC $12  	;
$D2C9	BNE $D2C1	;
$D2CB	INC $55  	;
$D2CD	DEY		;
$D2CE	BPL $D2B7	;
$D2D0	LDA $55  	;
$D2D2	SEC		;
$D2D3	SBC #$04	;
$D2D5	STA $55  	;
$D2D7	JSR $D512	;
$D2DA	STA $A6,X	;
$D2DC	INC $54  	;
$D2DE	INC $54  	;
$D2E0	JSR $D512	;
$D2E3	STA $A9,X	;
$D2E5	INC $55  	;
$D2E7	INC $55  	;
$D2E9	JSR $D512	;
$D2EC	STA $AF,X	;
$D2EE	DEC $54  	;
$D2F0	DEC $54  	;
$D2F2	JSR $D512	;
$D2F5	STA $AC,X	;
$D2F7	STX $A4  	;
$D2F9	LDA #$03	;
$D2FB	JSR $C84C	;
$D2FE	JSR $C172	;
$D301	LDX $A4  	;
$D303	LDA $54  	;
$D305	ASL A		;
$D306	ASL A		;
$D307	ASL A		;
$D308	CLC		;
$D309	ADC #$10	;
$D30B	STA $B2,X	;
$D30D	LDA $55  	;
$D30F	ASL A		;
$D310	ASL A		;
$D311	ASL A		;
$D312	STA $B5,X	;
$D314	INX		;
$D315	JMP $D2A7	; (in an if statement) 
$D318	DEX		;
$D319	STX $A3  	;
$D31B	LDX #$00	;
$D31D	JSR $D4DB	;
$D320	CMP #$ff	;
$D322	BEQ $D374	;
$D324	STA $54  	;
$D326	JSR $D4DB	;
$D329	STA $55  	;
$D32B	JSR $D4DB	;
$D32E	STA $05FA,X	;
$D331	LDA $54  	;
$D333	ASL A		;
$D334	ASL A		;
$D335	ASL A		;
$D336	ADC #$0c	;
$D338	STA $05D2,X	;
$D33B	LDA $55  	;
$D33D	ASL A		;
$D33E	ASL A		;
$D33F	ASL A		;
$D340	ADC #$0c	;
$D342	STA $05DC,X	;
$D345	LDA #$00	;
$D347	STA $0604,X	;
$D34A	JSR $D4F1	;
$D34D	STA $05E6,X	;
$D350	LDA $13  	;
$D352	STA $05F0,X	;
$D355	JSR $D562	;
$D358	JSR $D532	;
$D35B	INC $54  	;
$D35D	INC $54  	;
$D35F	JSR $D532	;
$D362	INC $55  	;
$D364	INC $55  	;
$D366	JSR $D532	;
$D369	DEC $54  	;
$D36B	DEC $54  	;
$D36D	JSR $D532	;
$D370	INX		;
$D371	JMP $D31D	; (in an if statement) 
$D374	DEX		;
$D375	STX $05D1	;
$D378	JSR $D4DB	;
$D37B	STA $1F  	;
$D37D	JSR $D4DB	;
$D380	STA $20  	;
$D382	LDY #$00	;
$D384	LDA ($1F),Y	;
$D386	TAX		;
$D387	DEX		;
$D388	BPL $D38F	;
$D38A	INC $C8  	;
$D38C	JMP $D3B0	; (in an if statement) 
$D38F	INY		;
$D390	LDA ($1F),Y	;
$D392	INY		;
$D393	STA $93,X	;
$D395	LDA ($1F),Y	;
$D397	INY		;
$D398	STA $9C,X	;
$D39A	LDA ($1F),Y	;
$D39C	INY		;
$D39D	STA $0453,X	;
$D3A0	LDA #$02	;
$D3A2	STA $81,X	;
$D3A4	LDA #$01	;
$D3A6	STA $8A,X	;
$D3A8	LDA $C6  	;
$D3AA	STA $0441,X	;
$D3AD	DEX		;
$D3AE	BPL $D390	;
$D3B0	JSR $D4DB	;
$D3B3	STA $CD  	;
$D3B5	JSR $D4DB	;
$D3B8	STA $23  	;
$D3BA	JSR $D4DB	;
$D3BD	TAY		;
$D3BE	STA $24  	;
$D3C0	LDA $23  	;
$D3C2	JSR $D482	;
$D3C5	STA $25  	;
$D3C7	STY $26  	;
$D3C9	JSR $D482	;
$D3CC	STA $27  	;
$D3CE	STY $28  	;
$D3D0	JSR $D482	;
$D3D3	STA $29  	;
$D3D5	STY $2A  	;
$D3D7	JSR $D5CF	;
$D3DA	JSR $D3E3	;
$D3DD	JSR $C0FA	;
$D3E0	JMP $C10B	;


function_D3E3:
$D3E3	LDX #$22	;
$D3E5	LDA $D42D,X	;
$D3E8	STA $57,X	;
$D3EA	DEX		;
$D3EB	BPL $D3E5	;
$D3ED	LDA $C8  	;
$D3EF	BNE $D406	;
$D3F1	LDA $3B  	;
$D3F3	AND #$0c	;
$D3F5	ORA #$03	;
$D3F7	TAY		;
$D3F8	LDX #$03	;
$D3FA	LDA $D450,Y	;
$D3FD	STA $5A,X	;
$D3FF	DEY		;
$D400	DEX		;
$D401	BPL $D3FA	;
$D403	JMP $C123	; (in an if statement) 
$D406	LDX $0558	;
$D409	LDA $D460,X	;
$D40C	STA $1D  	;
$D40E	LDA $D465,X	;
$D411	STA $1E  	;
$D413	LDX #$03	;
$D415	LDY #$07	;
$D417	LDA ($1D),Y	;
$D419	STA $72,X	;
$D41B	DEY		;
$D41C	DEX		;
$D41D	BPL $D417	;
$D41F	LDA $16  	;
$D421	BNE $D403	;
$D423	LDA ($1D),Y	;
$D425	STA $005A,Y	;
$D428	DEY		;
$D429	BPL $D423	;
$D42B	BMI $D403	;
$D42D	.byte $3f	; INVALID OPCODE !!!
$D42E	BRK		;
$D42F	JSR $2A0F	;
$D432	ORA #$07	;
$D434	.byte $0f	; INVALID OPCODE !!!
$D435	BMI $D45E	;
$D437	ORA $0F,X	;
$D439	BMI $D43D	;
$D43B	AND ($0F,X)	;
$D43D	BMI $D43F	;
$D43F	BPL $D450	;
$D441	ASL $12,X	;
$D443	.byte $37	; INVALID OPCODE !!!
$D444	.byte $0f	; INVALID OPCODE !!!
$D445	.byte $12	; INVALID OPCODE !!!
$D446	ASL $37,X	;
$D448	.byte $0f	; INVALID OPCODE !!!
$D449	.byte $17	; INVALID OPCODE !!!
$D44A	ORA ($35),Y	;
$D44C	.byte $0f	; INVALID OPCODE !!!
$D44D	.byte $17	; INVALID OPCODE !!!
$D44E	ORA ($2B),Y	;
$D450	.byte $0f	; INVALID OPCODE !!!
$D451	ROL A		;
$D452	ORA #$07	;
$D454	.byte $0f	; INVALID OPCODE !!!
$D455	ROL $06  	;
$D457	.byte $07	; INVALID OPCODE !!!
$D458	.byte $0f	; INVALID OPCODE !!!
$D459	.byte $1b	; INVALID OPCODE !!!
$D45A	.byte $0c	; INVALID OPCODE !!!
$D45B	.byte $07	; INVALID OPCODE !!!
$D45C	.byte $0f	; INVALID OPCODE !!!
$D45D	BIT $0601	;
$D460	ROR A		;
$D461	.byte $72	; INVALID OPCODE !!!
$D462	.byte $7a	; INVALID OPCODE !!!
$D463	.byte $7a	; INVALID OPCODE !!!
$D464	.byte $7a	; INVALID OPCODE !!!
$D465	.byte $d4	; INVALID OPCODE !!!
$D466	.byte $d4	; INVALID OPCODE !!!
$D467	.byte $d4	; INVALID OPCODE !!!
$D468	.byte $d4	; INVALID OPCODE !!!
$D469	.byte $d4	; INVALID OPCODE !!!
$D46A	.byte $0f	; INVALID OPCODE !!!
$D46B	.byte $02	; INVALID OPCODE !!!
$D46C	PHP		;
$D46D	ASL $0F  	;
$D46F	.byte $2b	; INVALID OPCODE !!!
$D470	BMI $D484	;
$D472	.byte $0f	; INVALID OPCODE !!!
$D473	.byte $07	; INVALID OPCODE !!!
$D474	ASL A		;
$D475	ORA $260F,Y	;
$D478	BMI $D4A5	;
$D47A	.byte $0f	; INVALID OPCODE !!!
$D47B	.byte $07	; INVALID OPCODE !!!
$D47C	.byte $0c	; INVALID OPCODE !!!
$D47D	.byte $1c	; INVALID OPCODE !!!
$D47E	.byte $0f	; INVALID OPCODE !!!
$D47F	ORA $30,X	;
$D481	ROL $38  	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to D4A5 was coincidental data)

function_D482:
$D482	SEC		;
$D483	ADC $CD  	;
$D485	BCC $D488	;
$D487	INY		;
$D488	RTS		;

$D489	.byte $7f	; INVALID OPCODE !!!
$D48A	ROR $7C7D,X	; saved-to-battery RAM 

function_D48D:
$D48D	JSR $D4DB	;
$D490	STA $1F  	;
$D492	JSR $D4DB	;
$D495	STA $20  	;
$D497	TAX		;
$D498	BEQ $D4DA	;
$D49A	JSR $D4E6	;
$D49D	TAX		;
$D49E	BEQ $D48D	;
$D4A0	AND #$7f	;
$D4A2	STA $2006	;VRAM address select
$D4A5	JSR $D4E6	;
$D4A8	STA $2006	;VRAM address select
$D4AB	JSR $D4E6	;
$D4AE	STA $12  	;
$D4B0	TXA		;
$D4B1	AND #$80	;
$D4B3	LSR A		;
$D4B4	LSR A		;
$D4B5	LSR A		;
$D4B6	LSR A		;
$D4B7	LSR A		;
$D4B8	ORA $00  	;
$D4BA	STA $2000	;PPU setup #1
$D4BD	TXA		;
$D4BE	AND #$40	;
$D4C0	BNE $D4CE	;
$D4C2	JSR $D4E6	;
$D4C5	STA $2007	;VRAM data
$D4C8	DEC $12  	;
$D4CA	BNE $D4C2	;
$D4CC	BEQ $D49A	;
$D4CE	JSR $D4E6	;
$D4D1	STA $2007	;VRAM data
$D4D4	DEC $12  	;
$D4D6	BNE $D4D1	;
$D4D8	BEQ $D49A	;
$D4DA	RTS		;


function_D4DB:
$D4DB	LDY #$00	;
$D4DD	LDA ($1D),Y	;
$D4DF	INC $1D  	;
$D4E1	BNE $D4E5	;
$D4E3	INC $1E  	;
$D4E5	RTS		;


function_D4E6:
$D4E6	LDY #$00	;
$D4E8	LDA ($1F),Y	;
$D4EA	INC $1F  	;
$D4EC	BNE $D4F0	;
$D4EE	INC $20  	;
$D4F0	RTS		;


function_D4F1:
$D4F1	LDA $55  	;
$D4F3	STA $12  	;
$D4F5	LDA #$00	;
$D4F7	ASL $12  	;
$D4F9	ASL $12  	;
$D4FB	ASL $12  	;
$D4FD	ASL $12  	;
$D4FF	ROL A		;
$D500	ASL $12  	;
$D502	ROL A		;
$D503	ORA #$20	;
$D505	STA $2006	;VRAM address select
$D508	STA $13  	;
$D50A	LDA $12  	;
$D50C	ORA $54  	;
$D50E	STA $2006	;VRAM address select
$D511	RTS		;


function_D512:
$D512	LDA $55  	;
$D514	AND #$fc	;
$D516	ASL A		;
$D517	STA $12  	;
$D519	LDA $54  	;
$D51B	LSR A		;
$D51C	LSR A		;
$D51D	ORA $12  	;
$D51F	ORA #$c0	;
$D521	PHA		;
$D522	LDA $55  	;
$D524	AND #$02	;
$D526	STA $12  	;
$D528	LDA $54  	;
$D52A	AND #$02	;
$D52C	LSR A		;
$D52D	ORA $12  	;
$D52F	TAY		;
$D530	PLA		;
$D531	RTS		;


function_D532:
$D532	LDA #$23	;
$D534	STA $2006	;VRAM address select
$D537	JSR $D512	;
$D53A	STA $2006	;VRAM address select
$D53D	LDA $2007	;VRAM data
$D540	LDA $2007	;VRAM data
$D543	AND $D55A,Y	;
$D546	ORA $D55E,Y	;
$D549	PHA		;
$D54A	LDA #$23	;
$D54C	STA $2006	;VRAM address select
$D54F	JSR $D512	;
$D552	STA $2006	;VRAM address select
$D555	PLA		;
$D556	STA $2007	;VRAM data
$D559	RTS		;

$D55A	.byte $fc	; INVALID OPCODE !!!
$D55B	.byte $f3	; INVALID OPCODE !!!
$D55C	.byte $cf	; INVALID OPCODE !!!
$D55D	.byte $3f	; INVALID OPCODE !!!
$D55E	ORA ($04,X)	;
$D560	BPL $D5A2	;

function_D562:
$D562	JSR $CCC1	;
$D565	JMP $C172	; (in an if statement) 
$D568	LDA #$c0	;
$D56A	LDY #$23	;
$D56C	JSR $D589	;
$D56F	LDA #$c0	;
$D571	LDY #$27	;
$D573	JSR $D589	;
$D576	LDY #$23	;
$D578	LDA #$60	;
$D57A	JSR $D5AE	;
$D57D	LDY #$27	;
$D57F	LDA #$60	;
$D581	JSR $D5AE	;
$D584	INC $C8  	;
$D586	JMP $D3D7	; (in an if statement) 

function_D589:
$D589	STY $2006	;VRAM address select
$D58C	STA $2006	;VRAM address select
$D58F	LDX #$00	;
$D591	LDA $DCA4,X	;
$D594	STA $2007	;VRAM data
$D597	INX		;
$D598	CPX #$08	;
$D59A	BNE $D591	;
$D59C	LDA #$00	;
$D59E	LDX #$28	;
$D5A0	JSR $D5A7	;
$D5A3	LDA #$aa	;
$D5A5	LDX #$10	;

function_D5A7:
$D5A7	STA $2007	;VRAM data
$D5AA	DEX		;
$D5AB	BNE $D5A7	;
$D5AD	RTS		;


function_D5AE:
$D5AE	STY $2006	;VRAM address select
$D5B1	STA $2006	;VRAM address select
$D5B4	LDX #$20	;
$D5B6	LDA #$58	;
$D5B8	JSR $D5BF	;
$D5BB	LDX #$40	;
$D5BD	LDA #$5c	;

function_D5BF:
$D5BF	STA $12  	;
$D5C1	TXA		;
$D5C2	AND #$03	;
$D5C4	EOR #$03	;
$D5C6	ORA $12  	;
$D5C8	STA $2007	;VRAM data
$D5CB	DEX		;
$D5CC	BNE $D5C1	;
$D5CE	RTS		;


function_D5CF:
$D5CF	LDX #$00	;
$D5D1	JSR $D647	;
$D5D4	JSR $D5E7	;
$D5D7	LDA $51  	;
$D5D9	ORA #$04	;
$D5DB	STA $51  	;
$D5DD	JSR $D5E7	;
$D5E0	INX		;
$D5E1	INX		;
$D5E2	CPX #$80	;
$D5E4	BNE $D5D1	;
$D5E6	RTS		;


function_D5E7:
$D5E7	LDA $51  	;
$D5E9	STA $2006	;VRAM address select
$D5EC	LDA $50  	;
$D5EE	STA $2006	;VRAM address select
$D5F1	LDA $2007	;VRAM data
$D5F4	LDA $2007	;VRAM data
$D5F7	CMP #$24	;
$D5F9	BNE $D602	;
$D5FB	TXA		;
$D5FC	AND #$03	;
$D5FE	TAY		;
$D5FF	JMP $D631	; (in an if statement) 
$D602	RTS		;


function_D603:
$D603	LDA $4C  	;
$D605	BEQ $D630	;
$D607	DEC $4C  	;
$D609	LDA $4F  	;
$D60B	CLC		;
$D60C	ADC #$02	;
$D60E	AND #$3f	;
$D610	STA $4F  	;
$D612	TAX		;
$D613	JSR $D647	;
$D616	LDA $51  	;
$D618	STA $2006	;VRAM address select
$D61B	LDA $50  	;
$D61D	STA $2006	;VRAM address select
$D620	LDA $2007	;VRAM data
$D623	LDA $2007	;VRAM data
$D626	LDY #$03	;
$D628	CMP $D642,Y	;
$D62B	BEQ $D631	;
$D62D	DEY		;
$D62E	BPL $D628	;
$D630	RTS		;

$D631	LDA $51  	;
$D633	STA $2006	;VRAM address select
$D636	LDA $50  	;
$D638	STA $2006	;VRAM address select
$D63B	LDA $D643,Y	;
$D63E	STA $2007	;VRAM data
$D641	RTS		;

$D642	BIT $ED  	;
$D644	INC $24EF	;

function_D647:
$D647	LDA $D652,X	;
$D64A	STA $50  	;
$D64C	LDA $D653,X	;
$D64F	STA $51  	;
$D651	RTS		;

$D652	.byte $63	; INVALID OPCODE !!!
$D653	AND ($A5,X)	;
$D655	AND ($CB,X)	;
$D657	JSR $20B7	;
$D65A	ADC $9B21,X	;
$D65D	.byte $22	; INVALID OPCODE !!!
$D65E	.byte $f2	; INVALID OPCODE !!!
$D65F	JSR $2249	;
$D662	ADC $0B21	;
$D665	.byte $22	; INVALID OPCODE !!!
$D666	.byte $92	; INVALID OPCODE !!!
$D667	.byte $22	; INVALID OPCODE !!!
$D668	STA $21,X	;
$D66A	.byte $1c	; INVALID OPCODE !!!
$D66B	AND ($48,X)	;
$D66D	AND ($E0,X)	;
$D66F	JSR $230B	;
$D672	DEC $D020	;
$D675	AND ($06,X)	;
$D677	AND ($19,X)	;
$D679	AND ($30,X)	;
$D67B	.byte $22	; INVALID OPCODE !!!
$D67C	TXA		;
$D67D	.byte $22	; INVALID OPCODE !!!
$D67E	DEY		;
$D67F	.byte $22	; INVALID OPCODE !!!
$D680	LDY $20  	;
$D682	.byte $42	; INVALID OPCODE !!!
$D683	.byte $22	; INVALID OPCODE !!!
$D684	PLA		;
$D685	AND ($3C,X)	;
$D687	.byte $22	; INVALID OPCODE !!!
$D688	ROL $21,X	;
$D68A	DEX		;
$D68B	AND ($BC,X)	;
$D68D	JSR $2196	;
$D690	JMP $3521	;

$D693	.byte $22	; INVALID OPCODE !!!
$D694	.byte $ef	; INVALID OPCODE !!!
$D695	JSR $2268	;
$D698	LDX $20  	;
$D69A	.byte $bb	; INVALID OPCODE !!!
$D69B	AND ($7A,X)	;
$D69D	AND ($EA,X)	;
$D69F	JSR $21F1	;
$D6A2	.byte $c2	; INVALID OPCODE !!!
$D6A3	JSR $2177	;
$D6A6	.byte $54	; INVALID OPCODE !!!
$D6A7	AND ($BA,X)	;
$D6A9	JSR $22C5	;
$D6AC	LDX $FA20,Y	;
$D6AF	JSR $21AE	;
$D6B2	LSR $21  	;
$D6B4	TXS		;
$D6B5	AND ($D2,X)	;
$D6B7	JSR $213D	;
$D6BA	.byte $2b	; INVALID OPCODE !!!
$D6BB	.byte $22	; INVALID OPCODE !!!
$D6BC	BCS $D6DE	;
$D6BE	LDX $21,Y 	;
$D6C0	LDY $B320	;
$D6C3	JSR $20DB	;
$D6C6	INC $20,X	;
$D6C8	BIT $E721	;
$D6CB	JSR $2162	;
$D6CE	CPX $21  	;
$D6D0	LSR $A921	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to D6DE was coincidental data)

function_D6D2:
$D6D2	LDA #$00	;

function_D6D4:
$D6D4	STA $43  	;
$D6D6	LDA $3A  	;
$D6D8	BEQ $D6DB	;
$D6DA	RTS		; (within an if statement) 
$D6DB	LDX $3E  	;
$D6DD	CPX #$02	;
$D6DF	BCS $D6DA	;
$D6E1	LDA $41,X	;
$D6E3	BMI $D6DA	;
$D6E5	LDY #$64	;
$D6E7	JSR $D772	;
$D6EA	CLC		;
$D6EB	ADC $48  	;
$D6ED	STA $45  	;
$D6EF	LDY #$0a	;
$D6F1	JSR $D772	;
$D6F4	STA $44  	;
$D6F6	LDX $3F  	;
$D6F8	LDA $D76F,X	;
$D6FB	STA $21  	;
$D6FD	LDA #$06	;
$D6FF	STA $22  	;
$D701	LDA $3E  	;
$D703	ASL A		;
$D704	ASL A		;
$D705	ORA $3E  	;
$D707	TAX		;
$D708	CLC		;
$D709	LDA $03,X	;
$D70B	ADC $43  	;
$D70D	JSR $D785	;
$D710	STA $03,X	;
$D712	LDA $04,X	;
$D714	ADC $44  	;
$D716	JSR $D785	;
$D719	STA $04,X	;
$D71B	LDA $05,X	;
$D71D	ADC $45  	;
$D71F	JSR $D785	;
$D722	STA $05,X	;
$D724	LDA $06,X	;
$D726	ADC $47  	;
$D728	JSR $D785	;
$D72B	STA $06,X	;
$D72D	LDA $07,X	;
$D72F	ADC #$00	;
$D731	JSR $D785	;
$D734	STA $07,X	;
$D736	INX		;
$D737	INX		;
$D738	INX		;
$D739	INX		;
$D73A	LDY #$04	;
$D73C	LDA $03,X	;
$D73E	CMP ($21),Y	;
$D740	BCC $D75B	;
$D742	BNE $D748	;
$D744	DEX		;
$D745	DEY		;
$D746	BPL $D73C	;
$D748	LDY #$00	;
$D74A	LDA $3E  	;
$D74C	ASL A		;
$D74D	ASL A		;
$D74E	ORA $3E  	;
$D750	TAX		;
$D751	LDA $03,X	;
$D753	STA ($21),Y	;
$D755	INX		;
$D756	INY		;
$D757	CPY #$05	;
$D759	BNE $D751	;
$D75B	LDY #$04	;
$D75D	LDA ($21),Y	;
$D75F	STA $000D,Y	;
$D762	DEY		;
$D763	BPL $D75D	;
$D765	INC $46  	;
$D767	LDA $16  	;
$D769	BEQ $D76E	;
$D76B	JSR $C52F	;
$D76E	RTS		;

$D76F	AND #$2e	;
$D771	.byte $33	; INVALID OPCODE !!!

function_D772:
$D772	STY $12  	;
$D774	LDX #$ff	;
$D776	LDA $43  	;
$D778	SEC		;
$D779	SBC $12  	;
$D77B	INX		;
$D77C	BCS $D778	;
$D77E	CLC		;
$D77F	ADC $12  	;
$D781	STA $43  	;
$D783	TXA		;
$D784	RTS		;


function_D785:
$D785	CMP #$0a	;
$D787	BCS $D78A	;
$D789	RTS		; (within an if statement) 
$D78A	SEC		;
$D78B	SBC #$0a	;
$D78D	RTS		;


function_D78E:
$D78E	LDY $46  	;
$D790	DEY		;
$D791	BEQ $D796	;
$D793	BPL $D7FB	;
$D795	RTS		; (within an if statement) 
$D796	LDA #$20	;
$D798	STA $2006	;VRAM address select
$D79B	LDA #$43	;
$D79D	STA $2006	;VRAM address select
$D7A0	LDA #$8e	;
$D7A2	STA $2007	;VRAM data
$D7A5	LDX #$04	;
$D7A7	LDA $03,X	;
$D7A9	STA $2007	;VRAM data
$D7AC	DEX		;
$D7AD	BPL $D7A7	;
$D7AF	LDA #$00	;
$D7B1	STA $2007	;VRAM data
$D7B4	LDA #$24	;
$D7B6	STA $2007	;VRAM data
$D7B9	STA $2007	;VRAM data
$D7BC	LDX #$8c	;
$D7BE	STX $2007	;VRAM data
$D7C1	INX		;
$D7C2	STX $2007	;VRAM data
$D7C5	LDX #$04	;
$D7C7	LDA $0D,X	;
$D7C9	STA $2007	;VRAM data
$D7CC	DEX		;
$D7CD	BPL $D7C7	;
$D7CF	LDA #$00	;
$D7D1	STA $2007	;VRAM data
$D7D4	LDA #$24	;
$D7D6	STA $2007	;VRAM data
$D7D9	STA $2007	;VRAM data
$D7DC	LDA $16  	;
$D7DE	BNE $D84A	;
$D7E0	LDA $40  	;
$D7E2	BEQ $D7F8	;
$D7E4	LDA #$8f	;
$D7E6	STA $2007	;VRAM data
$D7E9	LDX #$04	;
$D7EB	LDA $08,X	;
$D7ED	STA $2007	;VRAM data
$D7F0	DEX		;
$D7F1	BPL $D7EB	;
$D7F3	LDA #$00	;
$D7F5	STA $2007	;VRAM data
$D7F8	DEC $46  	;
$D7FA	RTS		; (within an if statement) 
$D7FB	DEC $46  	;
$D7FD	LDA #$20	;
$D7FF	STA $2006	;VRAM address select
$D802	LDA #$62	;
$D804	STA $2006	;VRAM address select
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to D84A was coincidental data)

function_D806:
$D806	JSR $41A5	; unknown register 
$D809	JSR $D81C	;
$D80C	LDA $40  	;
$D80E	BEQ $D830	;
$D810	LDA #$20	;
$D812	STA $2006	;VRAM address select
$D815	LDA #$75	;
$D817	STA $2006	;VRAM address select
$D81A	LDA $42  	;

function_D81C:
$D81C	BMI $D831	;
$D81E	STA $50  	;
$D820	LDX #$06	;
$D822	LDA #$24	;
$D824	CPX $50  	;
$D826	BCS $D82A	;
$D828	LDA #$2a	;
$D82A	STA $2007	;VRAM data
$D82D	DEX		;
$D82E	BPL $D822	;
$D830	RTS		;

$D831	LDA $40  	;
$D833	BEQ $D81E	;
$D835	LDX #$08	;
$D837	LDA $D841,X	;
$D83A	STA $2007	;VRAM data
$D83D	DEX		;
$D83E	BPL $D837	;
$D840	RTS		;

$D841	.byte $1b	; INVALID OPCODE !!!
$D842	ASL $181F	;
$D845	BIT $0E  	;
$D847	ASL $0A,X	;
$D849	BPL $D7EB	;
$D84B	.byte $04	; INVALID OPCODE !!!
$D84C	LDA $D862,Y	;
$D84F	STA $2007	;VRAM data
$D852	DEY		;
$D853	BPL $D84C	;
$D855	LDA $4A  	;
$D857	STA $2007	;VRAM data
$D85A	LDA $49  	;
$D85C	STA $2007	;VRAM data
$D85F	DEC $46  	;
$D861	RTS		;

$D862	.byte $fb	; INVALID OPCODE !!!
$D863	.byte $fa	; INVALID OPCODE !!!
$D864	SBC $F7F8,Y	;

function_D867:
$D867	STA $12  	;
$D869	STX $13  	;
$D86B	STY $14  	;
$D86D	LDX #$01	;
$D86F	LDA $061A,X	;
$D872	BMI $D882	;
$D874	DEX		;
$D875	BPL $D86F	;
$D877	LDX #$01	;
$D879	LDA $0619	;
$D87C	CMP $0618	;
$D87F	BCC $D882	;
$D881	DEX		;
$D882	LDA #$64	;
$D884	STA $0618,X	;
$D887	LDA $12  	;
$D889	STA $061A,X	;
$D88C	TAY		;
$D88D	TXA		;
$D88E	ASL A		;
$D88F	ASL A		;
$D890	ASL A		;
$D891	TAX		;
$D892	LDA $D8C7,Y	;
$D895	STA $02F1,X	;
$D898	LDA $D8CD,Y	;
$D89B	STA $02F5,X	;
$D89E	LDY $13  	;
$D8A0	LDA $009A,Y	;
$D8A3	SEC		;
$D8A4	SBC #$08	;
$D8A6	STA $02F0,X	;
$D8A9	STA $02F4,X	;
$D8AC	LDA $0091,Y	;
$D8AF	STA $02F3,X	;
$D8B2	CLC		;
$D8B3	ADC #$08	;
$D8B5	STA $02F7,X	;
$D8B8	LDA $3E  	;
$D8BA	STA $02F2,X	;
$D8BD	STA $02F6,X	;
$D8C0	LDY $14  	;
$D8C2	LDX $13  	;
$D8C4	LDA $12  	;
$D8C6	RTS		;

$D8C7	.byte $f4	; INVALID OPCODE !!!
$D8C8	SBC $F6,X	;
$D8CA	.byte $f7	; INVALID OPCODE !!!
$D8CB	SED		;
$D8CC	SBC $FBFB,Y	;
$D8CF	.byte $fa	; INVALID OPCODE !!!
$D8D0	.byte $fb	; INVALID OPCODE !!!
$D8D1	.byte $fb	; INVALID OPCODE !!!
$D8D2	.byte $fb	; INVALID OPCODE !!!

function_D8D3:
$D8D3	LDX #$01	;
$D8D5	LDA $061A,X	;
$D8D8	BMI $D8F1	;
$D8DA	DEC $0618,X	;
$D8DD	BNE $D8F1	;
$D8DF	LDA #$ff	;
$D8E1	STA $061A,X	;
$D8E4	TXA		;
$D8E5	ASL A		;
$D8E6	ASL A		;
$D8E7	ASL A		;
$D8E8	TAY		;
$D8E9	LDA #$f0	;
$D8EB	STA $02F0,Y	;
$D8EE	STA $02F4,Y	;
$D8F1	DEX		;
$D8F2	BPL $D8D5	;
$D8F4	RTS		;


function_D8F5:
$D8F5	LDX #$01	;
$D8F7	LDA #$00	;
$D8F9	STA $0618,X	;
$D8FC	LDA #$ff	;
$D8FE	STA $061A,X	;
$D901	DEX		;
$D902	BPL $D8F7	;
$D904	RTS		;


function_D905:
$D905	JSR $D23C	;
$D908	JSR $C100	;
$D90B	JSR $F45B	;
$D90E	JSR $C0F0	;
$D911	LDA #$22	;
$D913	STA $1D  	;
$D915	LDA #$d9	;
$D917	STA $1E  	;
$D919	JSR $D48D	;
$D91C	JSR $C0FA	;
$D91F	JMP $C10B	;

$D922	ROL $D9  	;
$D924	BRK		;
$D925	BRK		;
$D926	.byte $3f	; INVALID OPCODE !!!
$D927	BRK		;
$D928	.byte $04	; INVALID OPCODE !!!
$D929	.byte $0f	; INVALID OPCODE !!!
$D92A	BMI $D953	;
$D92C	ROL A		;
$D92D	.byte $3f	; INVALID OPCODE !!!
$D92E	CLC		;
$D92F	.byte $04	; INVALID OPCODE !!!
$D930	.byte $0f	; INVALID OPCODE !!!
$D931	ASL $30,X	;
$D933	AND ($20,X)	;
$D935	.byte $7c	; INVALID OPCODE !!!
$D936	AND ($F0,X)	;
$D938	SBC ($24),Y	;
$D93A	BIT $24  	;
$D93C	BIT $E0  	;
$D93E	SBC ($E1,X)	;
$D940	.byte $e2	; INVALID OPCODE !!!
$D941	CPX #$e1	;
$D943	SBC ($E2,X)	;
$D945	CPX #$e2	;
$D947	BIT $E0  	;
$D949	.byte $e2	; INVALID OPCODE !!!
$D94A	BIT $E0  	;
$D94C	SBC ($E1,X)	;
$D94E	.byte $e2	; INVALID OPCODE !!!
$D94F	CPX #$e1	;
$D951	SBC ($E2,X)	;
$D953	CPX #$ec	;
$D955	BIT $E0  	;
$D957	.byte $e2	; INVALID OPCODE !!!
$D958	JSR $1BA2	;
$D95B	.byte $e3	; INVALID OPCODE !!!
$D95C	.byte $e3	; INVALID OPCODE !!!
$D95D	.byte $e3	; INVALID OPCODE !!!
$D95E	SBC $E3  	;
$D960	.byte $e3	; INVALID OPCODE !!!
$D961	.byte $e3	; INVALID OPCODE !!!
$D962	SBC $E3  	;
$D964	SBC $24  	;
$D966	.byte $e3	; INVALID OPCODE !!!
$D967	SBC $24  	;
$D969	.byte $e3	; INVALID OPCODE !!!
$D96A	.byte $e3	; INVALID OPCODE !!!
$D96B	.byte $e3	; INVALID OPCODE !!!
$D96C	SBC $E3  	;
$D96E	.byte $e3	; INVALID OPCODE !!!
$D96F	.byte $e3	; INVALID OPCODE !!!
$D970	SBC $E3  	;
$D972	.byte $e3	; INVALID OPCODE !!!
$D973	.byte $f3	; INVALID OPCODE !!!
$D974	.byte $e3	; INVALID OPCODE !!!
$D975	SBC $20  	;
$D977	.byte $c2	; INVALID OPCODE !!!
$D978	.byte $1b	; INVALID OPCODE !!!
$D979	.byte $e3	; INVALID OPCODE !!!
$D97A	CPX $E3  	;
$D97C	.byte $e7	; INVALID OPCODE !!!
$D97D	.byte $e3	; INVALID OPCODE !!!
$D97E	CPX $E3  	;
$D980	SBC $E3  	;
$D982	SBC $24  	;
$D984	.byte $e3	; INVALID OPCODE !!!
$D985	SBC $24  	;
$D987	.byte $e3	; INVALID OPCODE !!!
$D988	CPX $E3  	;
$D98A	SBC $E3  	;
$D98C	CPX $E3  	;
$D98E	SBC $E3  	;
$D990	.byte $e3	; INVALID OPCODE !!!
$D991	.byte $e3	; INVALID OPCODE !!!
$D992	.byte $e3	; INVALID OPCODE !!!
$D993	SBC $20  	;
$D995	.byte $e2	; INVALID OPCODE !!!
$D996	.byte $1b	; INVALID OPCODE !!!
$D997	.byte $e3	; INVALID OPCODE !!!
$D998	.byte $e3	; INVALID OPCODE !!!
$D999	.byte $e3	; INVALID OPCODE !!!
$D99A	.byte $e2	; INVALID OPCODE !!!
$D99B	.byte $e3	; INVALID OPCODE !!!
$D99C	.byte $e3	; INVALID OPCODE !!!
$D99D	.byte $e3	; INVALID OPCODE !!!
$D99E	SBC $E3  	;
$D9A0	SBC $24  	;
$D9A2	.byte $e3	; INVALID OPCODE !!!
$D9A3	SBC $24  	;
$D9A5	.byte $e3	; INVALID OPCODE !!!
$D9A6	.byte $e3	; INVALID OPCODE !!!
$D9A7	.byte $e3	; INVALID OPCODE !!!
$D9A8	SBC $E3  	;
$D9AA	.byte $e3	; INVALID OPCODE !!!
$D9AB	.byte $e3	; INVALID OPCODE !!!
$D9AC	SBC $E3  	;
$D9AE	.byte $e3	; INVALID OPCODE !!!
$D9AF	.byte $e3	; INVALID OPCODE !!!
$D9B0	.byte $e3	; INVALID OPCODE !!!
$D9B1	SBC $21  	;
$D9B3	.byte $02	; INVALID OPCODE !!!
$D9B4	.byte $1b	; INVALID OPCODE !!!
$D9B5	.byte $e3	; INVALID OPCODE !!!
$D9B6	CPX $E3  	;
$D9B8	SBC $E3  	;
$D9BA	.byte $f2	; INVALID OPCODE !!!
$D9BB	.byte $e3	; INVALID OPCODE !!!
$D9BC	SBC $E3  	;
$D9BE	.byte $e3	; INVALID OPCODE !!!
$D9BF	.byte $e2	; INVALID OPCODE !!!
$D9C0	.byte $e3	; INVALID OPCODE !!!
$D9C1	.byte $e3	; INVALID OPCODE !!!
$D9C2	.byte $e2	; INVALID OPCODE !!!
$D9C3	.byte $e3	; INVALID OPCODE !!!
$D9C4	.byte $e3	; INVALID OPCODE !!!
$D9C5	.byte $e3	; INVALID OPCODE !!!
$D9C6	SBC $E3  	;
$D9C8	.byte $e3	; INVALID OPCODE !!!
$D9C9	.byte $e3	; INVALID OPCODE !!!
$D9CA	SBC $E3  	;
$D9CC	.byte $f2	; INVALID OPCODE !!!
$D9CD	.byte $e3	; INVALID OPCODE !!!
$D9CE	.byte $e3	; INVALID OPCODE !!!
$D9CF	SBC $21  	;
$D9D1	.byte $22	; INVALID OPCODE !!!
$D9D2	.byte $1b	; INVALID OPCODE !!!
$D9D3	INC $E3  	;
$D9D5	.byte $e3	; INVALID OPCODE !!!
$D9D6	.byte $e7	; INVALID OPCODE !!!
$D9D7	.byte $eb	; INVALID OPCODE !!!
$D9D8	BIT $E6  	;
$D9DA	.byte $e7	; INVALID OPCODE !!!
$D9DB	INC $E3  	;
$D9DD	.byte $e7	; INVALID OPCODE !!!
$D9DE	INC $E3  	;
$D9E0	.byte $e7	; INVALID OPCODE !!!
$D9E1	INC $E3  	;
$D9E3	.byte $e3	; INVALID OPCODE !!!
$D9E4	.byte $e7	; INVALID OPCODE !!!
$D9E5	INC $E3  	;
$D9E7	.byte $e3	; INVALID OPCODE !!!
$D9E8	.byte $e7	; INVALID OPCODE !!!
$D9E9	.byte $eb	; INVALID OPCODE !!!
$D9EA	BIT $E6  	;
$D9EC	.byte $e3	; INVALID OPCODE !!!
$D9ED	.byte $e7	; INVALID OPCODE !!!
$D9EE	AND ($4C,X)	;
$D9F0	.byte $12	; INVALID OPCODE !!!
$D9F1	CPX #$e1	;
$D9F3	SBC ($E2,X)	;
$D9F5	CPX #$e2	;
$D9F7	CPX #$e1	;
$D9F9	SBC ($E2,X)	;
$D9FB	INX		;
$D9FC	BIT $E0  	;
$D9FE	.byte $e2	; INVALID OPCODE !!!
$D9FF	CPX #$e1	;
$DA01	SBC ($E2,X)	;
$DA03	AND ($6C,X)	;
$DA05	.byte $12	; INVALID OPCODE !!!
$DA06	.byte $e3	; INVALID OPCODE !!!
$DA07	.byte $e3	; INVALID OPCODE !!!
$DA08	.byte $e3	; INVALID OPCODE !!!
$DA09	.byte $e7	; INVALID OPCODE !!!
$DA0A	.byte $e3	; INVALID OPCODE !!!
$DA0B	SBC $E3  	;
$DA0D	SBC $F6,X	;
$DA0F	.byte $e7	; INVALID OPCODE !!!
$DA10	.byte $e3	; INVALID OPCODE !!!
$DA11	.byte $f3	; INVALID OPCODE !!!
$DA12	.byte $e3	; INVALID OPCODE !!!
$DA13	SBC $E6  	;
$DA15	.byte $e3	; INVALID OPCODE !!!
$DA16	.byte $e3	; INVALID OPCODE !!!
$DA17	.byte $e7	; INVALID OPCODE !!!
$DA18	AND ($8C,X)	;
$DA1A	.byte $12	; INVALID OPCODE !!!
$DA1B	.byte $e3	; INVALID OPCODE !!!
$DA1C	.byte $e3	; INVALID OPCODE !!!
$DA1D	.byte $ef	; INVALID OPCODE !!!
$DA1E	BIT $E3  	;
$DA20	SBC $E3  	;
$DA22	BIT $24  	;
$DA24	BIT $E3  	;
$DA26	.byte $e3	; INVALID OPCODE !!!
$DA27	.byte $e3	; INVALID OPCODE !!!
$DA28	SBC $24  	;
$DA2A	.byte $e3	; INVALID OPCODE !!!
$DA2B	SBC $24  	;
$DA2D	AND ($AC,X)	;
$DA2F	.byte $12	; INVALID OPCODE !!!
$DA30	.byte $e3	; INVALID OPCODE !!!
$DA31	.byte $e3	; INVALID OPCODE !!!
$DA32	SBC ($EA,X)	;
$DA34	.byte $e3	; INVALID OPCODE !!!
$DA35	SBC $E3  	;
$DA37	SBC #$e3	;
$DA39	.byte $e2	; INVALID OPCODE !!!
$DA3A	.byte $e3	; INVALID OPCODE !!!
$DA3B	.byte $e3	; INVALID OPCODE !!!
$DA3C	.byte $e3	; INVALID OPCODE !!!
$DA3D	SBC $24  	;
$DA3F	.byte $e3	; INVALID OPCODE !!!
$DA40	SBC $24  	;
$DA42	AND ($CC,X)	;
$DA44	.byte $12	; INVALID OPCODE !!!
$DA45	.byte $e3	; INVALID OPCODE !!!
$DA46	.byte $e3	; INVALID OPCODE !!!
$DA47	.byte $ef	; INVALID OPCODE !!!
$DA48	BIT $E3  	;
$DA4A	SBC $E3  	;
$DA4C	.byte $f3	; INVALID OPCODE !!!
$DA4D	.byte $e3	; INVALID OPCODE !!!
$DA4E	SBC $E3  	;
$DA50	.byte $f2	; INVALID OPCODE !!!
$DA51	.byte $e3	; INVALID OPCODE !!!
$DA52	SBC $24  	;
$DA54	.byte $e3	; INVALID OPCODE !!!
$DA55	SBC $24  	;
$DA57	AND ($EC,X)	;
$DA59	.byte $12	; INVALID OPCODE !!!
$DA5A	INC $E7  	;
$DA5C	BIT $24  	;
$DA5E	INC $E7  	;
$DA60	INC $E7  	;
$DA62	INC $E7  	;
$DA64	.byte $eb	; INVALID OPCODE !!!
$DA65	BIT $E6  	;
$DA67	.byte $e7	; INVALID OPCODE !!!
$DA68	BIT $E6  	;
$DA6A	.byte $e7	; INVALID OPCODE !!!
$DA6B	BIT $22  	;
$DA6D	PHA		;
$DA6E	BPL $DA7A	;
$DA70	BIT $24  	;
$DA72	ORA ($25,X)	;
$DA74	ORA $0A15,Y	;
$DA77	.byte $22	; INVALID OPCODE !!!
$DA78	ASL $241B	;
$DA7B	BPL $DA87	;
$DA7D	ASL $0E,X	;
$DA7F	.byte $22	; INVALID OPCODE !!!
$DA80	DEY		;
$DA81	BPL $DA8E	;
$DA83	BIT $24  	;
$DA85	.byte $02	; INVALID OPCODE !!!
$DA86	AND $19  	;
$DA88	ORA $0A,X	;
$DA8A	.byte $22	; INVALID OPCODE !!!
$DA8B	ASL $241B	;
$DA8E	BPL $DA9A	;
$DA90	ASL $0E,X	;
$DA92	.byte $22	; INVALID OPCODE !!!
$DA93	INY		;
$DA94	BPL $DAA2	;
$DA96	BIT $24  	;
$DA98	.byte $0b	; INVALID OPCODE !!!
$DA99	ASL A		;
$DA9A	ORA $15,X	;
$DA9C	CLC		;
$DA9D	CLC		;
$DA9E	.byte $17	; INVALID OPCODE !!!
$DA9F	BIT $24  	;
$DAA1	ORA $121B,X	;
$DAA4	ORA $4923,Y	; unknown register 
$DAA7	ASL $01F4	;
$DAAA	ORA #$08	;
$DAAC	.byte $04	; INVALID OPCODE !!!
$DAAD	BIT $17  	;
$DAAF	.byte $12	; INVALID OPCODE !!!
$DAB0	.byte $17	; INVALID OPCODE !!!
$DAB1	ORA $170E,X	;
$DAB4	ORA $0018	;

function_DAB7:
$DAB7	JSR $C0FA	;
$DABA	JSR $D905	;
$DABD	LDA #$00	;
$DABF	STA $19  	;
$DAC1	JSR $F45B	;
$DAC4	LDA $19  	;
$DAC6	BEQ $DAE7	;
$DAC8	JSR $DAFE	;
$DACB	JSR $E75E	;
$DACE	TAX		;
$DACF	AND #$10	;
$DAD1	BNE $DAE6	;
$DAD3	TXA		;
$DAD4	AND #$20	;
$DAD6	BEQ $DAE3	;
$DAD8	LDA #$00	;
$DADA	STA $19  	;
$DADC	LDX $3F  	;
$DADE	LDA $DAFB,X	;
$DAE1	STA $3F  	;
$DAE3	JMP $DAC1	; (in an if statement) 
$DAE6	RTS		; (within an if statement) 
$DAE7	INC $3A  	;
$DAE9	INC $40  	;
$DAEB	LDA #$00	;
$DAED	STA $4015	;IRQ status / Sound enable
$DAF0	STA $16  	;
$DAF2	JSR $F1E8	;
$DAF5	LDA #$00	;
$DAF7	STA $3A  	;
$DAF9	BEQ $DAB7	;
$DAFB	ORA ($02,X)	;
$DAFD	BRK		;

function_DAFE:
$DAFE	LDA $3F  	;
$DB00	LSR A		;
$DB01	STA $16  	;
$DB03	LDA $3F  	;
$DB05	TAX		;
$DB06	AND #$01	;
$DB08	STA $40  	;
$DB0A	LDA $DB1D,X	;
$DB0D	STA $057B	;
$DB10	LDA #$2c	;
$DB12	STA $0567	;
$DB15	LDX #$00	;
$DB17	STX $055D	;
$DB1A	JMP $CE25	;

$DB1D	STY $AC9C	;
$DB20	RTI		;

$DB21	.byte $4f	; INVALID OPCODE !!!
$DB22	INX		;
$DB23	.byte $62	; INVALID OPCODE !!!
$DB24	ADC $D77E	;
$DB27	.byte $62	; INVALID OPCODE !!!
$DB28	.byte $8f	; INVALID OPCODE !!!
$DB29	SBC $62C0,Y	; saved-to-battery RAM 
$DB2C	.byte $a3	; INVALID OPCODE !!!
$DB2D	ORA $62D7	; saved-to-battery RAM 
$DB30	.byte $db	; INVALID OPCODE !!!
$DB31	.byte $db	; INVALID OPCODE !!!
$DB32	.byte $db	; INVALID OPCODE !!!
$DB33	.byte $db	; INVALID OPCODE !!!
$DB34	.byte $db	; INVALID OPCODE !!!
$DB35	.byte $db	; INVALID OPCODE !!!
$DB36	.byte $db	; INVALID OPCODE !!!
$DB37	.byte $db	; INVALID OPCODE !!!
$DB38	.byte $db	; INVALID OPCODE !!!
$DB39	.byte $db	; INVALID OPCODE !!!
$DB3A	.byte $db	; INVALID OPCODE !!!
$DB3B	.byte $db	; INVALID OPCODE !!!
$DB3C	.byte $db	; INVALID OPCODE !!!
$DB3D	.byte $dc	; INVALID OPCODE !!!
$DB3E	.byte $db	; INVALID OPCODE !!!
$DB3F	.byte $db	; INVALID OPCODE !!!
$DB40	AND ($DC,X)	;
$DB42	.byte $2f	; INVALID OPCODE !!!
$DB43	CMP $0000,X	;
$DB46	BPL $DB4E	;
$DB48	.byte $ff	; INVALID OPCODE !!!
$DB49	.byte $ff	; INVALID OPCODE !!!
$DB4A	STY $02DF	;
$DB4D	BVS $DB2D	;
$DB4F	AND ($DC,X)	;
$DB51	.byte $2f	; INVALID OPCODE !!!
$DB52	CMP $DD41,X	;
$DB55	BRK		;
$DB56	BRK		;
$DB57	CLC		;
$DB58	.byte $0c	; INVALID OPCODE !!!
$DB59	.byte $04	; INVALID OPCODE !!!
$DB5A	ASL $FFFF	;
$DB5D	STX $DF,Y 	;
$DB5F	.byte $04	; INVALID OPCODE !!!
$DB60	.byte $7c	; INVALID OPCODE !!!
$DB61	DEC $DCC0,X	;
$DB64	BRK		;
$DB65	BRK		;
$DB66	.byte $ff	; INVALID OPCODE !!!
$DB67	.byte $ff	; INVALID OPCODE !!!
$DB68	LDX $DF  	;
$DB6A	BRK		;
$DB6B	BCC $DB4B	;
$DB6D	AND ($DC,X)	;
$DB6F	.byte $54	; INVALID OPCODE !!!
$DB70	CMP $0000,X	;
$DB73	PHP		;
$DB74	ASL $18  	;
$DB76	ASL A		;
$DB77	.byte $ff	; INVALID OPCODE !!!
$DB78	.byte $ff	; INVALID OPCODE !!!
$DB79	.byte $a7	; INVALID OPCODE !!!
$DB7A	.byte $df	; INVALID OPCODE !!!
$DB7B	ASL $94  	;
$DB7D	DEC $DC21,X	;
$DB80	.byte $73	; INVALID OPCODE !!!
$DB81	CMP $0000,X	;
$DB84	.byte $04	; INVALID OPCODE !!!
$DB85	ASL $12  	;
$DB87	PHP		;
$DB88	.byte $ff	; INVALID OPCODE !!!
$DB89	.byte $ff	; INVALID OPCODE !!!
$DB8A	.byte $b7	; INVALID OPCODE !!!
$DB8B	.byte $df	; INVALID OPCODE !!!
$DB8C	.byte $07	; INVALID OPCODE !!!
$DB8D	BCS $DB6D	;
$DB8F	AND ($DC,X)	;
$DB91	STA $00DD,Y	;
$DB94	BRK		;
$DB95	ASL $06  	;
$DB97	.byte $14	; INVALID OPCODE !!!
$DB98	BPL $DB99	;
$DB9A	.byte $0f	; INVALID OPCODE !!!
$DB9B	ORA $FF01	;
$DB9E	DEX		;
$DB9F	.byte $df	; INVALID OPCODE !!!
$DBA0	ORA #$d0	;
$DBA2	DEC $DC21,X	;
$DBA5	CPY $DD  	;
$DBA7	BRK		;
$DBA8	BRK		;
$DBA9	.byte $04	; INVALID OPCODE !!!
$DBAA	ASL $10  	;
$DBAC	ASL $08FF	;
$DBAF	ASL $0D03	;
$DBB2	ORA #$03	;
$DBB4	.byte $12	; INVALID OPCODE !!!
$DBB5	PHP		;
$DBB6	.byte $03	; INVALID OPCODE !!!
$DBB7	.byte $17	; INVALID OPCODE !!!
$DBB8	ORA $FF03	;
$DBBB	CMP $03DF,X	;
$DBBE	SED		;
$DBBF	DEC $DC21,X	;
$DBC2	.byte $54	; INVALID OPCODE !!!
$DBC3	CMP $0000,X	;
$DBC6	BPL $DBCE	;
$DBC8	.byte $1a	; INVALID OPCODE !!!
$DBC9	.byte $0c	; INVALID OPCODE !!!
$DBCA	.byte $ff	; INVALID OPCODE !!!
$DBCB	PHP		;
$DBCC	PHP		;
$DBCD	ORA ($18,X)	;
$DBCF	.byte $04	; INVALID OPCODE !!!
$DBD0	ORA ($FF,X)	;
$DBD2	.byte $a7	; INVALID OPCODE !!!
$DBD3	.byte $df	; INVALID OPCODE !!!
$DBD4	ASL $94  	;
$DBD6	DEC $DC21,X	;
$DBD9	CMP ($DD),Y	;
$DBDB	BRK		;
$DBDC	BRK		;
$DBDD	ASL $0C06	;
$DBE0	.byte $14	; INVALID OPCODE !!!
$DBE1	.byte $ff	; INVALID OPCODE !!!
$DBE2	.byte $ff	; INVALID OPCODE !!!
$DBE3	SBC $06DF	;
$DBE6	PHP		;
$DBE7	.byte $df	; INVALID OPCODE !!!
$DBE8	AND ($DC,X)	;
$DBEA	.byte $f7	; INVALID OPCODE !!!
$DBEB	CMP $0000,X	;
$DBEE	.byte $04	; INVALID OPCODE !!!
$DBEF	PHP		;
$DBF0	ASL $10,X	;
$DBF2	.byte $ff	; INVALID OPCODE !!!
$DBF3	.byte $ff	; INVALID OPCODE !!!
$DBF4	SBC $09DF,X	;
$DBF7	BIT $DF  	;
$DBF9	AND ($DC,X)	;
$DBFB	PLP		;
$DBFC	DEC $0000,X	;
$DBFF	.byte $04	; INVALID OPCODE !!!
$DC00	BPL $DC1A	;
$DC02	BPL $DC03	;
$DC04	ASL $0106	;
$DC07	.byte $ff	; INVALID OPCODE !!!
$DC08	ORA $07E0	;
$DC0B	JMP $21DF	; (in an if statement) 
$DC0E	.byte $dc	; INVALID OPCODE !!!
$DC0F	EOR ($DE),Y	;
$DC11	BRK		;
$DC12	BRK		;
$DC13	.byte $04	; INVALID OPCODE !!!
$DC14	PHP		;
$DC15	ASL $FF10	;
$DC18	BPL $DC21	;
$DC1A	ORA ($FF,X)	;
$DC1C	JSR $07E0	;
$DC1F	JMP ($23DF)	;
$DC22	RTI		;

$DC23	DEY		;
$DC24	AND $3938,Y	;
$DC27	SEC		;
$DC28	AND $3938,Y	;
$DC2B	.byte $33	; INVALID OPCODE !!!
$DC2C	BIT $24  	;
$DC2E	BIT $24  	;
$DC30	BIT $24  	;
$DC32	BIT $24  	;
$DC34	BIT $24  	;
$DC36	BIT $24  	;
$DC38	BIT $24  	;
$DC3A	BIT $24  	;
$DC3C	BMI $DC76	;
$DC3E	AND $3938,Y	;
$DC41	SEC		;
$DC42	AND $3C38,Y	;
$DC45	.byte $3b	; INVALID OPCODE !!!
$DC46	.byte $3c	; INVALID OPCODE !!!
$DC47	.byte $3b	; INVALID OPCODE !!!
$DC48	.byte $3c	; INVALID OPCODE !!!
$DC49	.byte $3b	; INVALID OPCODE !!!
$DC4A	.byte $3c	; INVALID OPCODE !!!
$DC4B	AND $5958,X	; MMC5 register or expansion RAM 
$DC4E	.byte $5a	; INVALID OPCODE !!!
$DC4F	.byte $5b	; INVALID OPCODE !!!
$DC50	CLI		;
$DC51	EOR $5B5A,Y	; MMC5 register or expansion RAM 
$DC54	CLI		;
$DC55	EOR $5B5A,Y	; MMC5 register or expansion RAM 
$DC58	CLI		;
$DC59	EOR $5B5A,Y	; MMC5 register or expansion RAM 
$DC5C	.byte $3a	; INVALID OPCODE !!!
$DC5D	.byte $3b	; INVALID OPCODE !!!
$DC5E	.byte $3c	; INVALID OPCODE !!!
$DC5F	.byte $3b	; INVALID OPCODE !!!
$DC60	.byte $3c	; INVALID OPCODE !!!
$DC61	.byte $3b	; INVALID OPCODE !!!
$DC62	.byte $3c	; INVALID OPCODE !!!
$DC63	.byte $3b	; INVALID OPCODE !!!
$DC64	RTS		; (within an if statement) 
$DC65	ADC ($62,X)	;
$DC67	.byte $63	; INVALID OPCODE !!!
$DC68	RTS		; (within an if statement) 
$DC69	ADC ($62,X)	;
$DC6B	.byte $63	; INVALID OPCODE !!!
$DC6C	.byte $5c	; INVALID OPCODE !!!
$DC6D	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC70	.byte $5c	; INVALID OPCODE !!!
$DC71	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC74	.byte $5c	; INVALID OPCODE !!!
$DC75	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC78	.byte $5c	; INVALID OPCODE !!!
$DC79	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC7C	RTS		;

$DC7D	ADC ($62,X)	;
$DC7F	.byte $63	; INVALID OPCODE !!!
$DC80	RTS		;

$DC81	ADC ($62,X)	;
$DC83	.byte $63	; INVALID OPCODE !!!
$DC84	.byte $5c	; INVALID OPCODE !!!
$DC85	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC88	.byte $5c	; INVALID OPCODE !!!
$DC89	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC8C	.byte $5c	; INVALID OPCODE !!!
$DC8D	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC90	.byte $5c	; INVALID OPCODE !!!
$DC91	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC94	.byte $5c	; INVALID OPCODE !!!
$DC95	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC98	.byte $5c	; INVALID OPCODE !!!
$DC99	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DC9C	.byte $5c	; INVALID OPCODE !!!
$DC9D	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DCA0	.byte $5c	; INVALID OPCODE !!!
$DCA1	EOR $5F5E,X	; MMC5 register or expansion RAM 
$DCA4	RTI		;

$DCA5	BVC $DCF7	;
$DCA7	BVC $DCF9	;
$DCA9	BCC $DC4B	;
$DCAB	LDY #$23	;
$DCAD	BEQ $DCBF	;
$DCAF	BRK		;
$DCB0	BRK		;
$DCB1	LDY #$a0	;
$DCB3	LDY #$a0	;
$DCB5	BRK		;
$DCB6	BRK		;
$DCB7	ASL A		;
$DCB8	ASL A		;
$DCB9	ASL A		;
$DCBA	ASL A		;
$DCBB	ASL A		;
$DCBC	ASL A		;
$DCBD	ASL A		;
$DCBE	ASL A		;
$DCBF	BRK		;
$DCC0	.byte $a3	; INVALID OPCODE !!!
$DCC1	.byte $04	; INVALID OPCODE !!!
$DCC2	.byte $04	; INVALID OPCODE !!!
$DCC3	.byte $93	; INVALID OPCODE !!!
$DCC4	STY $94,X	;
$DCC6	STY $A3,X	;
$DCC8	ORA $04  	;
$DCCA	STA $96,X	;
$DCCC	STX $96,Y 	;
$DCCE	LDX #$ea	;
$DCD0	ORA $93  	;
$DCD2	STY $94,X	;
$DCD4	STY $94,X	;
$DCD6	LDX #$eb	;
$DCD8	ORA $95  	;
$DCDA	STX $96,Y 	;
$DCDC	STX $96,Y 	;
$DCDE	.byte $a3	; INVALID OPCODE !!!
$DCDF	.byte $34	; INVALID OPCODE !!!
$DCE0	.byte $03	; INVALID OPCODE !!!
$DCE1	.byte $93	; INVALID OPCODE !!!
$DCE2	STY $94,X	;
$DCE4	.byte $a3	; INVALID OPCODE !!!
$DCE5	AND $03,X	;
$DCE7	STA $96,X	;
$DCE9	STX $A3,Y 	;
$DCEB	.byte $1a	; INVALID OPCODE !!!
$DCEC	.byte $04	; INVALID OPCODE !!!
$DCED	.byte $93	; INVALID OPCODE !!!
$DCEE	STY $94,X	;
$DCF0	STY $A3,X	;
$DCF2	.byte $1b	; INVALID OPCODE !!!
$DCF3	.byte $04	; INVALID OPCODE !!!
$DCF4	STA $96,X	;
$DCF6	STX $96,Y 	;
$DCF8	.byte $63	; INVALID OPCODE !!!
$DCF9	.byte $80	; INVALID OPCODE !!!
$DCFA	JSR $2397	;
$DCFD	LDY #$20	;
$DCFF	TYA		;
$DD00	STA $9998,Y	;
$DD03	TYA		;
$DD04	STA $9998,Y	;
$DD07	TYA		;
$DD08	STA $9998,Y	;
$DD0B	TYA		;
$DD0C	STA $9998,Y	;
$DD0F	TYA		;
$DD10	STA $9998,Y	;
$DD13	TYA		;
$DD14	STA $9998,Y	;
$DD17	TYA		;
$DD18	STA $9998,Y	;
$DD1B	TYA		;
$DD1C	STA $9998,Y	;
$DD1F	.byte $23	; INVALID OPCODE !!!
$DD20	CPY #$08	;
$DD22	RTI		;

$DD23	BVC $DD75	;
$DD25	BVC $DD77	;
$DD27	BCC $DCC9	;
$DD29	LDY #$63	;
$DD2B	INX		;
$DD2C	BPL $DD2D	;
$DD2E	BRK		;
$DD2F	.byte $22	; INVALID OPCODE !!!
$DD30	EOR #$0e	;
$DD32	BMI $DD65	;
$DD34	.byte $32	; INVALID OPCODE !!!
$DD35	AND ($32),Y	;
$DD37	AND ($32),Y	;
$DD39	AND ($32),Y	;
$DD3B	AND ($32),Y	;
$DD3D	AND ($32),Y	;
$DD3F	.byte $33	; INVALID OPCODE !!!
$DD40	BRK		;
$DD41	AND ($57,X)	;
$DD43	ASL $30  	;
$DD45	AND ($32),Y	;
$DD47	AND ($32),Y	;
$DD49	.byte $33	; INVALID OPCODE !!!
$DD4A	AND ($65,X)	;
$DD4C	ASL $30  	;
$DD4E	AND ($32),Y	;
$DD50	AND ($32),Y	;
$DD52	.byte $33	; INVALID OPCODE !!!
$DD53	BRK		;
$DD54	AND ($90,X)	;
$DD56	.byte $03	; INVALID OPCODE !!!
$DD57	BMI $DD8A	;
$DD59	.byte $33	; INVALID OPCODE !!!
$DD5A	.byte $22	; INVALID OPCODE !!!
$DD5B	ROL $03  	;
$DD5D	BMI $DD90	;
$DD5F	.byte $33	; INVALID OPCODE !!!
$DD60	.byte $22	; INVALID OPCODE !!!
$DD61	.byte $57	; INVALID OPCODE !!!
$DD62	.byte $03	; INVALID OPCODE !!!
$DD63	BMI $DD96	;
$DD65	.byte $33	; INVALID OPCODE !!!
$DD66	.byte $22	; INVALID OPCODE !!!
$DD67	JMP ($3003)	;
$DD6A	AND ($33),Y	;
$DD6C	.byte $22	; INVALID OPCODE !!!
$DD6D	.byte $f2	; INVALID OPCODE !!!
$DD6E	.byte $03	; INVALID OPCODE !!!
$DD6F	BMI $DDA2	;
$DD71	.byte $33	; INVALID OPCODE !!!
$DD72	BRK		;
$DD73	JSR $03CB	;
$DD76	BMI $DDA9	;
$DD78	.byte $33	; INVALID OPCODE !!!
$DD79	LDA ($6D,X)	;
$DD7B	.byte $03	; INVALID OPCODE !!!
$DD7C	ROL $403F,X	; unknown register 
$DD7F	LDA ($59,X)	;
$DD81	.byte $04	; INVALID OPCODE !!!
$DD82	ROL $3F3F,X	;
$DD85	RTI		; (within an if statement) 
$DD86	LDA ($A5,X)	;
$DD88	.byte $03	; INVALID OPCODE !!!
$DD89	ROL $403F,X	; unknown register 
$DD8C	.byte $22	; INVALID OPCODE !!!
$DD8D	TAX		;
$DD8E	.byte $03	; INVALID OPCODE !!!
$DD8F	BMI $DDC2	;
$DD91	.byte $33	; INVALID OPCODE !!!
$DD92	.byte $22	; INVALID OPCODE !!!
$DD93	.byte $b3	; INVALID OPCODE !!!
$DD94	.byte $03	; INVALID OPCODE !!!
$DD95	BMI $DDC8	;
$DD97	.byte $33	; INVALID OPCODE !!!
$DD98	BRK		;
$DD99	JSR $02E2	;
$DD9C	BMI $DDD1	;
$DD9E	JSR $02FB	;
$DDA1	BMI $DDD6	;
$DDA3	AND ($57,X)	;
$DDA5	.byte $02	; INVALID OPCODE !!!
$DDA6	BMI $DDDB	;
$DDA8	AND ($93,X)	;
$DDAA	.byte $02	; INVALID OPCODE !!!
$DDAB	BMI $DDE0	;
$DDAD	.byte $22	; INVALID OPCODE !!!
$DDAE	.byte $0b	; INVALID OPCODE !!!
$DDAF	.byte $02	; INVALID OPCODE !!!
$DDB0	BMI $DDE5	;
$DDB2	.byte $22	; INVALID OPCODE !!!
$DDB3	.byte $47	; INVALID OPCODE !!!
$DDB4	.byte $02	; INVALID OPCODE !!!
$DDB5	BMI $DDEA	;
$DDB7	.byte $22	; INVALID OPCODE !!!
$DDB8	.byte $83	; INVALID OPCODE !!!
$DDB9	.byte $02	; INVALID OPCODE !!!
$DDBA	BMI $DDEF	;
$DDBC	.byte $22	; INVALID OPCODE !!!
$DDBD	.byte $cf	; INVALID OPCODE !!!
$DDBE	.byte $04	; INVALID OPCODE !!!
$DDBF	BMI $DDF2	;
$DDC1	.byte $32	; INVALID OPCODE !!!
$DDC2	.byte $33	; INVALID OPCODE !!!
$DDC3	BRK		;
$DDC4	.byte $22	; INVALID OPCODE !!!
$DDC5	DEX		;
$DDC6	.byte $03	; INVALID OPCODE !!!
$DDC7	BMI $DDFA	;
$DDC9	.byte $33	; INVALID OPCODE !!!
$DDCA	.byte $22	; INVALID OPCODE !!!
$DDCB	.byte $d2	; INVALID OPCODE !!!
$DDCC	.byte $03	; INVALID OPCODE !!!
$DDCD	BMI $DE00	;
$DDCF	.byte $33	; INVALID OPCODE !!!
$DDD0	BRK		;
$DDD1	AND ($08,X)	;
$DDD3	.byte $04	; INVALID OPCODE !!!
$DDD4	BMI $DE07	;
$DDD6	.byte $32	; INVALID OPCODE !!!
$DDD7	.byte $33	; INVALID OPCODE !!!
$DDD8	AND ($14,X)	;
$DDDA	.byte $04	; INVALID OPCODE !!!
$DDDB	BMI $DE0E	;
$DDDD	.byte $32	; INVALID OPCODE !!!
$DDDE	.byte $33	; INVALID OPCODE !!!
$DDDF	LDA ($A5,X)	;
$DDE1	.byte $04	; INVALID OPCODE !!!
$DDE2	ROL $3F3F,X	;
$DDE5	RTI		; (within an if statement) 
$DDE6	LDA ($BA,X)	;
$DDE8	.byte $04	; INVALID OPCODE !!!
$DDE9	ROL $3F3F,X	;
$DDEC	RTI		; (within an if statement) 
$DDED	.byte $22	; INVALID OPCODE !!!
$DDEE	JMP ($3006)	;
$DDF1	AND ($32),Y	;
$DDF3	AND ($32),Y	;
$DDF5	.byte $33	; INVALID OPCODE !!!
$DDF6	BRK		;
$DDF7	.byte $22	; INVALID OPCODE !!!
$DDF8	INC $3004	;
$DDFB	AND ($32),Y	;
$DDFD	.byte $33	; INVALID OPCODE !!!
$DDFE	JSR $03F9	;
$DE01	BMI $DE34	;
$DE03	.byte $33	; INVALID OPCODE !!!
$DE04	LDA ($1A,X)	;
$DE06	.byte $03	; INVALID OPCODE !!!
$DE07	.byte $3f	; INVALID OPCODE !!!
$DE08	.byte $3f	; INVALID OPCODE !!!
$DE09	RTI		; (within an if statement) 
$DE0A	AND ($90,X)	;
$DE0C	.byte $03	; INVALID OPCODE !!!
$DE0D	BMI $DE40	;
$DE0F	.byte $33	; INVALID OPCODE !!!
$DE10	LDA ($B1,X)	;
$DE12	.byte $03	; INVALID OPCODE !!!
$DE13	.byte $3f	; INVALID OPCODE !!!
$DE14	.byte $3f	; INVALID OPCODE !!!
$DE15	RTI		; (within an if statement) 
$DE16	.byte $22	; INVALID OPCODE !!!
$DE17	PLP		;
$DE18	.byte $03	; INVALID OPCODE !!!
$DE19	BMI $DE4C	;
$DE1B	.byte $33	; INVALID OPCODE !!!
$DE1C	LDX #$49	;
$DE1E	.byte $03	; INVALID OPCODE !!!
$DE1F	.byte $3f	; INVALID OPCODE !!!
$DE20	.byte $3f	; INVALID OPCODE !!!
$DE21	RTI		; (within an if statement) 
$DE22	JSR $02EA	;
$DE25	BMI $DE5A	;
$DE27	BRK		;
$DE28	LDX #$6c	;
$DE2A	.byte $03	; INVALID OPCODE !!!
$DE2B	ROL $403F,X	; unknown register 
$DE2E	LDX #$73	;
$DE30	.byte $03	; INVALID OPCODE !!!
$DE31	ROL $403F,X	; unknown register 
$DE34	JSR $04E4	;
$DE37	BMI $DE6A	;
$DE39	.byte $32	; INVALID OPCODE !!!
$DE3A	.byte $33	; INVALID OPCODE !!!
$DE3B	JSR $04F8	;
$DE3E	BMI $DE71	;
$DE40	.byte $32	; INVALID OPCODE !!!
$DE41	.byte $33	; INVALID OPCODE !!!
$DE42	AND ($A8,X)	;
$DE44	.byte $04	; INVALID OPCODE !!!
$DE45	BMI $DE78	;
$DE47	.byte $32	; INVALID OPCODE !!!
$DE48	.byte $33	; INVALID OPCODE !!!
$DE49	AND ($B5,X)	;
$DE4B	.byte $04	; INVALID OPCODE !!!
$DE4C	BMI $DE7F	;
$DE4E	.byte $32	; INVALID OPCODE !!!
$DE4F	.byte $33	; INVALID OPCODE !!!
$DE50	BRK		;
$DE51	.byte $22	; INVALID OPCODE !!!
$DE52	.byte $64	; INVALID OPCODE !!!
$DE53	.byte $02	; INVALID OPCODE !!!
$DE54	BMI $DE89	;
$DE56	.byte $22	; INVALID OPCODE !!!
$DE57	PHP		;
$DE58	.byte $02	; INVALID OPCODE !!!
$DE59	BMI $DE8E	;
$DE5B	AND ($AC,X)	;
$DE5D	.byte $02	; INVALID OPCODE !!!
$DE5E	BMI $DE93	;
$DE60	AND ($B4,X)	;
$DE62	.byte $02	; INVALID OPCODE !!!
$DE63	BMI $DE98	;
$DE65	.byte $22	; INVALID OPCODE !!!
$DE66	CLC		;
$DE67	.byte $02	; INVALID OPCODE !!!
$DE68	BMI $DE9D	;
$DE6A	.byte $22	; INVALID OPCODE !!!
$DE6B	.byte $7c	; INVALID OPCODE !!!
$DE6C	.byte $02	; INVALID OPCODE !!!
$DE6D	BMI $DEA2	;
$DE6F	BRK		;
$DE70	BPL $DE3A	;
$DE72	PHA		;
$DE73	SEC		;
$DE74	.byte $ff	; INVALID OPCODE !!!
$DE75	CLV		;
$DE76	.byte $cf	; INVALID OPCODE !!!
$DE77	.byte $cf	; INVALID OPCODE !!!
$DE78	.byte $8f	; INVALID OPCODE !!!
$DE79	CPX #$e0	;
$DE7B	TYA		;
$DE7C	BPL $DE42	;
$DE7E	PHA		;
$DE7F	CLV		;
$DE80	PLP		;
$DE81	.byte $3c	; INVALID OPCODE !!!
$DE82	.byte $ff	; INVALID OPCODE !!!
$DE83	CLV		;
$DE84	INX		;
$DE85	CLI		;
$DE86	.byte $cf	; INVALID OPCODE !!!
$DE87	.byte $cf	; INVALID OPCODE !!!
$DE88	.byte $8f	; INVALID OPCODE !!!
$DE89	.byte $4f	; INVALID OPCODE !!!
$DE8A	.byte $57	; INVALID OPCODE !!!
$DE8B	CPX #$e0	;
$DE8D	TYA		;
$DE8E	CLI		;
$DE8F	RTS		; (within an if statement) 
$DE90	BPL $DE91	;
$DE92	.byte $df	; INVALID OPCODE !!!
$DE93	CPX $C810	;
$DE96	.byte $80	; INVALID OPCODE !!!
$DE97	BMI $DE51	;
$DE99	RTS		; (within an if statement) 
$DE9A	BCC $DED4	;
$DE9C	.byte $ff	; INVALID OPCODE !!!
$DE9D	TYA		;
$DE9E	PHA		;
$DE9F	BNE $DF19	;
$DEA1	TAY		;
$DEA2	.byte $cf	; INVALID OPCODE !!!
$DEA3	.byte $cf	; INVALID OPCODE !!!
$DEA4	.byte $5f	; INVALID OPCODE !!!
$DEA5	.byte $87	; INVALID OPCODE !!!
$DEA6	.byte $8f	; INVALID OPCODE !!!
$DEA7	.byte $97	; INVALID OPCODE !!!
$DEA8	.byte $b7	; INVALID OPCODE !!!
$DEA9	CPX #$e0	;
$DEAB	PLA		;
$DEAC	BCC $DE46	;
$DEAE	LDY #$c0	;
$DEB0	BPL $DE7A	;
$DEB2	CLI		;
$DEB3	PLA		;
$DEB4	INY		;
$DEB5	PLP		;
$DEB6	BVC $DE50	;
$DEB8	SEC		;
$DEB9	.byte $ff	; INVALID OPCODE !!!
$DEBA	BVS $DF34	;
$DEBC	BNE $DEEE	;
$DEBE	PLA		;
$DEBF	BCS $DE90	;
$DEC1	.byte $cf	; INVALID OPCODE !!!
$DEC2	.byte $2f	; INVALID OPCODE !!!
$DEC3	.byte $57	; INVALID OPCODE !!!
$DEC4	.byte $4f	; INVALID OPCODE !!!
$DEC5	.byte $67	; INVALID OPCODE !!!
$DEC6	.byte $a7	; INVALID OPCODE !!!
$DEC7	.byte $a7	; INVALID OPCODE !!!
$DEC8	CPX #$e0	;
$DECA	SEC		;
$DECB	JMP ($7C6C)	;
$DECE	BCS $DE80	;
$DED0	BPL $DE9A	;
$DED2	.byte $12	; INVALID OPCODE !!!
$DED3	.byte $da	; INVALID OPCODE !!!
$DED4	TSX		;
$DED5	TXS		;
$DED6	.byte $5a	; INVALID OPCODE !!!
$DED7	.byte $3a	; INVALID OPCODE !!!
$DED8	.byte $1a	; INVALID OPCODE !!!
$DED9	.byte $7a	; INVALID OPCODE !!!
$DEDA	SEC		;
$DEDB	.byte $ff	; INVALID OPCODE !!!
$DEDC	ASL $C6E6,X	;
$DEDF	LDX $66  	;
$DEE1	LSR $26  	;
$DEE3	STX $CF,Y 	;
$DEE5	.byte $cf	; INVALID OPCODE !!!
$DEE6	.byte $37	; INVALID OPCODE !!!
$DEE7	.byte $37	; INVALID OPCODE !!!
$DEE8	.byte $4f	; INVALID OPCODE !!!
$DEE9	.byte $5f	; INVALID OPCODE !!!
$DEEA	.byte $7f	; INVALID OPCODE !!!
$DEEB	.byte $8f	; INVALID OPCODE !!!
$DEEC	.byte $9f	; INVALID OPCODE !!!
$DEED	.byte $af	; INVALID OPCODE !!!
$DEEE	CPX #$e0	;
$DEF0	RTI		; (within an if statement) 
$DEF1	RTI		; (within an if statement) 
$DEF2	CLI		;
$DEF3	PLA		;
$DEF4	DEY		;
$DEF5	TYA		;
$DEF6	TAY		;
$DEF7	CLV		;
$DEF8	BPL $DEC2	;
$DEFA	.byte $52	; INVALID OPCODE !!!
$DEFB	.byte $92	; INVALID OPCODE !!!
$DEFC	SEC		;
$DEFD	.byte $ff	; INVALID OPCODE !!!
$DEFE	ROR $A6  	;
$DF00	.byte $cf	; INVALID OPCODE !!!
$DF01	.byte $cf	; INVALID OPCODE !!!
$DF02	.byte $af	; INVALID OPCODE !!!
$DF03	.byte $af	; INVALID OPCODE !!!
$DF04	CPX #$e0	;
$DF06	CLV		;
$DF07	CLV		;
$DF08	BPL $DED2	;
$DF0A	RTI		; (within an if statement) 
$DF0B	LDY #$28	;
$DF0D	BNE $DF6F	;
$DF0F	SEC		;
$DF10	.byte $ff	; INVALID OPCODE !!!
$DF11	RTS		; (within an if statement) 
$DF12	CPY #$30	;
$DF14	CLD		;
$DF15	BCC $DEE6	;
$DF17	.byte $cf	; INVALID OPCODE !!!
$DF18	.byte $3f	; INVALID OPCODE !!!
$DF19	.byte $3f	; INVALID OPCODE !!!
$DF1A	.byte $67	; INVALID OPCODE !!!
$DF1B	.byte $67	; INVALID OPCODE !!!
$DF1C	.byte $97	; INVALID OPCODE !!!
$DF1D	CPX #$e0	;
$DF1F	PHA		;
$DF20	PHA		;
$DF21	DEY		;
$DF22	DEY		;
$DF23	LDY #$10	;
$DF25	INY		;
$DF26	BVC $DEF0	;
$DF28	DEY		;
$DF29	RTI		; (within an if statement) 
$DF2A	BVS $DEFC	;
$DF2C	DEY		;
$DF2D	PHA		;
$DF2E	SEC		;
$DF2F	.byte $ff	; INVALID OPCODE !!!
$DF30	RTS		; (within an if statement) 
$DF31	CPX #$98	;
$DF33	CLI		;
$DF34	BCC $DF0E	;
$DF36	BCC $DF88	;
$DF38	.byte $cf	; INVALID OPCODE !!!
$DF39	.byte $cf	; INVALID OPCODE !!!
$DF3A	.byte $37	; INVALID OPCODE !!!
$DF3B	.byte $37	; INVALID OPCODE !!!
$DF3C	.byte $5f	; INVALID OPCODE !!!
$DF3D	.byte $87	; INVALID OPCODE !!!
$DF3E	.byte $b7	; INVALID OPCODE !!!
$DF3F	.byte $3c	; INVALID OPCODE !!!
$DF40	.byte $64	; INVALID OPCODE !!!
$DF41	STY $E0E0	;
$DF44	RTI		; (within an if statement) 
$DF45	RTI		; (within an if statement) 
$DF46	PLA		;
$DF47	BCC $DF09	;
$DF49	RTS		; (within an if statement) 
$DF4A	.byte $80	; INVALID OPCODE !!!
$DF4B	TAY		;
$DF4C	BPL $DF16	;
$DF4E	JSR $40C0	; unknown register 
$DF51	TAY		;
$DF52	RTS		; (within an if statement) 
$DF53	TYA		;
$DF54	SEC		;
$DF55	.byte $ff	; INVALID OPCODE !!!
$DF56	RTI		; (within an if statement) 
$DF57	CPX #$60	;
$DF59	INY		;
$DF5A	PLA		;
$DF5B	LDY #$cf	;
$DF5D	.byte $cf	; INVALID OPCODE !!!
$DF5E	.byte $37	; INVALID OPCODE !!!
$DF5F	.byte $37	; INVALID OPCODE !!!
$DF60	.byte $67	; INVALID OPCODE !!!
$DF61	.byte $67	; INVALID OPCODE !!!
$DF62	.byte $97	; INVALID OPCODE !!!
$DF63	.byte $97	; INVALID OPCODE !!!
$DF64	CPX #$e0	;
$DF66	RTI		; (within an if statement) 
$DF67	RTI		; (within an if statement) 
$DF68	BVS $DFDA	;
$DF6A	BCS $DF1C	;
$DF6C	BPL $DF36	;
$DF6E	JSR $6040	; saved-to-battery RAM 
$DF71	LDY #$c0	;
$DF73	CPX #$38	;
$DF75	.byte $ff	; INVALID OPCODE !!!
$DF76	BMI $DFC8	;
$DF78	BVS $DF2A	;
$DF7A	BNE $DF6C	;
$DF7C	.byte $cf	; INVALID OPCODE !!!
$DF7D	.byte $cf	; INVALID OPCODE !!!
$DF7E	.byte $97	; INVALID OPCODE !!!
$DF7F	.byte $7f	; INVALID OPCODE !!!
$DF80	.byte $67	; INVALID OPCODE !!!
$DF81	.byte $67	; INVALID OPCODE !!!
$DF82	.byte $7f	; INVALID OPCODE !!!
$DF83	.byte $97	; INVALID OPCODE !!!
$DF84	CPX #$e0	;
$DF86	LDY #$88	;
$DF88	BVS $DFFA	;
$DF8A	DEY		;
$DF8B	LDY #$03	;
$DF8D	CLI		;
$DF8E	SEI		;
$DF8F	.byte $04	; INVALID OPCODE !!!
$DF90	SEI		;
$DF91	SEI		;
$DF92	.byte $04	; INVALID OPCODE !!!
$DF93	TYA		;
$DF94	SEI		;
$DF95	.byte $04	; INVALID OPCODE !!!
$DF96	ORA $C8  	;
$DF98	SEC		;
$DF99	ORA $38  	;
$DF9B	RTI		; (within an if statement) 
$DF9C	ORA $58  	;
$DF9E	SEI		;
$DF9F	.byte $04	; INVALID OPCODE !!!
$DFA0	SEI		;
$DFA1	SEI		;
$DFA2	.byte $04	; INVALID OPCODE !!!
$DFA3	TYA		;
$DFA4	SEI		;
$DFA5	.byte $04	; INVALID OPCODE !!!
$DFA6	BRK		;
$DFA7	ORA $94  	;
$DFA9	LDY #$06	;
$DFAB	STY $48  	;
$DFAD	ORA $34  	;
$DFAF	BVS $DFB5	;
$DFB1	.byte $64	; INVALID OPCODE !!!
$DFB2	.byte $80	; INVALID OPCODE !!!
$DFB3	.byte $04	; INVALID OPCODE !!!
$DFB4	LDY $0478,X	;
$DFB7	ASL $5C  	;
$DFB9	CLC		;
$DFBA	ASL $24  	;
$DFBC	BVC $DFC3	;
$DFBE	.byte $64	; INVALID OPCODE !!!
$DFBF	RTI		; (within an if statement) 
$DFC0	ORA $C4  	;
$DFC2	SEC		;
$DFC3	ORA $54  	;
$DFC5	BCC $DFCB	;
$DFC7	.byte $9c	; INVALID OPCODE !!!
$DFC8	BCC $DFCE	;
$DFCA	ASL $10  	;
$DFCC	JSR $D806	;
$DFCF	JSR $B806	;
$DFD2	SEC		;
$DFD3	ORA $98  	;
$DFD5	PHA		;
$DFD6	ORA $58  	;
$DFD8	PLA		;
$DFD9	ORA $38  	;
$DFDB	SEI		;
$DFDC	.byte $04	; INVALID OPCODE !!!
$DFDD	ORA $54  	;
$DFDF	TYA		;
$DFE0	ORA $94  	;
$DFE2	TYA		;
$DFE3	ORA $6C  	;
$DFE5	AND $9406,Y	;
$DFE8	AND ($06),Y	;
$DFEA	LDY $0659,X	;
$DFED	ORA $50  	;
$DFEF	PLP		;
$DFF0	ASL $A8  	;
$DFF2	PLP		;
$DFF3	ASL $24  	;
$DFF5	BVC $DFFD	;
$DFF7	CPY $0650	;
$DFFA	BVS $DF7C	;
$DFFC	.byte $04	; INVALID OPCODE !!!
$DFFD	ORA $50  	;
$DFFF	JSR $C806	;
$E002	JSR $8406	;
$E005	PHA		;
$E006	ORA $44  	;
$E008	BVS $E00F	;
$E00A	SEI		;
$E00B	LDY #$04	;
$E00D	ASL $28  	;
$E00F	JSR $C806	;
$E012	JSR $4806	; unknown register 
$E015	BVC $E01C	;
$E017	BCS $E069	;
$E019	ORA $5C  	;
$E01B	.byte $80	; INVALID OPCODE !!!
$E01C	.byte $04	; INVALID OPCODE !!!
$E01D	STY $80,X	;
$E01F	.byte $04	; INVALID OPCODE !!!
$E020	ASL $20  	;
$E022	.byte $80	; INVALID OPCODE !!!
$E023	.byte $04	; INVALID OPCODE !!!
$E024	RTI		; (within an if statement) 
$E025	PLA		;
$E026	ORA $60  	;
$E028	BVC $E030	;
$E02A	LDY #$50	;
$E02C	ASL $C0  	;
$E02E	PLA		;
$E02F	ORA $E0  	;
$E031	.byte $80	; INVALID OPCODE !!!
$E032	.byte $04	; INVALID OPCODE !!!
$E033	PHP		;
$E034	PHP		;
$E035	BEQ $E03F	;
$E037	PHP		;
$E038	BRK		;
$E039	BRK		;
$E03A	BRK		;
$E03B	BRK		;
$E03C	PHP		;
$E03D	PHP		;
$E03E	PHP		;
$E03F	BRK		;
$E040	BRK		;
$E041	ORA ($08,X)	;
$E043	PHP		;
$E044	ORA #$00	;
$E046	BRK		;
$E047	.byte $ff	; INVALID OPCODE !!!
$E048	PHP		;
$E049	PHP		;
$E04A	.byte $07	; INVALID OPCODE !!!
$E04B	INC $0000,X	;
$E04E	ASL $08  	;
$E050	PHP		;
$E051	.byte $02	; INVALID OPCODE !!!
$E052	BRK		;
$E053	BRK		;
$E054	ASL A		;
$E055	PHP		;
$E056	PHP		;
$E057	.byte $02	; INVALID OPCODE !!!
$E058	BRK		;
$E059	ORA ($0A,X)	;
$E05B	PHP		;
$E05C	ORA #$04	;
$E05E	BRK		;
$E05F	BRK		;
$E060	.byte $0c	; INVALID OPCODE !!!
$E061	PHP		;
$E062	PHP		;
$E063	BRK		;
$E064	BRK		;
$E065	INC $0808,X	;
$E068	ASL $FD  	;
$E06A	SBC $05FD,X	;
$E06D	ORA $05  	;
$E06F	PHP		;
$E070	PHP		;
$E071	PHP		;
$E072	BRK		;
$E073	BRK		;
$E074	BRK		;
$E075	PHP		;
$E076	PHP		;
$E077	.byte $07	; INVALID OPCODE !!!
$E078	BRK		;
$E079	BRK		;
$E07A	.byte $ff	; INVALID OPCODE !!!
$E07B	PHP		;
$E07C	PHP		;
$E07D	ORA #$00	;
$E07F	BRK		;
$E080	ORA ($0A,X)	;
$E082	PHP		;
$E083	PHP		;
$E084	.byte $02	; INVALID OPCODE !!!
$E085	BRK		;
$E086	BRK		;
$E087	ASL $08  	;
$E089	PHP		;
$E08A	INC $0000,X	;
$E08D	ASL $08  	;
$E08F	.byte $07	; INVALID OPCODE !!!
$E090	INC $FF00,X	;
$E093	.byte $04	; INVALID OPCODE !!!
$E094	PHP		;
$E095	PHP		;
$E096	.byte $fc	; INVALID OPCODE !!!
$E097	BRK		;
$E098	BRK		;
$E099	PHP		;
$E09A	PHP		;
$E09B	ASL A		;
$E09C	BRK		;
$E09D	BRK		;
$E09E	.byte $02	; INVALID OPCODE !!!
$E09F	.byte $0b	; INVALID OPCODE !!!
$E0A0	.byte $0b	; INVALID OPCODE !!!
$E0A1	.byte $0b	; INVALID OPCODE !!!
$E0A2	.byte $03	; INVALID OPCODE !!!
$E0A3	.byte $03	; INVALID OPCODE !!!
$E0A4	.byte $03	; INVALID OPCODE !!!
$E0A5	BRK		;
$E0A6	BRK		;
$E0A7	ORA ($02,X)	;
$E0A9	.byte $03	; INVALID OPCODE !!!
$E0AA	.byte $04	; INVALID OPCODE !!!
$E0AB	ORA $00  	;
$E0AD	BRK		;
$E0AE	ORA ($02,X)	;
$E0B0	.byte $03	; INVALID OPCODE !!!
$E0B1	ASL $07  	;
$E0B3	BRK		;
$E0B4	BRK		;
$E0B5	ORA ($02,X)	;
$E0B7	.byte $03	; INVALID OPCODE !!!
$E0B8	ASL $08  	;
$E0BA	BRK		;
$E0BB	ORA #$0a	;
$E0BD	.byte $02	; INVALID OPCODE !!!
$E0BE	.byte $0b	; INVALID OPCODE !!!
$E0BF	.byte $0c	; INVALID OPCODE !!!
$E0C0	ORA $00  	;
$E0C2	BRK		;
$E0C3	ORA ($02,X)	;
$E0C5	.byte $03	; INVALID OPCODE !!!
$E0C6	.byte $04	; INVALID OPCODE !!!
$E0C7	ORA $00  	;
$E0C9	BRK		;
$E0CA	ORA ($02,X)	;
$E0CC	ORA $050E	;
$E0CF	BRK		;
$E0D0	.byte $1a	; INVALID OPCODE !!!
$E0D1	.byte $1b	; INVALID OPCODE !!!
$E0D2	.byte $1c	; INVALID OPCODE !!!
$E0D3	ORA $1F1E,X	;
$E0D6	ORA ($1A,X)	;
$E0D8	.byte $1b	; INVALID OPCODE !!!
$E0D9	JSR $1E1D	;
$E0DC	.byte $fc	; INVALID OPCODE !!!
$E0DD	BRK		;
$E0DE	.byte $1a	; INVALID OPCODE !!!
$E0DF	AND ($22,X)	;
$E0E1	ORA $2423,X	;
$E0E4	BRK		;
$E0E5	BRK		;
$E0E6	SEC		;
$E0E7	AND $0D,X	;
$E0E9	AND $0037,Y	;
$E0EC	BRK		;
$E0ED	.byte $34	; INVALID OPCODE !!!
$E0EE	AND $03,X	;
$E0F0	ROL $37,X	;
$E0F2	BRK		;
$E0F3	ORA #$3a	;
$E0F5	AND $0B,X	;
$E0F7	.byte $3b	; INVALID OPCODE !!!
$E0F8	.byte $37	; INVALID OPCODE !!!
$E0F9	BRK		;
$E0FA	DEC $D0CF	;
$E0FD	CMP ($D2),Y	;
$E0FF	.byte $d3	; INVALID OPCODE !!!
$E100	BRK		;
$E101	AND $26  	;
$E103	.byte $27	; INVALID OPCODE !!!
$E104	PLP		;
$E105	AND #$2a	;
$E107	ORA ($28,X)	;
$E109	AND #$2c	;
$E10B	AND $26  	;
$E10D	.byte $2b	; INVALID OPCODE !!!
$E10E	BRK		;
$E10F	JMP $02CC	;

$E112	EOR $05CD	;
$E115	BRK		;
$E116	JMP $222F	;

$E119	EOR $2430	;
$E11C	.byte $07	; INVALID OPCODE !!!
$E11D	JMP $352F	;

$E120	EOR $3730	;
$E123	.byte $02	; INVALID OPCODE !!!
$E124	JMP $272F	;

$E127	EOR $2A30	;
$E12A	.byte $07	; INVALID OPCODE !!!
$E12B	JMP $2B2F	;

$E12E	EOR $2C30	;
$E131	BRK		;
$E132	.byte $0f	; INVALID OPCODE !!!
$E133	BPL $E137	;
$E135	ORA ($12),Y	;
$E137	ORA $00  	;
$E139	.byte $0f	; INVALID OPCODE !!!
$E13A	BPL $E13E	;
$E13C	ORA ($19),Y	;
$E13E	.byte $07	; INVALID OPCODE !!!
$E13F	BRK		;
$E140	.byte $0f	; INVALID OPCODE !!!
$E141	BPL $E145	;
$E143	ORA ($19),Y	;
$E145	PHP		;
$E146	BRK		;
$E147	.byte $13	; INVALID OPCODE !!!
$E148	.byte $14	; INVALID OPCODE !!!
$E149	.byte $02	; INVALID OPCODE !!!
$E14A	ORA $16,X	;
$E14C	ORA $00  	;
$E14E	.byte $0f	; INVALID OPCODE !!!
$E14F	BPL $E153	;
$E151	ORA ($12),Y	;
$E153	ORA $03  	;
$E155	.byte $13	; INVALID OPCODE !!!
$E156	.byte $17	; INVALID OPCODE !!!
$E157	.byte $02	; INVALID OPCODE !!!
$E158	ORA $18,X	;
$E15A	ORA $04  	;
$E15C	.byte $13	; INVALID OPCODE !!!
$E15D	AND $151C	;
$E160	ROL $051F	;
$E163	.byte $13	; INVALID OPCODE !!!
$E164	AND $1520	;
$E167	ROL $04FC	;
$E16A	.byte $13	; INVALID OPCODE !!!
$E16B	.byte $2f	; INVALID OPCODE !!!
$E16C	.byte $22	; INVALID OPCODE !!!
$E16D	ORA $30,X	;
$E16F	BIT $00  	;
$E171	.byte $13	; INVALID OPCODE !!!
$E172	.byte $3c	; INVALID OPCODE !!!
$E173	AND $15,X	;
$E175	AND $0037,X	;
$E178	.byte $0f	; INVALID OPCODE !!!
$E179	RTI		;

$E17A	AND $11,X	;
$E17C	EOR ($37,X)	;
$E17E	.byte $03	; INVALID OPCODE !!!
$E17F	.byte $13	; INVALID OPCODE !!!
$E180	ROL $1535,X	;
$E183	.byte $3f	; INVALID OPCODE !!!
$E184	.byte $37	; INVALID OPCODE !!!
$E185	BRK		;
$E186	.byte $d4	; INVALID OPCODE !!!
$E187	CMP $D0,X	;
$E189	DEC $D7,X	;
$E18B	.byte $d3	; INVALID OPCODE !!!
$E18C	BRK		;
$E18D	AND $31  	;
$E18F	.byte $27	; INVALID OPCODE !!!
$E190	.byte $32	; INVALID OPCODE !!!
$E191	.byte $33	; INVALID OPCODE !!!
$E192	ROL A		;
$E193	.byte $02	; INVALID OPCODE !!!
$E194	AND $31  	;
$E196	.byte $27	; INVALID OPCODE !!!
$E197	.byte $32	; INVALID OPCODE !!!
$E198	.byte $33	; INVALID OPCODE !!!
$E199	ROL A		;
$E19A	BRK		;
$E19B	.byte $fc	; INVALID OPCODE !!!
$E19C	PHA		;
$E19D	.byte $42	; INVALID OPCODE !!!
$E19E	.byte $fc	; INVALID OPCODE !!!
$E19F	EOR #$43	;
$E1A1	BRK		;
$E1A2	.byte $fc	; INVALID OPCODE !!!
$E1A3	PHA		;
$E1A4	.byte $44	; INVALID OPCODE !!!
$E1A5	.byte $fc	; INVALID OPCODE !!!
$E1A6	EOR #$45	;
$E1A8	BRK		;
$E1A9	.byte $fc	; INVALID OPCODE !!!
$E1AA	LSR A		;
$E1AB	LSR $FC  	;
$E1AD	.byte $4b	; INVALID OPCODE !!!
$E1AE	.byte $47	; INVALID OPCODE !!!
$E1AF	BRK		;
$E1B0	.byte $fc	; INVALID OPCODE !!!
$E1B1	LDY $A5  	;
$E1B3	.byte $fc	; INVALID OPCODE !!!
$E1B4	LDX $A7  	;
$E1B6	PHP		;
$E1B7	.byte $fc	; INVALID OPCODE !!!
$E1B8	ADC ($FC),Y	;
$E1BA	.byte $fc	; INVALID OPCODE !!!
$E1BB	.byte $72	; INVALID OPCODE !!!
$E1BC	.byte $73	; INVALID OPCODE !!!
$E1BD	PHP		;
$E1BE	.byte $fc	; INVALID OPCODE !!!
$E1BF	.byte $74	; INVALID OPCODE !!!
$E1C0	.byte $fc	; INVALID OPCODE !!!
$E1C1	.byte $fc	; INVALID OPCODE !!!
$E1C2	ADC $76,X	;
$E1C4	PHP		;
$E1C5	.byte $fc	; INVALID OPCODE !!!
$E1C6	ADC ($77),Y	;
$E1C8	.byte $fc	; INVALID OPCODE !!!
$E1C9	.byte $72	; INVALID OPCODE !!!
$E1CA	.byte $73	; INVALID OPCODE !!!
$E1CB	PHP		;
$E1CC	.byte $fc	; INVALID OPCODE !!!
$E1CD	.byte $74	; INVALID OPCODE !!!
$E1CE	.byte $77	; INVALID OPCODE !!!
$E1CF	.byte $fc	; INVALID OPCODE !!!
$E1D0	ADC $76,X	;
$E1D2	PHP		;
$E1D3	.byte $fc	; INVALID OPCODE !!!
$E1D4	ADC ($78),Y	;
$E1D6	.byte $fc	; INVALID OPCODE !!!
$E1D7	.byte $72	; INVALID OPCODE !!!
$E1D8	.byte $73	; INVALID OPCODE !!!
$E1D9	PHP		;
$E1DA	.byte $fc	; INVALID OPCODE !!!
$E1DB	.byte $74	; INVALID OPCODE !!!
$E1DC	SEI		;
$E1DD	.byte $fc	; INVALID OPCODE !!!
$E1DE	ADC $76,X	;
$E1E0	PHP		;
$E1E1	.byte $fc	; INVALID OPCODE !!!
$E1E2	ADC ($79),Y	;
$E1E4	.byte $fc	; INVALID OPCODE !!!
$E1E5	.byte $72	; INVALID OPCODE !!!
$E1E6	.byte $73	; INVALID OPCODE !!!
$E1E7	PHP		;
$E1E8	.byte $fc	; INVALID OPCODE !!!
$E1E9	.byte $74	; INVALID OPCODE !!!
$E1EA	ADC $75FC,Y	; saved-to-battery RAM 
$E1ED	ROR $00,X	;
$E1EF	LSR $504F	; MMC5 register or expansion RAM 
$E1F2	EOR ($52),Y	;
$E1F4	.byte $53	; INVALID OPCODE !!!
$E1F5	BRK		;
$E1F6	LSR $504F	; MMC5 register or expansion RAM 
$E1F9	EOR ($5E),Y	;
$E1FB	CLI		;
$E1FC	BRK		;
$E1FD	LSR $504F	; MMC5 register or expansion RAM 
$E200	EOR ($5E),Y	;
$E202	EOR $5400,X	; MMC5 register or expansion RAM 
$E205	EOR $50,X	;
$E207	LSR $57,X	;
$E209	.byte $53	; INVALID OPCODE !!!
$E20A	BRK		;
$E20B	LSR $504F	; MMC5 register or expansion RAM 
$E20E	EOR ($52),Y	;
$E210	.byte $53	; INVALID OPCODE !!!
$E211	BRK		;
$E212	EOR $505A,Y	; MMC5 register or expansion RAM 
$E215	.byte $5b	; INVALID OPCODE !!!
$E216	.byte $5c	; INVALID OPCODE !!!
$E217	.byte $53	; INVALID OPCODE !!!
$E218	BRK		;
$E219	.byte $fc	; INVALID OPCODE !!!
$E21A	.byte $5f	; INVALID OPCODE !!!
$E21B	RTS		;

$E21C	.byte $fc	; INVALID OPCODE !!!
$E21D	ADC ($62,X)	;
$E21F	ASL $63  	;
$E221	.byte $64	; INVALID OPCODE !!!
$E222	RTS		;

$E223	.byte $fc	; INVALID OPCODE !!!
$E224	ADC $62  	;
$E226	BRK		;
$E227	ROR $67  	;
$E229	RTS		;

$E22A	PLA		;
$E22B	ADC #$62	;
$E22D	BRK		;
$E22E	ROR A		;
$E22F	.byte $67	; INVALID OPCODE !!!
$E230	RTS		;

$E231	.byte $6b	; INVALID OPCODE !!!
$E232	ADC #$62	;
$E234	BRK		;
$E235	.byte $fc	; INVALID OPCODE !!!
$E236	JMP ($FC6D)	;
$E239	ROR $006F	;
$E23C	.byte $fc	; INVALID OPCODE !!!
$E23D	JMP ($FC6D)	;
$E240	ROR $A570	;
$E243	LDY $ACB3	;
$E246	TSX		;
$E247	CMP ($C8,X)	;
$E249	CMP ($CF,X)	;
$E24B	DEC $DD,X	;
$E24D	DEC $E4,X	;
$E24F	.byte $eb	; INVALID OPCODE !!!
$E250	.byte $f2	; INVALID OPCODE !!!
$E251	.byte $eb	; INVALID OPCODE !!!
$E252	BRK		;
$E253	BRK		;
$E254	BRK		;
$E255	BRK		;
$E256	.byte $07	; INVALID OPCODE !!!
$E257	.byte $07	; INVALID OPCODE !!!
$E258	.byte $07	; INVALID OPCODE !!!
$E259	.byte $07	; INVALID OPCODE !!!
$E25A	ASL $0E0E	;
$E25D	ASL $1515	;
$E260	ORA $15,X	;
$E262	.byte $1c	; INVALID OPCODE !!!
$E263	.byte $1c	; INVALID OPCODE !!!
$E264	.byte $1c	; INVALID OPCODE !!!
$E265	.byte $1c	; INVALID OPCODE !!!
$E266	.byte $23	; INVALID OPCODE !!!
$E267	.byte $23	; INVALID OPCODE !!!
$E268	.byte $23	; INVALID OPCODE !!!
$E269	.byte $23	; INVALID OPCODE !!!
$E26A	ROL A		;
$E26B	ROL A		;
$E26C	ROL A		;
$E26D	ROL A		;
$E26E	AND ($38),Y	;
$E270	.byte $3f	; INVALID OPCODE !!!
$E271	SEC		;
$E272	LSR $4D  	;
$E274	.byte $54	; INVALID OPCODE !!!
$E275	EOR $625B	; saved-to-battery RAM 
$E278	ADC #$62	;
$E27A	BVS $E2F3	;
$E27C	ROR $8C77,X	;
$E27F	STY $8C8C	;
$E282	.byte $93	; INVALID OPCODE !!!
$E283	.byte $93	; INVALID OPCODE !!!
$E284	.byte $93	; INVALID OPCODE !!!
$E285	.byte $93	; INVALID OPCODE !!!
$E286	TXS		;
$E287	LDA ($A8,X)	;
$E289	LDA ($AF,X)	;
$E28B	TXS		;
$E28C	.byte $af	; INVALID OPCODE !!!
$E28D	TXS		;
$E28E	CPX #$e0	;
$E290	CPX #$e0	;
$E292	CPX #$e0	;
$E294	CPX #$e0	;
$E296	CPX #$e0	;
$E298	CPX #$e0	;
$E29A	CPX #$e0	;
$E29C	CPX #$e0	;
$E29E	SBC ($E1,X)	;
$E2A0	SBC ($E1,X)	;
$E2A2	SBC ($E1,X)	;
$E2A4	SBC ($E1,X)	;
$E2A6	SBC ($E1,X)	;
$E2A8	SBC ($E1,X)	;
$E2AA	SBC ($E1,X)	;
$E2AC	SBC ($E1,X)	;
$E2AE	SBC ($E1,X)	;
$E2B0	SBC ($E1,X)	;
$E2B2	SBC ($E1,X)	;
$E2B4	SBC ($E1,X)	;
$E2B6	SBC ($E1,X)	;
$E2B8	SBC ($E1,X)	;
$E2BA	SBC ($E1,X)	;
$E2BC	SBC ($E1,X)	;
$E2BE	SBC ($E1,X)	;
$E2C0	SBC ($E1,X)	;
$E2C2	SBC ($E1,X)	;
$E2C4	SBC ($E1,X)	;
$E2C6	SBC ($E1,X)	;
$E2C8	SBC ($E1,X)	;
$E2CA	SBC ($E1,X)	;
$E2CC	SBC ($E1,X)	;
$E2CE	SBC ($E1,X)	;
$E2D0	SBC ($E1,X)	;
$E2D2	SBC ($E1,X)	;
$E2D4	SBC ($E1,X)	;
$E2D6	SBC ($E1,X)	;
$E2D8	SBC ($E1,X)	;
$E2DA	.byte $77	; INVALID OPCODE !!!
$E2DB	.byte $77	; INVALID OPCODE !!!
$E2DC	STA $77  	;
$E2DE	.byte $eb	; INVALID OPCODE !!!
$E2DF	.byte $eb	; INVALID OPCODE !!!
$E2E0	SBC $E1EB,Y	;
$E2E3	SBC ($E1,X)	;
$E2E5	SBC ($E0,X)	;
$E2E7	CPX #$e0	;
$E2E9	CPX #$ee	;
$E2EB	SBC $FC,X	;
$E2ED	SBC $03,X	;
$E2EF	ASL A		;
$E2F0	ORA ($0A),Y	;
$E2F2	.byte $34	; INVALID OPCODE !!!
$E2F3	.byte $34	; INVALID OPCODE !!!
$E2F4	CLC		;
$E2F5	.byte $1f	; INVALID OPCODE !!!
$E2F6	ROL $26  	;
$E2F8	ROL $26  	;
$E2FA	LDX $B6,Y 	;
$E2FC	LDX $B6,Y 	;
$E2FE	LDX $BD,Y 	;
$E300	LDX $BD,Y 	;
$E302	CPY $CB  	;
$E304	CPY $CB  	;
$E306	.byte $d2	; INVALID OPCODE !!!
$E307	CMP $D9D2,Y	;
$E30A	CPX #$e7	;
$E30C	CPX #$e7	;
$E30E	.byte $34	; INVALID OPCODE !!!
$E30F	.byte $3b	; INVALID OPCODE !!!
$E310	.byte $34	; INVALID OPCODE !!!
$E311	.byte $3b	; INVALID OPCODE !!!
$E312	AND $2D2D	;
$E315	AND $E1E1	;
$E318	SBC ($E1,X)	;
$E31A	.byte $e2	; INVALID OPCODE !!!
$E31B	.byte $e2	; INVALID OPCODE !!!
$E31C	.byte $e2	; INVALID OPCODE !!!
$E31D	.byte $e2	; INVALID OPCODE !!!
$E31E	.byte $e2	; INVALID OPCODE !!!
$E31F	.byte $e2	; INVALID OPCODE !!!
$E320	.byte $e2	; INVALID OPCODE !!!
$E321	.byte $e2	; INVALID OPCODE !!!
$E322	.byte $e2	; INVALID OPCODE !!!
$E323	.byte $e2	; INVALID OPCODE !!!
$E324	.byte $e2	; INVALID OPCODE !!!
$E325	.byte $e2	; INVALID OPCODE !!!
$E326	SBC ($E1,X)	;
$E328	SBC ($E1,X)	;
$E32A	SBC ($E1,X)	;
$E32C	SBC ($E1,X)	;
$E32E	SBC ($E1,X)	;
$E330	SBC ($E1,X)	;
$E332	SBC ($E1,X)	;
$E334	SBC ($E1,X)	;
$E336	SBC ($E1,X)	;
$E338	SBC ($E1,X)	;
$E33A	.byte $e2	; INVALID OPCODE !!!
$E33B	.byte $e2	; INVALID OPCODE !!!
$E33C	.byte $e2	; INVALID OPCODE !!!
$E33D	.byte $e2	; INVALID OPCODE !!!
$E33E	.byte $e2	; INVALID OPCODE !!!
$E33F	.byte $e2	; INVALID OPCODE !!!
$E340	.byte $e2	; INVALID OPCODE !!!
$E341	.byte $e2	; INVALID OPCODE !!!
$E342	.byte $44	; INVALID OPCODE !!!
$E343	BIT $0000	;
$E346	BRK		;
$E347	.byte $04	; INVALID OPCODE !!!
$E348	BIT $08  	;
$E34A	BRK		;
$E34B	BRK		;
$E34C	.byte $fc	; INVALID OPCODE !!!
$E34D	.byte $fc	; INVALID OPCODE !!!
$E34E	INC $00FC,X	;
$E351	.byte $7b	; INVALID OPCODE !!!
$E352	.byte $fc	; INVALID OPCODE !!!
$E353	.byte $fc	; INVALID OPCODE !!!
$E354	.byte $7c	; INVALID OPCODE !!!
$E355	.byte $fc	; INVALID OPCODE !!!
$E356	.byte $fc	; INVALID OPCODE !!!
$E357	BRK		;
$E358	ADC $FC7E,X	;
$E35B	.byte $7f	; INVALID OPCODE !!!
$E35C	.byte $80	; INVALID OPCODE !!!
$E35D	.byte $fc	; INVALID OPCODE !!!
$E35E	BRK		;
$E35F	STA ($82,X)	;
$E361	.byte $83	; INVALID OPCODE !!!
$E362	STY $85  	;
$E364	STX $00  	;
$E366	.byte $87	; INVALID OPCODE !!!
$E367	DEY		;
$E368	.byte $fc	; INVALID OPCODE !!!
$E369	.byte $89	; INVALID OPCODE !!!
$E36A	TXA		;
$E36B	.byte $fc	; INVALID OPCODE !!!
$E36C	BRK		;
$E36D	.byte $8b	; INVALID OPCODE !!!
$E36E	STY $8DFC	;
$E371	STX $00FC	;
$E374	.byte $8f	; INVALID OPCODE !!!
$E375	BCC $E373	;
$E377	.byte $fc	; INVALID OPCODE !!!
$E378	.byte $fc	; INVALID OPCODE !!!
$E379	.byte $fc	; INVALID OPCODE !!!
$E37A	.byte $4b	; INVALID OPCODE !!!
$E37B	BVC $E3D4	;
$E37D	LSR $6C65,X	; saved-to-battery RAM 
$E380	.byte $73	; INVALID OPCODE !!!
$E381	.byte $e3	; INVALID OPCODE !!!
$E382	.byte $e3	; INVALID OPCODE !!!
$E383	.byte $e3	; INVALID OPCODE !!!
$E384	.byte $e3	; INVALID OPCODE !!!
$E385	.byte $e3	; INVALID OPCODE !!!
$E386	.byte $e3	; INVALID OPCODE !!!
$E387	.byte $e3	; INVALID OPCODE !!!
$E388	JSR $5038	; MMC5 register or expansion RAM 
$E38B	PLA		;
$E38C	.byte $80	; INVALID OPCODE !!!
$E38D	TYA		;
$E38E	BCS $E358	;
$E390	PHP		;
$E391	JSR $C838	;
$E394	BCS $E32E	;
$E396	.byte $80	; INVALID OPCODE !!!
$E397	PLA		;
$E398	BVC $E3A2	;

function_E39A:
$E39A	LDA $E388,X	;
$E39D	STA $1F  	;
$E39F	LDA $19  	;
$E3A1	LSR A		;
$E3A2	BCC $E3A9	;
$E3A4	LDA $E391,X	;
$E3A7	STA $1F  	;
$E3A9	LDA #$02	;
$E3AB	STA $20  	;
$E3AD	LDA $88,X	;
$E3AF	BPL $E3C5	;
$E3B1	CMP #$ff	;
$E3B3	BEQ $E3B8	;
$E3B5	JMP $E4CB	; (in an if statement) 
$E3B8	LDY #$14	;
$E3BA	LDA #$f0	;
$E3BC	STA ($1F),Y	;
$E3BE	DEY		;
$E3BF	DEY		;
$E3C0	DEY		;
$E3C1	DEY		;
$E3C2	BPL $E3BA	;
$E3C4	RTS		; (within an if statement) 
$E3C5	CPX #$08	;
$E3C7	BEQ $E411	;
$E3C9	LDA $7F,X	;
$E3CB	ASL A		;
$E3CC	ASL A		;
$E3CD	ADC $0436,X	;
$E3D0	CPX #$02	;
$E3D2	BCS $E3FE	;
$E3D4	LDY $88,X	;
$E3D6	ADC $E342,Y	;
$E3D9	TAY		;
$E3DA	LDA $E242,Y	;
$E3DD	STA $1D  	;
$E3DF	LDA $E28E,Y	;
$E3E2	STA $1E  	;
$E3E4	LDA $BD,X	;
$E3E6	BEQ $E41F	;
$E3E8	LDY $88,X	;
$E3EA	LDA $E345,Y	;
$E3ED	ADC $0436,X	;
$E3F0	TAY		;
$E3F1	LDA $E2DA,Y	;
$E3F4	STA $1D  	;
$E3F6	LDA $E2E2,Y	;
$E3F9	STA $1E  	;
$E3FB	JMP $E41F	; (in an if statement) 
$E3FE	LDY $88,X	;
$E400	CLC		;
$E401	ADC $E348,Y	;
$E404	TAY		;
$E405	LDA $E2EA,Y	;
$E408	STA $1D  	;
$E40A	LDA $E316,Y	;
$E40D	STA $1E  	;
$E40F	BNE $E41F	;
$E411	LDY $7F,X	;
$E413	BMI $E3B8	;
$E415	LDA $E37A,Y	;
$E418	STA $1D  	;
$E41A	LDA $E381,Y	;
$E41D	STA $1E  	;
$E41F	LDA $91,X	;
$E421	STA $15  	;
$E423	LDA $9A,X	;
$E425	STA $12  	;
$E427	TXA		;
$E428	BEQ $E43A	;
$E42A	CPX #$01	;
$E42C	BNE $E432	;
$E42E	LDA #$01	;
$E430	BNE $E43A	;
$E432	LDA $0451,X	;
$E435	CLC		;
$E436	ADC #$02	;
$E438	AND #$03	;
$E43A	LDY $0448,X	;
$E43D	BEQ $E441	;
$E43F	ORA #$40	;
$E441	LDY $88,X	;
$E443	CPY #$02	;
$E445	BNE $E44F	;
$E447	LDY $7F,X	;
$E449	CPY #$05	;
$E44B	BNE $E44F	;
$E44D	EOR #$40	;
$E44F	LDY $9A,X	;
$E451	CPY #$c9	;
$E453	BCS $E459	;
$E455	CPX #$09	;
$E457	BNE $E45B	;
$E459	ORA #$20	;
$E45B	STA $14  	;
$E45D	LDA #$39	;
$E45F	STA $21  	;
$E461	LDA #$e0	;
$E463	STA $22  	;
$E465	LDA $0448,X	;
$E468	BEQ $E472	;
$E46A	LDA #$6f	;
$E46C	STA $21  	;
$E46E	LDA #$e0	;
$E470	STA $22  	;
$E472	LDY #$00	;
$E474	LDA ($1D),Y	;
$E476	INC $1D  	;
$E478	BNE $E47C	;
$E47A	INC $1E  	;
$E47C	ASL A		;
$E47D	STA $13  	;
$E47F	ASL A		;
$E480	ADC $13  	;
$E482	ADC $21  	;
$E484	STA $21  	;
$E486	BCC $E48A	;
$E488	INC $22  	;
$E48A	TXA		;
$E48B	PHA		;
$E48C	LDX #$05	;
$E48E	LDY #$00	;
$E490	LDA $12  	;
$E492	CLC		;
$E493	ADC $E033,X	;
$E496	STA ($1F),Y	;
$E498	STA $12  	;
$E49A	INY		;
$E49B	STY $13  	;
$E49D	LDY #$00	;
$E49F	LDA ($1D),Y	;
$E4A1	INC $1D  	;
$E4A3	BNE $E4A7	;
$E4A5	INC $1E  	;
$E4A7	LDY $13  	;
$E4A9	STA ($1F),Y	;
$E4AB	INY		;
$E4AC	LDA $14  	;
$E4AE	STA ($1F),Y	;
$E4B0	INY		;
$E4B1	STY $13  	;
$E4B3	LDY #$00	;
$E4B5	LDA $15  	;
$E4B7	CLC		;
$E4B8	ADC ($21),Y	;
$E4BA	INC $21  	;
$E4BC	BNE $E4C0	;
$E4BE	INC $22  	;
$E4C0	LDY $13  	;
$E4C2	STA ($1F),Y	;
$E4C4	INY		;
$E4C5	DEX		;
$E4C6	BPL $E490	;
$E4C8	PLA		;
$E4C9	TAX		;
$E4CA	RTS		;

$E4CB	TXA		;
$E4CC	PHA		;
$E4CD	LDY $1F  	;
$E4CF	LDA $9A,X	;
$E4D1	STA $0200,Y	;
$E4D4	STA $0204,Y	;
$E4D7	CLC		;
$E4D8	ADC #$08	;
$E4DA	STA $0208,Y	;
$E4DD	STA $020C,Y	;
$E4E0	LDA #$f0	;
$E4E2	STA $0210,Y	;
$E4E5	STA $0214,Y	;
$E4E8	LDA $91,X	;
$E4EA	STA $0203,Y	;
$E4ED	STA $020B,Y	;
$E4F0	CLC		;
$E4F1	ADC #$08	;
$E4F3	STA $0207,Y	;
$E4F6	STA $020F,Y	;
$E4F9	LDA $9A,X	;
$E4FB	CMP #$d0	;
$E4FD	LDA #$03	;
$E4FF	BCC $E503	;
$E501	LDA #$23	;
$E503	STA $0202,Y	;
$E506	LDA $7F,X	;
$E508	BNE $E549	;
$E50A	LDA $0202,Y	;
$E50D	STA $0206,Y	;
$E510	STA $020A,Y	;
$E513	STA $020E,Y	;
$E516	LDA #$da	;
$E518	STA $0201,Y	;
$E51B	LDA #$db	;
$E51D	STA $0205,Y	;
$E520	LDA #$dc	;
$E522	STA $0209,Y	;
$E525	LDA #$dd	;
$E527	STA $020D,Y	;
$E52A	LDX $1F  	;
$E52C	LDA $19  	;
$E52E	AND #$20	;
$E530	BEQ $E546	;
$E532	LDA $19  	;
$E534	AND #$40	;
$E536	BNE $E540	;
$E538	INC $0200,X	;
$E53B	INC $0204,X	;
$E53E	BNE $E546	;
$E540	INC $0203,X	;
$E543	INC $020B,X	;
$E546	PLA		;
$E547	TAX		;
$E548	RTS		; (within an if statement) 
$E549	LDA $0202,Y	;
$E54C	ORA #$40	;
$E54E	STA $0206,Y	;
$E551	ORA #$80	;
$E553	STA $020E,Y	;
$E556	AND #$bf	;
$E558	STA $020A,Y	;
$E55B	LDA #$de	;
$E55D	STA $0201,Y	;
$E560	STA $0205,Y	;
$E563	STA $0209,Y	;
$E566	STA $020D,Y	;
$E569	DEC $045A,X	;
$E56C	BPL $E57A	;
$E56E	LDA #$ff	;
$E570	STA $88,X	;
$E572	LDA #$f0	;
$E574	STA $9A,X	;
$E576	LDA #$04	;
$E578	STA $F1  	;
$E57A	PLA		;
$E57B	TAX		;
$E57C	RTS		;


function_E57D:
$E57D	LDX $BB  	;
$E57F	BMI $E5BA	;
$E581	LDA $E5BB,X	;
$E584	STA $1D  	;
$E586	LDA $E5C0,X	;
$E589	STA $1E  	;
$E58B	LDY #$00	;
$E58D	LDX #$00	;
$E58F	LDA ($1D),Y	;
$E591	STA $02E0,X	;
$E594	INY		;
$E595	INX		;
$E596	CMP #$f0	;
$E598	BNE $E59D	;
$E59A	INX		;
$E59B	INX		;
$E59C	INX		;
$E59D	CPX #$10	;
$E59F	BNE $E58F	;
$E5A1	LDY #$0f	;
$E5A3	LDA $02E0,Y	;
$E5A6	CLC		;
$E5A7	ADC $BC  	;
$E5A9	STA $02E0,Y	;
$E5AC	DEY		;
$E5AD	DEY		;
$E5AE	DEY		;
$E5AF	DEY		;
$E5B0	BPL $E5A3	;
$E5B2	LDA $19  	;
$E5B4	AND #$03	;
$E5B6	BNE $E5BA	;
$E5B8	DEC $BB  	;
$E5BA	RTS		;

$E5BB	.byte $f3	; INVALID OPCODE !!!
$E5BC	.byte $e3	; INVALID OPCODE !!!
$E5BD	DEC $CC,X	;
$E5BF	CMP $E5  	;
$E5C1	SBC $E5  	;
$E5C3	SBC $E5  	;
$E5C5	BNE $E575	;
$E5C7	.byte $03	; INVALID OPCODE !!!
$E5C8	.byte $04	; INVALID OPCODE !!!
$E5C9	BEQ $E5BB	;
$E5CB	BEQ $E595	;
$E5CD	.byte $af	; INVALID OPCODE !!!
$E5CE	.byte $03	; INVALID OPCODE !!!
$E5CF	.byte $04	; INVALID OPCODE !!!
$E5D0	BNE $E582	;
$E5D2	.byte $03	; INVALID OPCODE !!!
$E5D3	.byte $04	; INVALID OPCODE !!!
$E5D4	BEQ $E5C6	;
$E5D6	INY		;
$E5D7	LDA ($03),Y	;
$E5D9	.byte $fc	; INVALID OPCODE !!!
$E5DA	INY		;
$E5DB	.byte $b2	; INVALID OPCODE !!!
$E5DC	.byte $03	; INVALID OPCODE !!!
$E5DD	.byte $04	; INVALID OPCODE !!!
$E5DE	BNE $E593	;
$E5E0	.byte $03	; INVALID OPCODE !!!
$E5E1	.byte $04	; INVALID OPCODE !!!
$E5E2	BEQ $E5AC	;
$E5E4	LDY $03,X	;
$E5E6	BRK		;
$E5E7	INY		;
$E5E8	LDY $43,X	;
$E5EA	PHP		;
$E5EB	BNE $E5A2	;
$E5ED	.byte $03	; INVALID OPCODE !!!
$E5EE	BRK		;
$E5EF	BNE $E5A6	;
$E5F1	.byte $43	; INVALID OPCODE !!!
$E5F2	PHP		;
$E5F3	BEQ $E5E5	;
$E5F5	BEQ $E5E7	;
$E5F7	.byte $04	; INVALID OPCODE !!!
$E5F8	.byte $04	; INVALID OPCODE !!!
$E5F9	ORA $06  	;
$E5FB	.byte $03	; INVALID OPCODE !!!
$E5FC	.byte $03	; INVALID OPCODE !!!
$E5FD	.byte $03	; INVALID OPCODE !!!
$E5FE	ASL $0A  	;
$E600	ASL A		;
$E601	ASL A		;
$E602	ASL A		;
$E603	PLP		;
$E604	.byte $32	; INVALID OPCODE !!!
$E605	LSR $78  	;
$E607	BRK		;
$E608	BRK		;
$E609	BRK		;
$E60A	.byte $64	; INVALID OPCODE !!!
$E60B	BRK		;
$E60C	BRK		;
$E60D	BRK		;
$E60E	BRK		;
$E60F	ASL A		;
$E610	ASL $7032,X	; saved-to-battery RAM 
$E613	BRK		;
$E614	BRK		;
$E615	BRK		;
$E616	BVS $E618	;
$E618	BRK		;
$E619	BRK		;
$E61A	BRK		;
$E61B	.byte $14	; INVALID OPCODE !!!
$E61C	.byte $3c	; INVALID OPCODE !!!
$E61D	.byte $64	; INVALID OPCODE !!!
$E61E	LDY #$00	;
$E620	BRK		;
$E621	BRK		;
$E622	LDY #$00	;
$E624	BRK		;
$E625	BRK		;
$E626	BRK		;
$E627	BVS $E5D9	;
$E629	CPX #$40	;
$E62B	.byte $80	; INVALID OPCODE !!!
$E62C	.byte $80	; INVALID OPCODE !!!
$E62D	.byte $80	; INVALID OPCODE !!!
$E62E	RTI		;

$E62F	BRK		;
$E630	BRK		;
$E631	BRK		;
$E632	BRK		;
$E633	BRK		;
$E634	BRK		;
$E635	BRK		;
$E636	ORA ($00,X)	;
$E638	BRK		;
$E639	BRK		;
$E63A	ORA ($00,X)	;
$E63C	BRK		;
$E63D	BRK		;
$E63E	BRK		;
$E63F	BCC $E691	;
$E641	JSR $80C0	;
$E644	.byte $80	; INVALID OPCODE !!!
$E645	.byte $80	; INVALID OPCODE !!!
$E646	CPY #$00	;
$E648	BRK		;
$E649	BRK		;
$E64A	BRK		;
$E64B	.byte $ff	; INVALID OPCODE !!!
$E64C	.byte $ff	; INVALID OPCODE !!!
$E64D	.byte $ff	; INVALID OPCODE !!!
$E64E	INC $FFFF,X	;
$E651	.byte $ff	; INVALID OPCODE !!!
$E652	INC $0000,X	;
$E655	BRK		;
$E656	BRK		;
$E657	BVC $E5E9	;
$E659	CPY #$40	;
$E65B	RTI		; (within an if statement) 
$E65C	RTI		; (within an if statement) 
$E65D	RTI		; (within an if statement) 
$E65E	RTI		; (within an if statement) 
$E65F	BRK		;
$E660	BRK		;
$E661	BRK		;
$E662	BRK		;
$E663	BRK		;
$E664	BRK		;
$E665	BRK		;
$E666	ORA ($00,X)	;
$E668	BRK		;
$E669	BRK		;
$E66A	ORA ($02,X)	;
$E66C	.byte $02	; INVALID OPCODE !!!
$E66D	.byte $02	; INVALID OPCODE !!!
$E66E	.byte $02	; INVALID OPCODE !!!
$E66F	BCS $E6E1	;
$E671	RTI		; (within an if statement) 
$E672	CPY #$c0	;
$E674	CPY #$c0	;
$E676	CPY #$c0	;
$E678	CPY #$c0	;
$E67A	CPY #$ff	;
$E67C	.byte $ff	; INVALID OPCODE !!!
$E67D	.byte $ff	; INVALID OPCODE !!!
$E67E	INC $FFFF,X	;
$E681	.byte $ff	; INVALID OPCODE !!!
$E682	INC $01FE,X	;
$E685	INC $20FE,X	;
; wait, a function began on the previous byte...
; (assuming previous if-statement stretching to E6E1 was coincidental data)

function_E687:
$E687	JSR $EE1B	;
$E68A	LDX #$07	;
$E68C	LDA $88,X	;
$E68E	BPL $E69A	;
$E690	CMP #$ff	;
$E692	BEQ $E6D8	;
$E694	JSR $ECB0	;
$E697	JMP $E6D8	; (in an if statement) 
$E69A	CPX #$02	;
$E69C	BCC $E6AE	;
$E69E	CMP #$01	;
$E6A0	BNE $E6AE	;
$E6A2	LDA $7F,X	;
$E6A4	CMP #$02	;
$E6A6	BCS $E6AE	;
$E6A8	LDA $F1  	;
$E6AA	ORA #$20	;
$E6AC	STA $F1  	;
$E6AE	DEC $043F,X	;
$E6B1	BNE $E6CF	;
$E6B3	LDA #$03	;
$E6B5	STA $043F,X	;
$E6B8	CPX #$02	;
$E6BA	BCS $E6C4	;
$E6BC	DEC $BF,X	;
$E6BE	BNE $E6C4	;
$E6C0	LDA #$00	;
$E6C2	STA $BD,X	;
$E6C4	JSR $EA0E	;
$E6C7	STX $3E  	;
$E6C9	JSR $EBBA	;
$E6CC	JSR $E78C	;
$E6CF	JSR $EA4E	;
$E6D2	JSR $ED1E	;
$E6D5	JSR $E979	;
$E6D8	JSR $E39A	;
$E6DB	DEX		;
$E6DC	BPL $E68C	;
$E6DE	RTS		;


function_E6DF:
$E6DF	CPX #$02	;
$E6E1	BCS $E6FB	;
$E6E3	LDA $19  	;
$E6E5	AND #$0f	;
$E6E7	BNE $E6EE	;
$E6E9	JSR $F1A9	;
$E6EC	STA $31,X	;
$E6EE	LDA $3A  	;
$E6F0	BNE $E6FB	;
$E6F2	JSR $E760	;
$E6F5	LDA $061C,X	;
$E6F8	STA $31,X	;
$E6FA	RTS		; (within an if statement) 
$E6FB	LDA $9A,X	;
$E6FD	CMP #$a0	;
$E6FF	BCC $E708	;
$E701	LDA $31,X	;
$E703	ORA #$40	;
$E705	STA $31,X	;
$E707	RTS		; (within an if statement) 
$E708	DEC $045A,X	;
$E70B	BNE $E6FA	;
$E70D	JSR $F1A9	;
$E710	LDY $0451,X	;
$E713	AND $E758,Y	;
$E716	ADC $E75B,Y	;
$E719	STA $045A,X	;
$E71C	STX $12  	;
$E71E	LDA $19  	;
$E720	ROL A		;
$E721	ROL A		;
$E722	EOR $12  	;
$E724	AND #$01	;
$E726	TAY		;
$E727	LDA $0088,Y	;
$E72A	BMI $E73F	;
$E72C	LDA $00BD,Y	;
$E72F	BNE $E73F	;
$E731	LDA #$00	;
$E733	STA $31,X	;
$E735	LDA $009A,Y	;
$E738	SEC		;
$E739	SBC #$04	;
$E73B	CMP $9A,X	;
$E73D	BCS $E743	;
$E73F	LDA #$40	;
$E741	STA $31,X	;
$E743	LDA $91,X	;
$E745	CMP $0091,Y	;
$E748	BCS $E751	;
$E74A	LDA $31,X	;
$E74C	ORA #$01	;
$E74E	STA $31,X	;
$E750	RTS		; (within an if statement) 
$E751	LDA $31,X	;
$E753	ORA #$02	;
$E755	STA $31,X	;
$E757	RTS		;

$E758	.byte $1f	; INVALID OPCODE !!!
$E759	.byte $0f	; INVALID OPCODE !!!
$E75A	.byte $07	; INVALID OPCODE !!!
$E75B	JSR $0810	;

function_E75E:
$E75E	LDX #$00	;

function_E760:
$E760	LDA #$01	;
$E762	STA $4016	;Joypad & I/O port for port #1
$E765	LDA #$00	;
$E767	STA $4016	;Joypad & I/O port for port #1
$E76A	LDY #$07	;
$E76C	LDA $4016,X	;Joypad & I/O port for port #1
$E76F	STA $12  	;
$E771	LSR A		;
$E772	ORA $12  	;
$E774	LSR A		;
$E775	ROL $061C,X	;
$E778	DEY		;
$E779	BPL $E76C	;
$E77B	LDY $061E,X	;
$E77E	LDA $061C,X	;
$E781	STA $061E,X	;
$E784	TYA		;
$E785	EOR $061C,X	;
$E788	AND $061C,X	;
$E78B	RTS		;


function_E78C:
$E78C	LDA $88,X	;
$E78E	BNE $E799	;
$E790	LDA #$00	;
$E792	STA $0424,X	;
$E795	STA $042D,X	;
$E798	RTS		; (within an if statement) 
$E799	CMP #$02	;
$E79B	BEQ $E7DE	;
$E79D	CPX #$02	;
$E79F	BCC $E7DE	;
$E7A1	LDA $7F,X	;
$E7A3	CMP #$02	;
$E7A5	BCS $E790	;

function_E7A7:
$E7A7	LDA $0424,X	;
$E7AA	STA $12  	;
$E7AC	LDA $042D,X	;
$E7AF	STA $13  	;
$E7B1	JSR $F19C	;
$E7B4	LDA $0463,X	;
$E7B7	CLC		;
$E7B8	ADC $12  	;
$E7BA	STA $0463,X	;
$E7BD	STA $12  	;
$E7BF	LDA $046C,X	;
$E7C2	ADC $13  	;
$E7C4	STA $046C,X	;
$E7C7	STA $13  	;
$E7C9	JSR $F19C	;
$E7CC	LDA $0424,X	;
$E7CF	SEC		;
$E7D0	SBC $12  	;
$E7D2	STA $0424,X	;
$E7D5	LDA $042D,X	;
$E7D8	SBC $13  	;
$E7DA	STA $042D,X	;
$E7DD	RTS		; (within an if statement) 
$E7DE	LDA $7F,X	;
$E7E0	CMP #$06	;
$E7E2	BCC $E7E5	;
$E7E4	RTS		; (within an if statement) 
$E7E5	LDA $7F,X	;
$E7E7	CMP #$04	;
$E7E9	BNE $E807	;
$E7EB	LDA $31,X	;
$E7ED	AND #$02	;
$E7EF	BEQ $E7F8	;
$E7F1	LDA $0448,X	;
$E7F4	BEQ $E807	;
$E7F6	BNE $E803	;
$E7F8	LDA $31,X	;
$E7FA	AND #$01	;
$E7FC	BEQ $E807	;
$E7FE	LDA $0448,X	;
$E801	BNE $E807	;
$E803	LDA #$05	;
$E805	STA $7F,X	;
$E807	LDA $7F,X	;
$E809	CMP #$02	;
$E80B	BNE $E828	;
$E80D	LDA $31,X	;
$E80F	AND #$02	;
$E811	BEQ $E817	;
$E813	LDA #$00	;
$E815	BEQ $E81F	;
$E817	LDA $31,X	;
$E819	AND #$01	;
$E81B	BEQ $E824	;
$E81D	LDA #$01	;
$E81F	CMP $0448,X	;
$E822	BEQ $E828	;
$E824	LDA #$04	;
$E826	STA $7F,X	;
$E828	LDA $7F,X	;
$E82A	CMP #$04	;
$E82C	BCC $E84A	;
$E82E	LDA $31,X	;
$E830	AND #$02	;
$E832	BEQ $E83B	;
$E834	LDA $0448,X	;
$E837	BNE $E84A	;
$E839	BEQ $E846	;
$E83B	LDA $31,X	;
$E83D	AND #$01	;
$E83F	BEQ $E84A	;
$E841	LDA $0448,X	;
$E844	BEQ $E84A	;
$E846	LDA #$02	;
$E848	STA $7F,X	;
$E84A	LDA $7F,X	;
$E84C	CMP #$03	;
$E84E	BNE $E85A	;
$E850	LDA $31,X	;
$E852	AND #$03	;
$E854	BEQ $E85A	;
$E856	LDA #$02	;
$E858	STA $7F,X	;
$E85A	LDA $7F,X	;
$E85C	CMP #$04	;
$E85E	BCS $E875	;
$E860	LDA $31,X	;
$E862	AND #$02	;
$E864	BEQ $E86A	;
$E866	LDA #$00	;
$E868	BEQ $E872	;
$E86A	LDA $31,X	;
$E86C	AND #$01	;
$E86E	BEQ $E875	;
$E870	LDA #$01	;
$E872	STA $0448,X	;
$E875	LDA $7F,X	;
$E877	CMP #$04	;
$E879	BCC $E8AE	;
$E87B	LDA $0436,X	;
$E87E	CMP #$01	;
$E880	BNE $E8AE	;
$E882	LDY $0451,X	;
$E885	LDA $0448,X	;
$E888	BEQ $E89C	;
$E88A	LDA $0424,X	;
$E88D	SEC		;
$E88E	SBC $E61B,Y	;
$E891	STA $0424,X	;
$E894	LDA $042D,X	;
$E897	SBC #$00	;
$E899	JMP $E8F7	; (in an if statement) 
$E89C	LDA $0424,X	;
$E89F	CLC		;
$E8A0	ADC $E61B,Y	;
$E8A3	STA $0424,X	;
$E8A6	LDA $042D,X	;
$E8A9	ADC #$00	;
$E8AB	JMP $E8F7	; (in an if statement) 
$E8AE	LDA $7F,X	;
$E8B0	BEQ $E8BD	;
$E8B2	CMP #$02	;
$E8B4	BEQ $E8FD	;
$E8B6	CMP #$03	;
$E8B8	BEQ $E8BD	;
$E8BA	JMP $E947	; (in an if statement) 
$E8BD	LDA $0436,X	;
$E8C0	CMP #$01	;
$E8C2	BEQ $E8C7	;
$E8C4	JMP $E947	; (in an if statement) 
$E8C7	LDY $0451,X	;
$E8CA	LDA $31,X	;
$E8CC	AND #$02	;
$E8CE	BEQ $E8E2	;
$E8D0	LDA $0424,X	;
$E8D3	SEC		;
$E8D4	SBC $E60F,Y	;
$E8D7	STA $0424,X	;
$E8DA	LDA $042D,X	;
$E8DD	SBC #$00	;
$E8DF	JMP $E8F7	; (in an if statement) 
$E8E2	LDA $31,X	;
$E8E4	AND #$01	;
$E8E6	BEQ $E947	;
$E8E8	LDA $0424,X	;
$E8EB	CLC		;
$E8EC	ADC $E60F,Y	;
$E8EF	STA $0424,X	;
$E8F2	LDA $042D,X	;
$E8F5	ADC #$00	;
$E8F7	STA $042D,X	;
$E8FA	JMP $E947	; (in an if statement) 
$E8FD	LDA $0436,X	;
$E900	CMP #$01	;
$E902	BNE $E947	;
$E904	LDY $0451,X	;
$E907	LDA $31,X	;
$E909	AND #$02	;
$E90B	BEQ $E91F	;
$E90D	LDA $0424,X	;
$E910	SEC		;
$E911	SBC $E61B,Y	;
$E914	STA $0424,X	;
$E917	LDA $042D,X	;
$E91A	SBC #$00	;
$E91C	JMP $E934	; (in an if statement) 
$E91F	LDA $31,X	;
$E921	AND #$01	;
$E923	BEQ $E947	;
$E925	LDA $0424,X	;
$E928	CLC		;
$E929	ADC $E61B,Y	;
$E92C	STA $0424,X	;
$E92F	LDA $042D,X	;
$E932	ADC #$00	;
$E934	STA $042D,X	;
$E937	LDA $31,X	;
$E939	AND #$03	;
$E93B	BEQ $E947	;
$E93D	CPX #$02	;
$E93F	BCS $E947	;
$E941	LDA $F0  	;
$E943	ORA #$08	;
$E945	STA $F0  	;
$E947	LDA $7F,X	;
$E949	CMP #$04	;
$E94B	BCC $E978	;
$E94D	LDA $0448,X	;
$E950	BNE $E959	;
$E952	LDA $042D,X	;
$E955	BMI $E978	;
$E957	BPL $E95E	;
$E959	LDA $042D,X	;
$E95C	BPL $E978	;
$E95E	LDA $7F,X	;
$E960	CMP #$05	;
$E962	BNE $E96C	;
$E964	LDA $0448,X	;
$E967	EOR #$01	;
$E969	STA $0448,X	;
$E96C	LDA #$03	;
$E96E	STA $7F,X	;
$E970	LDA #$00	;
$E972	STA $0424,X	;
$E975	STA $042D,X	;
$E978	RTS		;


function_E979:
$E979	LDA $CB  	;
$E97B	BNE $E9AC	;
$E97D	LDA $BD,X	;
$E97F	BEQ $E990	;
$E981	LDA $0488	;
$E984	BEQ $E990	;
$E986	SEC		;
$E987	SBC $91,X	;
$E989	JSR $F084	;
$E98C	CMP #$05	;
$E98E	BCC $E9AC	;
$E990	CPX #$02	;
$E992	BCC $E99A	;
$E994	LDA $88,X	;
$E996	CMP #$02	;
$E998	BNE $E9E8	;
$E99A	LDA $7F,X	;
$E99C	CMP #$02	;
$E99E	BCC $E9E8	;
$E9A0	CMP #$06	;
$E9A2	BCS $E9E8	;
$E9A4	LDA #$01	;
$E9A6	STA $7F,X	;
$E9A8	STA $045A,X	;
$E9AB	RTS		; (within an if statement) 
$E9AC	LDA #$00	;
$E9AE	STA $0412,X	;
$E9B1	STA $041B,X	;
$E9B4	STA $0409,X	;
$E9B7	STA $CB  	;
$E9B9	CPX #$02	;
$E9BB	BCC $E9F3	;
$E9BD	LDA $88,X	;
$E9BF	CMP #$02	;
$E9C1	BEQ $E9E9	;
$E9C3	CMP #$01	;
$E9C5	BNE $E9E8	;
$E9C7	LDA $7F,X	;
$E9C9	CMP #$02	;
$E9CB	BCS $E9E8	;
$E9CD	LDA #$02	;
$E9CF	STA $7F,X	;
$E9D1	LDA $C6  	;
$E9D3	STA $043F,X	;
$E9D6	LDA #$00	;
$E9D8	STA $0424,X	;
$E9DB	STA $042D,X	;
$E9DE	STA $0463,X	;
$E9E1	STA $046C,X	;
$E9E4	LDA #$40	;
$E9E6	STA $F1  	;
$E9E8	RTS		; (within an if statement) 
$E9E9	LDA #$00	;
$E9EB	STA $7F,X	;
$E9ED	LDA #$01	;
$E9EF	STA $045A,X	;
$E9F2	RTS		; (within an if statement) 
$E9F3	LDA $7F,X	;
$E9F5	CMP #$01	;
$E9F7	BNE $EA0D	;
$E9F9	CMP #$06	;
$E9FB	BCS $EA0D	;
$E9FD	LDA $0424,X	;
$EA00	ORA $042D,X	;
$EA03	BNE $EA09	;
$EA05	LDA #$03	;
$EA07	BNE $EA0B	;
$EA09	LDA #$02	;
$EA0B	STA $7F,X	;
$EA0D	RTS		;


function_EA0E:
$EA0E	CPX #$02	;
$EA10	BCS $EA22	;
$EA12	LDA $BD,X	;
$EA14	BNE $EA3A	;
$EA16	LDA $7F,X	;
$EA18	CMP #$01	;
$EA1A	BEQ $EA34	;
$EA1C	CMP #$03	;
$EA1E	BNE $EA3A	;
$EA20	BEQ $EA34	;
$EA22	LDA $7F,X	;
$EA24	CMP #$01	;
$EA26	BEQ $EA34	;
$EA28	CMP #$03	;
$EA2A	BCC $EA3A	;
$EA2C	LDA $19  	;
$EA2E	AND #$03	;
$EA30	BNE $EA3D	;
$EA32	BEQ $EA3A	;
$EA34	LDA $19  	;
$EA36	AND #$07	;
$EA38	BNE $EA3D	;
$EA3A	INC $0436,X	;
$EA3D	LDA $0436,X	;
$EA40	AND #$03	;
$EA42	STA $0436,X	;
$EA45	BNE $EA4D	;
$EA47	LDA $7F,X	;
$EA49	BNE $EA4D	;
$EA4B	INC $7F,X	;
$EA4D	RTS		;


function_EA4E:
$EA4E	LDA $0475,X	;
$EA51	BEQ $EA56	;
$EA53	DEC $0475,X	;
$EA56	CPX #$02	;
$EA58	BCS $EA82	;
$EA5A	LDA $C1,X	;
$EA5C	BEQ $EA82	;
$EA5E	LDA $19  	;
$EA60	LSR A		;
$EA61	BCC $EA81	;
$EA63	INC $0436,X	;
$EA66	LDA $0436,X	;
$EA69	AND #$03	;
$EA6B	STA $0436,X	;
$EA6E	LDA #$01	;
$EA70	STA $7F,X	;
$EA72	DEC $045A,X	;
$EA75	BNE $EA81	;
$EA77	LDA #$00	;
$EA79	STA $C1,X	;
$EA7B	STA $7F,X	;
$EA7D	LDA #$20	;
$EA7F	STA $F0  	;
$EA81	RTS		; (within an if statement) 
$EA82	LDA $0412,X	;
$EA85	CLC		;
$EA86	LDY $0451,X	;
$EA89	ADC $E5F7,Y	;
$EA8C	STA $0412,X	;
$EA8F	BCC $EA94	;
$EA91	INC $041B,X	;
$EA94	LDA $041B,X	;
$EA97	BMI $EAB7	;
$EA99	CMP $E663,Y	;
$EA9C	BCC $EAD2	;
$EA9E	BNE $EAA8	;
$EAA0	LDA $0412,X	;
$EAA3	CMP $E657,Y	;
$EAA6	BCC $EAD2	;
$EAA8	LDA $E657,Y	;
$EAAB	STA $0412,X	;
$EAAE	LDA $E663,Y	;
$EAB1	STA $041B,X	;
$EAB4	JMP $EAD2	; (in an if statement) 
$EAB7	CMP $E67B,Y	;
$EABA	BCC $EAC6	;
$EABC	BNE $EAD2	;
$EABE	LDA $0412,X	;
$EAC1	CMP $E66F,Y	;
$EAC4	BCS $EAD2	;
$EAC6	LDA $E66F,Y	;
$EAC9	STA $0412,X	;
$EACC	LDA $E67B,Y	;
$EACF	STA $041B,X	;
$EAD2	JSR $EB96	;
$EAD5	CMP #$f8	;
$EAD7	BCS $EB03	;
$EAD9	CMP #$e8	;
$EADB	BCC $EB03	;
$EADD	LDA #$ff	;
$EADF	STA $88,X	;
$EAE1	LDA #$04	;
$EAE3	STA $BB  	;
$EAE5	LDA $91,X	;
$EAE7	STA $BC  	;
$EAE9	CPX #$02	;
$EAEB	BCC $EAFB	;
$EAED	LDA #$80	;
$EAEF	STA $88,X	;
$EAF1	LDA #$00	;
$EAF3	STA $7F,X	;
$EAF5	LDA #$01	;
$EAF7	STA $F3  	;
$EAF9	BNE $EB03	;
$EAFB	LDA $C8  	;
$EAFD	BNE $EB03	;
$EAFF	LDA #$40	;
$EB01	STA $F0  	;
$EB03	LDA $042D,X	;
$EB06	BMI $EB26	;
$EB08	CMP $E633,Y	;
$EB0B	BCC $EB41	;
$EB0D	BNE $EB17	;
$EB0F	LDA $0424,X	;
$EB12	CMP $E627,Y	;
$EB15	BCC $EB41	;
$EB17	LDA $E627,Y	;
$EB1A	STA $0424,X	;
$EB1D	LDA $E633,Y	;
$EB20	STA $042D,X	;
$EB23	JMP $EB41	; (in an if statement) 
$EB26	CMP $E64B,Y	;
$EB29	BCC $EB35	;
$EB2B	BNE $EB41	;
$EB2D	LDA $0424,X	;
$EB30	CMP $E63F,Y	;
$EB33	BCS $EB41	;
$EB35	LDA $E63F,Y	;
$EB38	STA $0424,X	;
$EB3B	LDA $E64B,Y	;
$EB3E	STA $042D,X	;
$EB41	JSR $EB84	;
$EB44	LDA $16  	;
$EB46	BEQ $EB58	;
$EB48	LDA $91,X	;
$EB4A	CMP #$10	;
$EB4C	BCS $EB50	;
$EB4E	LDA #$10	;
$EB50	CMP #$e0	;
$EB52	BCC $EB56	;
$EB54	LDA #$e0	;
$EB56	STA $91,X	;
$EB58	LDA $C8  	;
$EB5A	BEQ $EB83	;
$EB5C	LDA $88,X	;
$EB5E	BNE $EB83	;
$EB60	LDA $9A,X	;
$EB62	CMP #$c8	;
$EB64	BCC $EB83	;
$EB66	LDA #$c7	;
$EB68	STA $9A,X	;
$EB6A	LDA $0451,X	;
$EB6D	CMP #$0b	;
$EB6F	BNE $EB7A	;
$EB71	DEC $0451,X	;
$EB74	JSR $F0FD	;
$EB77	JMP $F182	; (in an if statement) 
$EB7A	LDA #$02	;
$EB7C	STA $88,X	;
$EB7E	LDA #$03	;
$EB80	STA $0451,X	;
$EB83	RTS		;


function_EB84:
$EB84	LDA $0400,X	;
$EB87	CLC		;
$EB88	ADC $0424,X	;
$EB8B	STA $0400,X	;
$EB8E	LDA $91,X	;
$EB90	ADC $042D,X	;
$EB93	STA $91,X	;
$EB95	RTS		;


function_EB96:
$EB96	LDA $0409,X	;
$EB99	CLC		;
$EB9A	ADC $0412,X	;
$EB9D	STA $0409,X	;
$EBA0	LDA $9A,X	;
$EBA2	ADC $041B,X	;
$EBA5	STA $9A,X	;
$EBA7	RTS		;


function_EBA8:
$EBA8	JSR $F0AA	;
$EBAB	JSR $EB84	;
$EBAE	JMP $F0AA	;


function_EBB1:
$EBB1	JSR $F0AA	;
$EBB4	JSR $EB96	;
$EBB7	JMP $F0AA	;


function_EBBA:
$EBBA	CPX #$02	;
$EBBC	BCS $EBD9	;
$EBBE	LDA $88,X	;
$EBC0	BNE $EBCC	;
$EBC2	LDA $0436,X	;
$EBC5	BNE $EBCC	;
$EBC7	LDA #$00	;
$EBC9	STA $7F,X	;
$EBCB	RTS		; (within an if statement) 
$EBCC	LDA $7F,X	;
$EBCE	CMP #$06	;
$EBD0	BCC $EC2E	;
$EBD2	LDA #$01	;
$EBD4	STA $7F,X	;
$EBD6	DEC $88,X	;
$EBD8	RTS		; (within an if statement) 
$EBD9	LDA $88,X	;
$EBDB	CMP #$02	;
$EBDD	BEQ $EC2E	;
$EBDF	LDA $0436,X	;
$EBE2	BNE $EBF3	;
$EBE4	LDA $88,X	;
$EBE6	BNE $EBED	;
$EBE8	LDA #$00	;
$EBEA	STA $7F,X	;
$EBEC	RTS		; (within an if statement) 
$EBED	LDA $7F,X	;
$EBEF	BNE $EBF4	;
$EBF1	INC $7F,X	;
$EBF3	RTS		; (within an if statement) 
$EBF4	CMP #$02	;
$EBF6	BCC $EBF3	;
$EBF8	DEC $045A,X	;
$EBFB	BNE $EC2D	;
$EBFD	LDA $C7  	;
$EBFF	STA $045A,X	;
$EC02	INC $7F,X	;
$EC04	LDA $7F,X	;
$EC06	CMP #$07	;
$EC08	BCC $EC2D	;
$EC0A	LDA #$02	;
$EC0C	STA $88,X	;
$EC0E	LDA #$00	;
$EC10	STA $7F,X	;
$EC12	LDY $0451,X	;
$EC15	LDA $ECA4,Y	;
$EC18	LDY $047E,X	;
$EC1B	BNE $EC25	;
$EC1D	DEC $047E,X	;
$EC20	LDA $0451,X	;
$EC23	AND #$03	;
$EC25	STA $0451,X	;
$EC28	LDA #$fe	;
$EC2A	STA $041B,X	;
$EC2D	RTS		; (within an if statement) 
$EC2E	JSR $E6DF	;
$EC31	LDA $31,X	;
$EC33	AND #$c3	;
$EC35	BEQ $EC3F	;
$EC37	CPX #$02	;
$EC39	BCS $EC3F	;
$EC3B	LDA #$00	;
$EC3D	STA $BD,X	;
$EC3F	LDA $31,X	;
$EC41	AND #$40	;
$EC43	BNE $EC57	;
$EC45	LDA $31,X	;
$EC47	AND #$80	;
$EC49	BNE $EC52	;
$EC4B	LDA #$00	;
$EC4D	STA $0620,X	;
$EC50	BEQ $ECA3	;
$EC52	LDA $0620,X	;
$EC55	BNE $ECA3	;
$EC57	LDA $7F,X	;
$EC59	CMP #$02	;
$EC5B	BCC $EC6B	;
$EC5D	DEC $9A,X	;
$EC5F	DEC $9A,X	;
$EC61	LDA #$00	;
$EC63	STA $0412,X	;
$EC66	STA $041B,X	;
$EC69	BEQ $EC74	;
$EC6B	CMP #$01	;
$EC6D	BEQ $EC74	;
$EC6F	LDA $0436,X	;
$EC72	BNE $ECA3	;
$EC74	LDA #$00	;
$EC76	STA $7F,X	;
$EC78	LDA #$01	;
$EC7A	STA $0436,X	;
$EC7D	LDA #$01	;
$EC7F	STA $0620,X	;
$EC82	LDY #$00	;
$EC84	CPX #$02	;
$EC86	BCC $EC89	;
$EC88	INY		;
$EC89	LDA $00F0,Y	;
$EC8C	ORA #$10	;
$EC8E	STA $00F0,Y	;
$EC91	LDA $0412,X	;
$EC94	SEC		;
$EC95	LDY $0451,X	;
$EC98	SBC $E603,Y	;
$EC9B	STA $0412,X	;
$EC9E	BCS $ECA3	;
$ECA0	DEC $041B,X	;
$ECA3	RTS		;

$ECA4	ORA ($02,X)	;
$ECA6	.byte $02	; INVALID OPCODE !!!
$ECA7	.byte $03	; INVALID OPCODE !!!
$ECA8	ORA ($02,X)	;
$ECAA	.byte $02	; INVALID OPCODE !!!
$ECAB	.byte $03	; INVALID OPCODE !!!
$ECAC	ORA ($02,X)	;
$ECAE	.byte $02	; INVALID OPCODE !!!
$ECAF	.byte $03	; INVALID OPCODE !!!

function_ECB0:
$ECB0	LDA $7F,X	;
$ECB2	BNE $ED1D	;
$ECB4	JSR $E7A7	;
$ECB7	JSR $EB84	;
$ECBA	LDA $0409,X	;
$ECBD	SEC		;
$ECBE	SBC #$60	;
$ECC0	STA $0409,X	;
$ECC3	LDA $9A,X	;
$ECC5	SBC #$00	;
$ECC7	STA $9A,X	;
$ECC9	CMP #$f1	;
$ECCB	BCC $ECD1	;
$ECCD	LDA #$ff	;
$ECCF	STA $88,X	;
$ECD1	TXA		;
$ECD2	PHA		;
$ECD3	LDY #$01	;
$ECD5	LDA $0088,Y	;
$ECD8	BEQ $ED18	;
$ECDA	BMI $ED18	;
$ECDC	LDA $9A,X	;
$ECDE	SEC		;
$ECDF	SBC $009A,Y	;
$ECE2	JSR $F084	;
$ECE5	CMP #$18	;
$ECE7	BCS $ED18	;
$ECE9	LDA $91,X	;
$ECEB	SEC		;
$ECEC	SBC $0091,Y	;
$ECEF	JSR $F084	;
$ECF2	CMP #$10	;
$ECF4	BCS $ED18	;
$ECF6	LDA #$ff	;
$ECF8	STA $7F,X	;
$ECFA	LDA #$03	;
$ECFC	STA $045A,X	;
$ECFF	LDA #$78	;
$ED01	STA $C5  	;
$ED03	LDA #$02	;
$ED05	STA $F0  	;
$ED07	LDA #$32	;
$ED09	STY $3E  	;
$ED0B	JSR $D6D4	;
$ED0E	LDA #$01	;
$ED10	LDX $3E  	;
$ED12	JSR $D867	;
$ED15	PLA		;
$ED16	TAX		;
$ED17	RTS		; (within an if statement) 
$ED18	DEY		;
$ED19	BPL $ECD5	;
$ED1B	PLA		;
$ED1C	TAX		;
$ED1D	RTS		;


function_ED1E:
$ED1E	LDY $88,X	;
$ED20	DEY		;
$ED21	BPL $ED24	;
$ED23	RTS		; (within an if statement) 
$ED24	LDA $9A,X	;
$ED26	CMP #$f9	;
$ED28	BCC $ED36	;
$ED2A	LDA $041B,X	;
$ED2D	BPL $ED23	;
$ED2F	LDA #$00	;
$ED31	STA $CC  	;
$ED33	JMP $EDD7	; (in an if statement) 
$ED36	LDY $CD  	;
$ED38	BMI $ED1D	;
$ED3A	LDA #$00	;
$ED3C	STA $CC  	;
$ED3E	LDA ($27),Y	;
$ED40	SEC		;
$ED41	SBC #$18	;
$ED43	CMP $9A,X	;
$ED45	BCS $EDAC	;
$ED47	ADC #$03	;
$ED49	CMP $9A,X	;
$ED4B	BCC $ED51	;
$ED4D	LDA #$01	;
$ED4F	BNE $ED5F	;
$ED51	LDA ($29),Y	;
$ED53	CMP $9A,X	;
$ED55	BCC $EDAC	;
$ED57	SBC #$03	;
$ED59	CMP $9A,X	;
$ED5B	BCS $ED7F	;
$ED5D	LDA #$02	;
$ED5F	STA $CC  	;
$ED61	LDA ($23),Y	;
$ED63	CMP #$10	;
$ED65	BEQ $ED6E	;
$ED67	SEC		;
$ED68	SBC #$0c	;
$ED6A	CMP $91,X	;
$ED6C	BCS $ED7B	;
$ED6E	LDA ($25),Y	;
$ED70	CMP #$ff	;
$ED72	BEQ $ED7F	;
$ED74	SEC		;
$ED75	SBC #$04	;
$ED77	CMP $91,X	;
$ED79	BCS $ED7F	;
$ED7B	LDA #$00	;
$ED7D	STA $CC  	;
$ED7F	LDA ($23),Y	;
$ED81	SEC		;
$ED82	SBC #$10	;
$ED84	BEQ $ED96	;
$ED86	CMP $91,X	;
$ED88	BCS $EDAC	;
$ED8A	ADC #$04	;
$ED8C	CMP $91,X	;
$ED8E	BCC $ED96	;
$ED90	LDA $CC  	;
$ED92	ORA #$04	;
$ED94	BNE $EDAA	;
$ED96	LDA ($25),Y	;
$ED98	CMP #$ff	;
$ED9A	BEQ $EDAC	;
$ED9C	CMP $91,X	;
$ED9E	BCC $EDAC	;
$EDA0	SBC #$04	;
$EDA2	CMP $91,X	;
$EDA4	BCS $EDAC	;
$EDA6	LDA $CC  	;
$EDA8	ORA #$08	;
$EDAA	STA $CC  	;
$EDAC	LDA $CC  	;
$EDAE	BNE $EDB7	;
$EDB0	DEY		;
$EDB1	BMI $EDB6	;
$EDB3	JMP $ED3A	; (in an if statement) 
$EDB6	RTS		; (within an if statement) 
$EDB7	LSR $CC  	;
$EDB9	BCC $EDCC	;
$EDBB	LDA $041B,X	;
$EDBE	BMI $EDCC	;
$EDC0	LDA ($27),Y	;
$EDC2	SBC #$18	;
$EDC4	STA $9A,X	;
$EDC6	INC $9A,X	;
$EDC8	LDA #$01	;
$EDCA	STA $CB  	;
$EDCC	LSR $CC  	;
$EDCE	BCC $EDEA	;
$EDD0	LDA $041B,X	;
$EDD3	BPL $EDEA	;
$EDD5	LDA ($29),Y	;
$EDD7	STA $9A,X	;
$EDD9	JSR $F0FD	;
$EDDC	JSR $F182	;
$EDDF	CPX #$02	;
$EDE1	BCS $EDE6	;
$EDE3	JSR $CC29	;
$EDE6	LDA $CB  	;
$EDE8	BNE $EE1A	;
$EDEA	LSR $CC  	;
$EDEC	BCC $EDF5	;
$EDEE	LDA $042D,X	;
$EDF1	BMI $EDF5	;
$EDF3	BPL $EDFE	;
$EDF5	LSR $CC  	;
$EDF7	BCC $EE1A	;
$EDF9	LDA $042D,X	;
$EDFC	BPL $EE1A	;
$EDFE	JSR $F0D4	;
$EE01	JSR $F168	;
$EE04	LDA $042D,X	;
$EE07	ORA $0424,X	;
$EE0A	BEQ $EE1A	;
$EE0C	LDA $0448,X	;
$EE0F	EOR #$01	;
$EE11	STA $0448,X	;
$EE14	LDA $F1  	;
$EE16	ORA #$02	;
$EE18	STA $F1  	;
$EE1A	RTS		;


function_EE1B:
$EE1B	LDX #$07	;
$EE1D	STX $12  	;
$EE1F	LDY $12  	;
$EE21	DEY		;
$EE22	BPL $EE27	;
$EE24	JMP $EF20	; (in an if statement) 
$EE27	LDA $88,X	;
$EE29	BMI $EE24	;
$EE2B	BEQ $EE24	;
$EE2D	LDA $0088,Y	;
$EE30	BMI $EE24	;
$EE32	BEQ $EE24	;
$EE34	LDA #$00	;
$EE36	STA $CC  	;
$EE38	LDA $009A,Y	;
$EE3B	SEC		;
$EE3C	SBC $9A,X	;
$EE3E	JSR $F084	;
$EE41	CMP #$18	;
$EE43	BCS $EEB6	;
$EE45	LDA $9A,X	;
$EE47	CLC		;
$EE48	ADC #$18	;
$EE4A	STA $12  	;
$EE4C	LDA $009A,Y	;
$EE4F	CLC		;
$EE50	ADC #$07	;
$EE52	SEC		;
$EE53	SBC $12  	;
$EE55	JSR $F084	;
$EE58	CMP #$04	;
$EE5A	BCS $EE60	;
$EE5C	LDA #$01	;
$EE5E	BNE $EE72	;
$EE60	LDA $009A,Y	;
$EE63	CLC		;
$EE64	ADC #$11	;
$EE66	SEC		;
$EE67	SBC $9A,X	;
$EE69	JSR $F084	;
$EE6C	CMP #$04	;
$EE6E	BCS $EE85	;
$EE70	LDA #$02	;
$EE72	STA $CC  	;
$EE74	LDA $0091,Y	;
$EE77	SEC		;
$EE78	SBC $91,X	;
$EE7A	JSR $F084	;
$EE7D	CMP #$10	;
$EE7F	BCC $EE85	;
$EE81	LDA #$00	;
$EE83	STA $CC  	;
$EE85	LDA $91,X	;
$EE87	CLC		;
$EE88	ADC #$10	;
$EE8A	STA $12  	;
$EE8C	LDA $0091,Y	;
$EE8F	CLC		;
$EE90	ADC #$07	;
$EE92	SEC		;
$EE93	SBC $12  	;
$EE95	JSR $F084	;
$EE98	CMP #$04	;
$EE9A	BCS $EEA0	;
$EE9C	LDA #$04	;
$EE9E	BNE $EEB2	;
$EEA0	LDA $0091,Y	;
$EEA3	CLC		;
$EEA4	ADC #$09	;
$EEA6	SEC		;
$EEA7	SBC $91,X	;
$EEA9	JSR $F084	;
$EEAC	CMP #$04	;
$EEAE	BCS $EEB6	;
$EEB0	LDA #$08	;
$EEB2	ORA $CC  	;
$EEB4	STA $CC  	;
$EEB6	LDA #$00	;
$EEB8	STA $4B  	;
$EEBA	LSR $CC  	;
$EEBC	BCC $EEC3	;
$EEBE	JSR $F09C	;
$EEC1	BMI $EECC	;
$EEC3	LSR $CC  	;
$EEC5	BCC $EEE7	;
$EEC7	JSR $F09C	;
$EECA	BMI $EEE7	;
$EECC	JSR $F0B3	;
$EECF	BCS $EEE3	;
$EED1	JSR $F0FD	;
$EED4	JSR $F182	;
$EED7	JSR $F0AA	;
$EEDA	JSR $F0FD	;
$EEDD	JSR $F182	;
$EEE0	JSR $F0AA	;
$EEE3	LDA #$01	;
$EEE5	STA $4B  	;
$EEE7	LSR $CC  	;
$EEE9	BCC $EEF0	;
$EEEB	JSR $F08E	;
$EEEE	BMI $EEF9	;
$EEF0	LSR $CC  	;
$EEF2	BCC $EF14	;
$EEF4	JSR $F08E	;
$EEF7	BMI $EF14	;
$EEF9	JSR $F0B3	;
$EEFC	BCS $EF10	;
$EEFE	JSR $F0D4	;
$EF01	JSR $F168	;
$EF04	JSR $F0AA	;
$EF07	JSR $F0D4	;
$EF0A	JSR $F168	;
$EF0D	JSR $F0AA	;
$EF10	LDA #$01	;
$EF12	STA $4B  	;
$EF14	JSR $EF2D	;
$EF17	JSR $F0AA	;
$EF1A	JSR $EF2D	;
$EF1D	JSR $F0AA	;
$EF20	DEY		;
$EF21	BMI $EF26	;
$EF23	JMP $EE27	; (in an if statement) 
$EF26	DEX		;
$EF27	BMI $EF2C	;
$EF29	JMP $EE1D	; (in an if statement) 
$EF2C	RTS		;


function_EF2D:
$EF2D	CPX #$02	;
$EF2F	BCC $EF38	;
$EF31	CPY #$02	;
$EF33	BCC $EF38	;
$EF35	JMP $F039	; (in an if statement) 
$EF38	LDA #$00	;
$EF3A	STA $0487	;
$EF3D	LDA $0475,X	;
$EF40	BEQ $EF45	;
$EF42	JMP $F039	; (in an if statement) 
$EF45	LDA $4B  	;
$EF47	BNE $EF4C	;
$EF49	JMP $F039	; (in an if statement) 
$EF4C	CPX #$02	;
$EF4E	BCS $EF57	;
$EF50	LDA $BD,X	;
$EF52	BEQ $EF68	;
$EF54	JMP $F039	; (in an if statement) 
$EF57	LDA $88,X	;
$EF59	CMP #$01	;
$EF5B	BNE $EF68	;
$EF5D	LDA $7F,X	;
$EF5F	CMP #$02	;
$EF61	BCS $EF75	;
$EF63	LDA #$01	;
$EF65	STA $0487	;
$EF68	LDA $009A,Y	;
$EF6B	CLC		;
$EF6C	ADC #$04	;
$EF6E	CMP $9A,X	;
$EF70	BCC $EF75	;
$EF72	JMP $F039	; (in an if statement) 
$EF75	LDA #$14	;
$EF77	STA $0475,X	;
$EF7A	LDA #$00	;
$EF7C	STA $0436,X	;
$EF7F	CPY #$02	;
$EF81	BCC $EF8D	;
$EF83	LDA $0088,Y	;
$EF86	CMP #$02	;
$EF88	BEQ $EF8D	;
$EF8A	JMP $F039	; (in an if statement) 
$EF8D	LDA $F0  	;
$EF8F	ORA #$02	;
$EF91	STA $F0  	;
$EF93	LDA $88,X	;
$EF95	CMP #$02	;
$EF97	BNE $EFB6	;
$EF99	CPX #$02	;
$EF9B	BCS $EFB6	;
$EF9D	STY $12  	;
$EF9F	LDY $7F,X	;
$EFA1	LDA $F049,Y	;
$EFA4	LDY $12  	;
$EFA6	PHA		;
$EFA7	PLA		;
$EFA8	BNE $EFAD	;
$EFAA	JMP $F039	; (in an if statement) 
$EFAD	STA $7F,X	;
$EFAF	LDA #$00	;
$EFB1	STA $0436,X	;
$EFB4	BEQ $EFE0	;
$EFB6	DEC $88,X	;
$EFB8	BNE $EFC4	;
$EFBA	LDA #$ff	;
$EFBC	STA $041B,X	;
$EFBF	LDA #$00	;
$EFC1	STA $0412,X	;
$EFC4	LDA #$00	;
$EFC6	STA $7F,X	;
$EFC8	STA $0424,X	;
$EFCB	STA $042D,X	;
$EFCE	LDA $91,X	;
$EFD0	BMI $EFD6	;
$EFD2	LDA #$ff	;
$EFD4	BNE $EFD8	;
$EFD6	LDA #$00	;
$EFD8	STA $046C,X	;
$EFDB	LDA #$80	;
$EFDD	STA $0463,X	;
$EFE0	STY $12  	;
$EFE2	LDY $0451,X	;
$EFE5	LDA $F054,Y	;
$EFE8	STA $0451,X	;
$EFEB	LDA #$01	;
$EFED	STA $047E,X	;
$EFF0	LDY $12  	;
$EFF2	CPY #$02	;
$EFF4	BCS $F039	;
$EFF6	LDA $0451,X	;
$EFF9	CMP #$07	;
$EFFB	BEQ $F007	;
$EFFD	CMP #$08	;
$EFFF	BCC $F007	;
$F001	LDA $F1  	;
$F003	ORA #$80	;
$F005	STA $F1  	;
$F007	LDY $0451,X	;
$F00A	LDA $F060,Y	;
$F00D	STA $13  	;
$F00F	LDA $0487	;
$F012	BEQ $F019	;
$F014	LDA $F06C,Y	;
$F017	STA $13  	;
$F019	LDA $F078,Y	;
$F01C	CLC		;
$F01D	ADC $0487	;
$F020	STA $14  	;
$F022	LDA $12  	;
$F024	STA $3E  	;
$F026	PHA		;
$F027	TXA		;
$F028	PHA		;
$F029	LDA $13  	;
$F02B	PHA		;
$F02C	LDA $14  	;
$F02E	JSR $D867	;
$F031	PLA		;
$F032	JSR $D6D4	;
$F035	PLA		;
$F036	TAX		;
$F037	PLA		;
$F038	TAY		;
$F039	LDA $0451,X	;
$F03C	CMP #$0b	;
$F03E	BNE $F048	;
$F040	LDA $C8  	;
$F042	BNE $F048	;
$F044	LDA #$20	;
$F046	STA $F0  	;
$F048	RTS		;

$F049	ASL $06  	;
$F04B	.byte $07	; INVALID OPCODE !!!
$F04C	PHP		;
$F04D	ORA #$0a	;
$F04F	BRK		;
$F050	BRK		;
$F051	BRK		;
$F052	BRK		;
$F053	BRK		;
$F054	.byte $04	; INVALID OPCODE !!!
$F055	ORA $06  	;
$F057	.byte $07	; INVALID OPCODE !!!
$F058	PHP		;
$F059	ORA #$0a	;
$F05B	.byte $0b	; INVALID OPCODE !!!
$F05C	PHP		;
$F05D	ORA #$0a	;
$F05F	.byte $0b	; INVALID OPCODE !!!
$F060	BRK		;
$F061	BRK		;
$F062	BRK		;
$F063	BRK		;
$F064	.byte $32	; INVALID OPCODE !!!
$F065	.byte $4b	; INVALID OPCODE !!!
$F066	.byte $64	; INVALID OPCODE !!!
$F067	.byte $64	; INVALID OPCODE !!!
$F068	.byte $4b	; INVALID OPCODE !!!
$F069	.byte $64	; INVALID OPCODE !!!
$F06A	STX $64,Y 	;
$F06C	BRK		;
$F06D	BRK		;
$F06E	BRK		;
$F06F	BRK		;
$F070	.byte $32	; INVALID OPCODE !!!
$F071	.byte $4b	; INVALID OPCODE !!!
$F072	.byte $64	; INVALID OPCODE !!!
$F073	.byte $64	; INVALID OPCODE !!!
$F074	.byte $64	; INVALID OPCODE !!!
$F075	STX $C8,Y 	;
$F077	.byte $64	; INVALID OPCODE !!!
$F078	BRK		;
$F079	BRK		;
$F07A	BRK		;
$F07B	BRK		;
$F07C	ORA ($02,X)	;
$F07E	.byte $03	; INVALID OPCODE !!!
$F07F	.byte $03	; INVALID OPCODE !!!
$F080	.byte $02	; INVALID OPCODE !!!
$F081	.byte $03	; INVALID OPCODE !!!
$F082	.byte $04	; INVALID OPCODE !!!
$F083	.byte $03	; INVALID OPCODE !!!

function_F084:
$F084	PHA		;
$F085	PLA		;
$F086	BPL $F08D	;
$F088	EOR #$ff	;
$F08A	CLC		;
$F08B	ADC #$01	;
$F08D	RTS		;


function_F08E:
$F08E	LDA $0424,Y	;
$F091	SEC		;
$F092	SBC $0424,X	;
$F095	LDA $042D,Y	;
$F098	SBC $042D,X	;
$F09B	RTS		;


function_F09C:
$F09C	LDA $0412,Y	;
$F09F	SEC		;
$F0A0	SBC $0412,X	;
$F0A3	LDA $041B,Y	;
$F0A6	SBC $041B,X	;
$F0A9	RTS		;


function_F0AA:
$F0AA	STX $12  	;
$F0AC	STY $13  	;
$F0AE	LDX $13  	;
$F0B0	LDY $12  	;
$F0B2	RTS		;


function_F0B3:
$F0B3	CPX #$02	;
$F0B5	BCC $F0D3	;
$F0B7	LDA $7F,X	;
$F0B9	CMP #$02	;
$F0BB	BCC $F0D3	;
$F0BD	LDA #$01	;
$F0BF	CMP $88,X	;
$F0C1	BCS $F0D3	;
$F0C3	CPY #$02	;
$F0C5	BCC $F0D3	;
$F0C7	LDA $007F,Y	;
$F0CA	CMP #$02	;
$F0CC	BCC $F0D3	;
$F0CE	LDA #$01	;
$F0D0	CMP $0088,Y	;
$F0D3	RTS		;


function_F0D4:
$F0D4	LDA #$00	;
$F0D6	SEC		;
$F0D7	SBC $0424,X	;
$F0DA	STA $0424,X	;
$F0DD	LDA #$00	;
$F0DF	SBC $042D,X	;
$F0E2	STA $042D,X	;
$F0E5	LDA #$00	;
$F0E7	SEC		;
$F0E8	SBC $0463,X	;
$F0EB	STA $0463,X	;
$F0EE	LDA #$00	;
$F0F0	SBC $046C,X	;
$F0F3	STA $046C,X	;
$F0F6	LDA $31,X	;
$F0F8	AND #$40	;
$F0FA	STA $31,X	;
$F0FC	RTS		;


function_F0FD:
$F0FD	LDA #$00	;
$F0FF	SEC		;
$F100	SBC $0412,X	;
$F103	STA $0412,X	;
$F106	LDA #$00	;
$F108	SBC $041B,X	;
$F10B	STA $041B,X	;
$F10E	RTS		;


function_F10F:
$F10F	STA $2D  	;
$F111	LDA $2C  	;
$F113	BPL $F139	;
$F115	LDA #$00	;
$F117	SEC		;
$F118	SBC $2B  	;
$F11A	STA $2B  	;
$F11C	LDA #$00	;
$F11E	SBC $2C  	;
$F120	STA $2C  	;
$F122	JSR $F139	;
$F125	LDA #$00	;
$F127	SEC		;
$F128	SBC $2E  	;
$F12A	STA $2E  	;
$F12C	LDA #$00	;
$F12E	SBC $2F  	;
$F130	STA $2F  	;
$F132	LDA #$00	;
$F134	SBC $30  	;
$F136	STA $30  	;
$F138	RTS		; (within an if statement) 

function_F139:
$F139	TXA		;
$F13A	PHA		;
$F13B	LDA #$00	;
$F13D	STA $2E  	;
$F13F	STA $2F  	;
$F141	STA $30  	;
$F143	LDX #$08	;
$F145	ASL $2E  	;
$F147	ROL $2F  	;
$F149	ROL $30  	;
$F14B	ASL $2D  	;
$F14D	BCC $F162	;
$F14F	CLC		;
$F150	LDA $2B  	;
$F152	ADC $2E  	;
$F154	STA $2E  	;
$F156	LDA $2C  	;
$F158	ADC $2F  	;
$F15A	STA $2F  	;
$F15C	LDA #$00	;
$F15E	ADC $30  	;
$F160	STA $30  	;
$F162	DEX		;
$F163	BNE $F145	;
$F165	PLA		;
$F166	TAX		;
$F167	RTS		;


function_F168:
$F168	LDA $0424,X	;
$F16B	STA $2B  	;
$F16D	LDA $042D,X	;
$F170	STA $2C  	;
$F172	LDA #$cd	;
$F174	JSR $F10F	;
$F177	LDA $2F  	;
$F179	STA $0424,X	;
$F17C	LDA $30  	;
$F17E	STA $042D,X	;
$F181	RTS		;


function_F182:
$F182	LDA $0412,X	;
$F185	STA $2B  	;
$F187	LDA $041B,X	;
$F18A	STA $2C  	;
$F18C	LDA #$cd	;
$F18E	JSR $F10F	;
$F191	LDA $2F  	;
$F193	STA $0412,X	;
$F196	LDA $30  	;
$F198	STA $041B,X	;
$F19B	RTS		;


function_F19C:
$F19C	LDY #$04	;
$F19E	LDA $13  	;
$F1A0	ASL A		;
$F1A1	ROR $13  	;
$F1A3	ROR $12  	;
$F1A5	DEY		;
$F1A6	BNE $F19E	;
$F1A8	RTS		;


function_F1A9:
$F1A9	TXA		;
$F1AA	PHA		;
$F1AB	LDX #$0b	;
$F1AD	ASL $1B  	;
$F1AF	ROL $1C  	;
$F1B1	ROL A		;
$F1B2	ROL A		;
$F1B3	EOR $1B  	;
$F1B5	ROL A		;
$F1B6	EOR $1B  	;
$F1B8	LSR A		;
$F1B9	LSR A		;
$F1BA	EOR #$ff	;
$F1BC	AND #$01	;
$F1BE	ORA $1B  	;
$F1C0	STA $1B  	;
$F1C2	DEX		;
$F1C3	BNE $F1AD	;
$F1C5	PLA		;
$F1C6	TAX		;
$F1C7	LDA $1B  	;
$F1C9	RTS		;

$F1CA	JSR $DAB7	;
$F1CD	LDX #$09	;
$F1CF	LDA #$00	;
$F1D1	STA $03,X	;
$F1D3	DEX		;
$F1D4	BPL $F1CF	;
$F1D6	STA $3E  	;
$F1D8	INC $41  	;
$F1DA	JSR $D6D4	;
$F1DD	LDA #$0f	;
$F1DF	STA $4015	;IRQ status / Sound enable
$F1E2	LDA #$01	;
$F1E4	STA $F0  	;
$F1E6	LDA #$02	;

function_F1E8:
$F1E8	STA $41  	;
$F1EA	LDY $40  	;
$F1EC	BNE $F1F0	;
$F1EE	LDA #$ff	;
$F1F0	STA $42  	;
$F1F2	LDX #$00	;
$F1F4	STX $0488	;
$F1F7	STX $3B  	;
$F1F9	STX $3C  	;
$F1FB	STX $0558	;
$F1FE	DEX		;
$F1FF	STX $89  	;
$F201	LDX $40  	;
$F203	JSR $F3A6	;
$F206	DEX		;
$F207	BPL $F203	;
$F209	LDA #$00	;
$F20B	STA $C8  	;
$F20D	LDA $3C  	;
$F20F	LSR A		;
$F210	LSR A		;
$F211	CMP #$08	;
$F213	BCC $F217	;
$F215	LDA #$08	;
$F217	TAX		;
$F218	LDA $F3B0,X	;
$F21B	STA $C6  	;
$F21D	LDA $F3B9,X	;
$F220	STA $C7  	;
$F222	LDA $3C  	;
$F224	CMP #$02	;
$F226	BCS $F22E	;
$F228	LDA #$03	;
$F22A	STA $C6  	;
$F22C	STA $C7  	;
$F22E	LDX #$07	;
$F230	LDA #$00	;
$F232	STA $0448,X	;
$F235	STA $0475,X	;
$F238	STA $047E,X	;
$F23B	STA $0424,X	;
$F23E	STA $042D,X	;
$F241	STA $0412,X	;
$F244	STA $041B,X	;
$F247	STA $0463,X	;
$F24A	STA $046C,X	;
$F24D	STA $0400,X	;
$F250	STA $0409,X	;
$F253	LDA #$01	;
$F255	STA $043F,X	;
$F258	STA $045A,X	;
$F25B	LDA #$03	;
$F25D	STA $0436,X	;
$F260	DEX		;
$F261	BPL $F230	;
$F263	LDX #$05	;
$F265	LDA #$ff	;
$F267	STA $8A,X	;
$F269	DEX		;
$F26A	BPL $F265	;
$F26C	LDX $40  	;
$F26E	JSR $F37C	;
$F271	DEX		;
$F272	BPL $F26E	;
$F274	JSR $D23C	;
$F277	JSR $D289	;
$F27A	LDA $C6  	;
$F27C	CMP #$10	;
$F27E	BCS $F284	;
$F280	LDA #$58	;
$F282	STA $C6  	;
$F284	JSR $F49B	;
$F287	JSR $D8F5	;
$F28A	LDA $16  	;
$F28C	BEQ $F291	;
$F28E	JMP $C1BB	; (in an if statement) 
$F291	LDA $C8  	;
$F293	BEQ $F298	;
$F295	JMP $CF09	; (in an if statement) 
$F298	JSR $C70C	;
$F29B	LDA $3B  	;
$F29D	AND #$03	;
$F29F	BNE $F2A9	;
$F2A1	LDA #$08	;
$F2A3	STA $F2  	;
$F2A5	LDX $3A  	;
$F2A7	BNE $F2AF	;
$F2A9	LDA #$ff	;
$F2AB	STA $3D  	;
$F2AD	INC $3C  	;
$F2AF	JSR $F466	;
$F2B2	LDA $3D  	;
$F2B4	BEQ $F2BB	;
$F2B6	DEC $3D  	;
$F2B8	JSR $F3C2	;
$F2BB	JSR $F1A9	;
$F2BE	JSR $E687	;
$F2C1	JSR $C6EF	;
$F2C4	JSR $C786	;
$F2C7	JSR $C827	;
$F2CA	JSR $C8AD	;
$F2CD	JSR $D8D3	;
$F2D0	JSR $E57D	;
$F2D3	JSR $CB6A	;
$F2D6	INC $4C  	;
$F2D8	LDX $40  	;
$F2DA	LDA $88,X	;
$F2DC	BPL $F303	;
$F2DE	LDA $3A  	;
$F2E0	BNE $F31C	;
$F2E2	LDA $41,X	;
$F2E4	BMI $F303	;
$F2E6	DEC $C3,X	;
$F2E8	BNE $F31D	;
$F2EA	TXA		;
$F2EB	PHA		;
$F2EC	JSR $C71C	;
$F2EF	PLA		;
$F2F0	TAX		;
$F2F1	LDY #$02	;
$F2F3	DEC $41,X	;
$F2F5	STY $46  	;
$F2F7	BMI $F303	;
$F2F9	JSR $F37C	;
$F2FC	JSR $F3A6	;
$F2FF	LDA #$80	;
$F301	STA $F2  	;
$F303	DEX		;
$F304	BPL $F2DA	;
$F306	LDA $41  	;
$F308	BPL $F30E	;
$F30A	LDA $42  	;
$F30C	BMI $F35C	;
$F30E	LDA $3A  	;
$F310	BEQ $F31D	;
$F312	JSR $E75E	;
$F315	LDA $061C	;
$F318	AND #$30	;
$F31A	BEQ $F2AF	;
$F31C	RTS		; (within an if statement) 
$F31D	LDX #$05	;
$F31F	LDA $8A,X	;
$F321	BEQ $F325	;
$F323	BPL $F2AF	;
$F325	DEX		;
$F326	BPL $F31F	;
$F328	LDA $BB  	;
$F32A	BPL $F2AF	;
$F32C	LDX $40  	;
$F32E	LDY $88,X	;
$F330	DEY		;
$F331	BPL $F342	;
$F333	LDA $41,X	;
$F335	BMI $F342	;
$F337	LDA #$ff	;
$F339	STA $88,X	;
$F33B	LDA #$01	;
$F33D	STA $C3,X	;
$F33F	JMP $F2AF	; (in an if statement) 
$F342	DEX		;
$F343	BPL $F32E	;
$F345	LDA #$02	;
$F347	STA $F2  	;
$F349	LDX #$96	;
$F34B	JSR $F454	;
$F34E	LDX $3B  	;
$F350	INX		;
$F351	CPX #$10	;
$F353	BNE $F357	;
$F355	LDX #$04	;
$F357	STX $3B  	;
$F359	JMP $F209	; (in an if statement) 
$F35C	LDA #$01	;
$F35E	STA $F2  	;
$F360	LDA #$00	;
$F362	STA $17  	;
$F364	STA $18  	;
$F366	STA $15  	;
$F368	JSR $F401	;
$F36B	JSR $F45B	;
$F36E	JSR $E75E	;
$F371	AND #$30	;
$F373	BNE $F379	;
$F375	DEC $15  	;
$F377	BNE $F36B	;
$F379	JMP $F1CA	;


function_F37C:
$F37C	LDA $41,X	;
$F37E	BMI $F3A3	;
$F380	LDA $F3A4,X	;
$F383	STA $91,X	;
$F385	LDA #$b8	;
$F387	STA $9A,X	;
$F389	STA $BD,X	;
$F38B	LDA #$c8	;
$F38D	STA $BF,X	;
$F38F	LDA #$5a	;
$F391	LDY $41,X	;
$F393	BPL $F397	;
$F395	LDA #$01	;
$F397	STA $C3,X	;
$F399	LDA #$00	;
$F39B	STA $C1,X	;
$F39D	STA $042D,X	;
$F3A0	STA $0424,X	;
$F3A3	RTS		;

$F3A4	JSR $A9D0	;
; wait, a function began on the previous byte...

function_F3A6:
$F3A6	LDA #$03	;
$F3A8	STA $0451,X	;
$F3AB	LDA #$02	;
$F3AD	STA $88,X	;
$F3AF	RTS		;

$F3B0	CLI		;
$F3B1	BVC $F40B	;
$F3B3	BVC $F405	;
$F3B5	RTI		; (within an if statement) 
$F3B6	SEC		;
$F3B7	BMI $F3E1	;
$F3B9	.byte $04	; INVALID OPCODE !!!
$F3BA	.byte $04	; INVALID OPCODE !!!
$F3BB	.byte $03	; INVALID OPCODE !!!
$F3BC	.byte $03	; INVALID OPCODE !!!
$F3BD	.byte $02	; INVALID OPCODE !!!
$F3BE	.byte $02	; INVALID OPCODE !!!
$F3BF	.byte $02	; INVALID OPCODE !!!
$F3C0	.byte $02	; INVALID OPCODE !!!
$F3C1	.byte $02	; INVALID OPCODE !!!

function_F3C2:
$F3C2	LDA $3D  	;
$F3C4	AND #$20	;
$F3C6	BEQ $F3E4	;
$F3C8	LDX #$0a	;
$F3CA	LDA $F3EB,X	;
$F3CD	STA $57,X	;
$F3CF	DEX		;
$F3D0	BPL $F3CA	;
$F3D2	LDY #$0a	;
$F3D4	LDA $3C  	;
$F3D6	STA $43  	;
$F3D8	JSR $D772	;
$F3DB	STA $60  	;
$F3DD	LDA $43  	;
$F3DF	STA $61  	;
$F3E1	JMP $C123	; (in an if statement) 
$F3E4	LDA #$f6	;
$F3E6	LDY #$f3	;
$F3E8	JMP $C127	; (in an if statement) 
$F3EB	JSR $086C	;
$F3EE	ORA $0A11,Y	;
$F3F1	.byte $1c	; INVALID OPCODE !!!
$F3F2	ASL $0025	;
$F3F5	BRK		;
$F3F6	JSR $086C	;
$F3F9	BIT $24  	;
$F3FB	BIT $24  	;
$F3FD	BIT $24  	;
$F3FF	BIT $24  	;

function_F401:
$F401	JSR $F45B	;
$F404	LDX #$01	;
$F406	LDA $F431,X	;
$F409	LDY $F433,X	;
$F40C	JSR $C127	;
$F40F	DEX		;
$F410	BPL $F406	;
$F412	LDX #$0f	;
$F414	LDA #$24	;
$F416	STA $5A,X	;
$F418	DEX		;
$F419	BPL $F414	;
$F41B	LDA #$10	;
$F41D	STA $59  	;
$F41F	LDA #$21	;
$F421	STA $57  	;
$F423	LDX #$02	;
$F425	LDA $F435,X	;
$F428	STA $58  	;
$F42A	JSR $C123	;
$F42D	DEX		;
$F42E	BPL $F425	;
$F430	RTS		;

$F431	SEC		;
$F432	.byte $4b	; INVALID OPCODE !!!
$F433	.byte $f4	; INVALID OPCODE !!!
$F434	.byte $f4	; INVALID OPCODE !!!
$F435	DEY		;
$F436	TAY		;
$F437	INX		;
$F438	AND ($C8,X)	;
$F43A	BPL $F460	;
$F43C	BIT $24  	;
$F43E	BPL $F44A	;
$F440	ASL $0E,X	;
$F442	BIT $24  	;
$F444	CLC		;
$F445	.byte $1f	; INVALID OPCODE !!!
$F446	ASL $241B	;
$F449	BIT $24  	;
$F44B	.byte $23	; INVALID OPCODE !!!
$F44C	.byte $da	; INVALID OPCODE !!!
$F44D	.byte $04	; INVALID OPCODE !!!
$F44E	TAX		;
$F44F	TAX		;
$F450	TAX		;
$F451	TAX		;

function_F452:
$F452	LDX #$14	;

function_F454:
$F454	JSR $F45B	;
$F457	DEX		;
$F458	BNE $F454	;
$F45A	RTS		; (within an if statement) 

function_F45B:
$F45B	LDA #$00	;
$F45D	STA $02  	;

function_F45F:
$F45F	LDA $02  	;
$F461	BEQ $F45F	;
$F463	DEC $02  	;
$F465	RTS		;


function_F466:
$F466	JSR $F45F	;
$F469	LDA $3A  	;
$F46B	BNE $F465	;
$F46D	JSR $E75E	;
$F470	AND #$10	;
$F472	BEQ $F465	;
$F474	LDA #$04	;
$F476	STA $F2  	;
$F478	LDA $01  	;
$F47A	AND #$ef	;
$F47C	STA $2001	;PPU setup #2
$F47F	JSR $F45B	;
$F482	JSR $E75E	;
$F485	AND #$10	;
$F487	BEQ $F47F	;
$F489	LDA $01  	;
$F48B	STA $2001	;PPU setup #2
$F48E	LDY #$04	;
$F490	LDA $C8  	;
$F492	ORA $16  	;
$F494	BEQ $F498	;
$F496	LDY #$20	;
$F498	STY $F2  	;
$F49A	RTS		;


function_F49B:
$F49B	LDA #$01	;
$F49D	STA $048E	;
$F4A0	STA $048F	;
$F4A3	LDA #$ff	;
$F4A5	STA $BB  	;
$F4A7	STA $87  	;
$F4A9	STA $048C	;
$F4AC	LDX #$01	;
$F4AE	STX $0459	;
$F4B1	STX $90  	;
$F4B3	INX		;
$F4B4	STX $46  	;
$F4B6	LDA #$40	;
$F4B8	STA $99  	;
$F4BA	RTS		;

$F4BB	.byte $ff	; INVALID OPCODE !!!
$F4BC	.byte $ff	; INVALID OPCODE !!!
$F4BD	.byte $ff	; INVALID OPCODE !!!
$F4BE	.byte $ff	; INVALID OPCODE !!!
$F4BF	.byte $ff	; INVALID OPCODE !!!
$F4C0	.byte $ff	; INVALID OPCODE !!!
$F4C1	.byte $ff	; INVALID OPCODE !!!
$F4C2	.byte $ff	; INVALID OPCODE !!!
$F4C3	.byte $ff	; INVALID OPCODE !!!
$F4C4	.byte $ff	; INVALID OPCODE !!!
$F4C5	.byte $ff	; INVALID OPCODE !!!
$F4C6	.byte $ff	; INVALID OPCODE !!!
$F4C7	.byte $ff	; INVALID OPCODE !!!
$F4C8	.byte $ff	; INVALID OPCODE !!!
$F4C9	.byte $ff	; INVALID OPCODE !!!
$F4CA	.byte $ff	; INVALID OPCODE !!!
$F4CB	.byte $ff	; INVALID OPCODE !!!
$F4CC	.byte $ff	; INVALID OPCODE !!!
$F4CD	.byte $ff	; INVALID OPCODE !!!
$F4CE	.byte $ff	; INVALID OPCODE !!!
$F4CF	.byte $ff	; INVALID OPCODE !!!
$F4D0	.byte $ff	; INVALID OPCODE !!!
$F4D1	.byte $ff	; INVALID OPCODE !!!
$F4D2	.byte $ff	; INVALID OPCODE !!!
$F4D3	.byte $ff	; INVALID OPCODE !!!
$F4D4	.byte $ff	; INVALID OPCODE !!!
$F4D5	.byte $ff	; INVALID OPCODE !!!
$F4D6	.byte $ff	; INVALID OPCODE !!!
$F4D7	.byte $ff	; INVALID OPCODE !!!
$F4D8	.byte $ff	; INVALID OPCODE !!!
$F4D9	.byte $ff	; INVALID OPCODE !!!
$F4DA	.byte $ff	; INVALID OPCODE !!!
$F4DB	.byte $ff	; INVALID OPCODE !!!
$F4DC	.byte $ff	; INVALID OPCODE !!!
$F4DD	.byte $ff	; INVALID OPCODE !!!
$F4DE	.byte $ff	; INVALID OPCODE !!!
$F4DF	.byte $ff	; INVALID OPCODE !!!
$F4E0	.byte $ff	; INVALID OPCODE !!!
$F4E1	.byte $ff	; INVALID OPCODE !!!
$F4E2	.byte $ff	; INVALID OPCODE !!!
$F4E3	.byte $ff	; INVALID OPCODE !!!
$F4E4	.byte $ff	; INVALID OPCODE !!!
$F4E5	.byte $ff	; INVALID OPCODE !!!
$F4E6	.byte $ff	; INVALID OPCODE !!!
$F4E7	.byte $ff	; INVALID OPCODE !!!
$F4E8	.byte $ff	; INVALID OPCODE !!!
$F4E9	.byte $ff	; INVALID OPCODE !!!
$F4EA	.byte $ff	; INVALID OPCODE !!!
$F4EB	.byte $ff	; INVALID OPCODE !!!
$F4EC	.byte $ff	; INVALID OPCODE !!!
$F4ED	.byte $ff	; INVALID OPCODE !!!
$F4EE	.byte $ff	; INVALID OPCODE !!!
$F4EF	.byte $ff	; INVALID OPCODE !!!
$F4F0	.byte $ff	; INVALID OPCODE !!!
$F4F1	.byte $ff	; INVALID OPCODE !!!
$F4F2	.byte $ff	; INVALID OPCODE !!!
$F4F3	.byte $ff	; INVALID OPCODE !!!
$F4F4	.byte $ff	; INVALID OPCODE !!!
$F4F5	.byte $ff	; INVALID OPCODE !!!
$F4F6	.byte $ff	; INVALID OPCODE !!!
$F4F7	.byte $ff	; INVALID OPCODE !!!
$F4F8	.byte $ff	; INVALID OPCODE !!!
$F4F9	.byte $ff	; INVALID OPCODE !!!
$F4FA	.byte $ff	; INVALID OPCODE !!!
$F4FB	.byte $ff	; INVALID OPCODE !!!
$F4FC	.byte $ff	; INVALID OPCODE !!!
$F4FD	.byte $ff	; INVALID OPCODE !!!
$F4FE	.byte $ff	; INVALID OPCODE !!!
$F4FF	.byte $ff	; INVALID OPCODE !!!
$F500	JSR $F78F	;
$F503	RTS		;

$F504	LDA #$00	;
$F506	TAX		;
$F507	STA $FD  	;
$F509	BEQ $F51B	;
$F50B	TXA		;
$F50C	LSR A		;
$F50D	TAX		;
$F50E	INX		;
$F50F	TXA		;
$F510	CMP #$04	;
$F512	BEQ $F503	;
$F514	LDA $FD  	;
$F516	CLC		;
$F517	ADC #$04	;
$F519	STA $FD  	;
$F51B	TXA		;
$F51C	ASL A		;
$F51D	TAX		;
$F51E	LDA $E0,X	;
$F520	STA $FE  	;
$F522	LDA $E1,X	;
$F524	STA $FF  	;
$F526	LDA $E1,X	;
$F528	BEQ $F50B	;
$F52A	TXA		;
$F52B	LSR A		;
$F52C	TAX		;
$F52D	DEC $D0,X	;
$F52F	BNE $F50E	;
$F531	LDY $E8,X	;
$F533	INC $E8,X	;
$F535	LDA ($FE),Y	;
$F537	BEQ $F500	;
$F539	TAY		;
$F53A	CMP #$ff	;
$F53C	BEQ $F547	;
$F53E	AND #$c0	;
$F540	CMP #$c0	;
$F542	BEQ $F553	;
$F544	JMP $F561	; (in an if statement) 
$F547	LDA $D8,X	;
$F549	BEQ $F55E	;
$F54B	DEC $D8,X	;
$F54D	LDA $EC,X	;
$F54F	STA $E8,X	;
$F551	BNE $F55E	;
$F553	TYA		;
$F554	AND #$3f	;
$F556	STA $D8,X	;
$F558	DEC $D8,X	;
$F55A	LDA $E8,X	;
$F55C	STA $EC,X	;
$F55E	JMP $F531	;

$F561	TYA		;
$F562	BPL $F57B	;
$F564	AND #$0f	;
$F566	CLC		;
$F567	ADC $DF  	;
$F569	TAY		;
$F56A	LDA $F660,Y	;
$F56D	STA $D4,X	;
$F56F	TAY		;
$F570	TXA		;
$F571	CMP #$02	;
$F573	BEQ $F5C4	;
$F575	LDY $E8,X	;
$F577	INC $E8,X	;
$F579	LDA ($FE),Y	;
$F57B	TAY		;
$F57C	TXA		;
$F57D	CMP #$03	;
$F57F	BEQ $F5E1	;
$F581	PHA		;
$F582	TAX		;
$F583	CMP #$01	;
$F585	BEQ $F5B9	;
$F587	LDX $FD  	;
$F589	LDA $F601,Y	;
$F58C	BEQ $F599	;
$F58E	STA $4002,X	;Audio -> Square 1
$F591	LDA $F600,Y	;
$F594	ORA #$08	;
$F596	STA $4003,X	;Audio -> Square 1
$F599	TAY		;
$F59A	PLA		;
$F59B	TAX		;
$F59C	TYA		;
$F59D	BNE $F5AA	;
$F59F	LDY #$00	;
$F5A1	TXA		;
$F5A2	CMP #$02	;
$F5A4	BEQ $F5AC	;
$F5A6	LDY #$10	;
$F5A8	BNE $F5AC	;
$F5AA	LDY $DC,X	;
$F5AC	TYA		;
$F5AD	LDY $FD  	;
$F5AF	STA $4000,Y	;Audio -> Square 1
$F5B2	LDA $D4,X	;
$F5B4	STA $D0,X	;
$F5B6	JMP $F50E	; (in an if statement) 
$F5B9	LDA $F5  	;
$F5BB	AND #$02	;
$F5BD	BEQ $F587	;
$F5BF	PLA		;
$F5C0	TAX		;
$F5C1	JMP $F5B2	; (in an if statement) 
$F5C4	TYA		;
$F5C5	LDY $06F0	;
$F5C8	BEQ $F5CE	;
$F5CA	LDA #$ff	;
$F5CC	BNE $F5D9	;
$F5CE	CLC		;
$F5CF	ADC #$fe	;
$F5D1	ASL A		;
$F5D2	ASL A		;
$F5D3	CMP #$3c	;
$F5D5	BCC $F5D9	;
$F5D7	LDA #$3c	;
$F5D9	STA $4008	;Audio -> Triangle
$F5DC	STA $DE  	;
$F5DE	JMP $F575	; (in an if statement) 
$F5E1	LDA $F4  	;
$F5E3	CMP #$02	;
$F5E5	BEQ $F5F9	;
$F5E7	LDA $F700,Y	;
$F5EA	STA $400C	;Audio -> Noise control reg
$F5ED	LDA $F701,Y	;
$F5F0	STA $400E	;Audio -> Noise Frequency reg #1
$F5F3	LDA $F702,Y	;
$F5F6	STA $400F	;Audio -> Noise Frequency reg #2
$F5F9	JMP $F5B2	;

$F5FC	ASL $FF,X	;
$F5FE	BPL $F5C5	;
$F600	.byte $07	; INVALID OPCODE !!!
$F601	BEQ $F603	;
$F603	BRK		;
$F604	BRK		;
$F605	.byte $d4	; INVALID OPCODE !!!
$F606	BRK		;
$F607	INY		;
$F608	BRK		;
$F609	LDA $B200,X	;
$F60C	BRK		;
$F60D	TAY		;
$F60E	BRK		;
$F60F	.byte $9f	; INVALID OPCODE !!!
$F610	BRK		;
$F611	STX $00,Y 	;
$F613	STA $8500	;
$F616	BRK		;
$F617	ROR $7600,X	; saved-to-battery RAM 
$F61A	BRK		;
$F61B	BVS $F61E	;
$F61D	.byte $ab	; INVALID OPCODE !!!
$F61E	ORA ($93,X)	;
$F620	ORA ($7C,X)	;
$F622	ORA ($67,X)	;
$F624	ORA ($52,X)	;
$F626	ORA ($3F,X)	;
$F628	ORA ($2D,X)	;
$F62A	ORA ($1C,X)	;
$F62C	ORA ($0C,X)	;
$F62E	BRK		;
$F62F	SBC $EE00,X	;
$F632	BRK		;
$F633	SBC ($03,X)	;
$F635	.byte $57	; INVALID OPCODE !!!
$F636	.byte $03	; INVALID OPCODE !!!
$F637	.byte $27	; INVALID OPCODE !!!
$F638	.byte $02	; INVALID OPCODE !!!
$F639	SBC $CF02,Y	;
$F63C	.byte $02	; INVALID OPCODE !!!
$F63D	LDX $02  	;
$F63F	.byte $80	; INVALID OPCODE !!!
$F640	.byte $02	; INVALID OPCODE !!!
$F641	.byte $5c	; INVALID OPCODE !!!
$F642	.byte $02	; INVALID OPCODE !!!
$F643	.byte $3a	; INVALID OPCODE !!!
$F644	.byte $02	; INVALID OPCODE !!!
$F645	.byte $1a	; INVALID OPCODE !!!
$F646	ORA ($FC,X)	;
$F648	ORA ($DF,X)	;
$F64A	ORA ($C4,X)	;
$F64C	.byte $03	; INVALID OPCODE !!!
$F64D	SED		;
$F64E	BRK		;
$F64F	ADC #$00	;
$F651	.byte $63	; INVALID OPCODE !!!
$F652	BRK		;
$F653	LSR $5800,X	; MMC5 register or expansion RAM 
$F656	BRK		;
$F657	.byte $53	; INVALID OPCODE !!!
$F658	BRK		;
$F659	.byte $4f	; INVALID OPCODE !!!
$F65A	BRK		;
$F65B	LSR A		;
$F65C	BRK		;
$F65D	LSR $00  	;
$F65F	.byte $42	; INVALID OPCODE !!!
$F660	.byte $03	; INVALID OPCODE !!!
$F661	ASL $0C  	;
$F663	CLC		;
$F664	BMI $F678	;
$F666	BIT $09  	;
$F668	PHP		;
$F669	.byte $04	; INVALID OPCODE !!!
$F66A	.byte $07	; INVALID OPCODE !!!
$F66B	ORA ($04,X)	;
$F66D	PHP		;
$F66E	BPL $F690	;
$F670	RTI		; (within an if statement) 
$F671	CLC		;
$F672	BMI $F680	;
$F674	ORA ($06,X)	;
$F676	.byte $0c	; INVALID OPCODE !!!
$F677	CLC		;
$F678	BMI $F6DA	;
$F67A	BIT $48  	;
$F67C	.byte $12	; INVALID OPCODE !!!
$F67D	BPL $F687	;
$F67F	ASL $0302	;
$F682	.byte $04	; INVALID OPCODE !!!

function_F683:
$F683	LDA #$00	;
$F685	BEQ $F691	;

function_F687:
$F687	LDA #$08	;
$F689	BNE $F691	;

function_F68B:
$F68B	LDA #$0c	;
$F68D	BNE $F691	;

function_F68F:
$F68F	LDA #$04	;
$F691	STA $F9  	;
$F693	LDA #$40	;
$F695	STA $FA  	;
$F697	STX $FB  	;
$F699	STY $FC  	;
$F69B	LDY #$00	;
$F69D	LDA ($FB),Y	;
$F69F	STA ($F9),Y	;
$F6A1	INY		;
$F6A2	TYA		;
$F6A3	CMP #$04	;
$F6A5	BNE $F69D	;
$F6A7	RTS		; (within an if statement) 

function_F6A8:
$F6A8	TAX		;
$F6A9	JSR $F798	;
$F6AC	STX $F6  	;
$F6AE	LDA $06F5	;
$F6B1	BEQ $F6BE	;
$F6B3	CMP #$02	;
$F6B5	BNE $F6BE	;
$F6B7	STA $F0  	;
$F6B9	LDA #$00	;
$F6BB	STA $06F5	;
$F6BE	LDA $FBCA,Y	;
$F6C1	TAY		;
$F6C2	LDX #$00	;
$F6C4	LDA $FBCA,Y	;
$F6C7	STA $DF,X	;
$F6C9	INY		;
$F6CA	INX		;
$F6CB	TXA		;
$F6CC	CMP #$09	;
$F6CE	BNE $F6C4	;
$F6D0	LDA #$01	;
$F6D2	STA $D0  	;
$F6D4	STA $D1  	;
$F6D6	STA $D2  	;
$F6D8	STA $D3  	;
$F6DA	LDA #$00	;
$F6DC	STA $E8  	;
$F6DE	STA $E9  	;
$F6E0	STA $EA  	;
$F6E2	STA $EB  	;
$F6E4	RTS		;

$F6E5	STY $AB,X	;
$F6E7	SBC $0058,X	;
$F6EA	.byte $7f	; INVALID OPCODE !!!
$F6EB	.byte $04	; INVALID OPCODE !!!
$F6EC	CLC		;
$F6ED	.byte $3f	; INVALID OPCODE !!!
$F6EE	.byte $7f	; INVALID OPCODE !!!
$F6EF	BRK		;
$F6F0	BRK		;
$F6F1	ASL $7F  	;
$F6F3	ASL A		;
$F6F4	CPY #$08	;
$F6F6	.byte $7f	; INVALID OPCODE !!!
$F6F7	ORA $C0  	;
$F6F9	CMP ($89,X)	;
$F6FB	.byte $02	; INVALID OPCODE !!!
$F6FC	.byte $0f	; INVALID OPCODE !!!
$F6FD	.byte $ff	; INVALID OPCODE !!!
$F6FE	.byte $ff	; INVALID OPCODE !!!
$F6FF	.byte $ff	; INVALID OPCODE !!!
$F700	BPL $F702	;
$F702	CLC		;
$F703	BPL $F706	;
$F705	CLC		;
$F706	BRK		;
$F707	ORA ($88,X)	;
$F709	.byte $02	; INVALID OPCODE !!!
$F70A	.byte $02	; INVALID OPCODE !!!
$F70B	RTI		;

$F70C	.byte $03	; INVALID OPCODE !!!
$F70D	ORA $40  	;
$F70F	.byte $04	; INVALID OPCODE !!!
$F710	.byte $07	; INVALID OPCODE !!!
$F711	RTI		;


function_F712:
$F712	LDA #$7f	;
$F714	STA $4001	;Audio -> Square 1
$F717	STA $4005	;Audio -> Square 2

function_F71A:
$F71A	STX $DC  	;
$F71C	STY $DD  	;
$F71E	RTS		;

$F71F	LDX #$e5	;
$F721	LDY #$f6	;
$F723	BNE $F745	;

function_F725:
$F725	LDA $F3  	;
$F727	LSR A		;
$F728	BCS $F736	;
$F72A	LDA $F7  	;
$F72C	LSR A		;
$F72D	BCS $F749	;
$F72F	LDA $F0  	;
$F731	AND #$10	;
$F733	BNE $F71F	;
$F735	RTS		; (within an if statement) 
$F736	LDA $F7  	;
$F738	ORA #$01	;
$F73A	STA $F7  	;
$F73C	LDA #$00	;
$F73E	STA $06E4	;
$F741	LDX #$fc	;
$F743	LDY #$f5	;
$F745	JSR $F683	;
$F748	RTS		; (within an if statement) 
$F749	INC $06E4	;
$F74C	LDA $06E4	;
$F74F	CMP #$58	;
$F751	BNE $F77B	;
$F753	LDA #$00	;
$F755	STA $F7  	;
$F757	RTS		; (within an if statement) 
$F758	LDA #$c0	;
$F75A	STA $4017	;Joypad & I/O port for port #2
$F75D	JSR $FB25	;
$F760	JSR $F90A	;
$F763	JSR $FA38	;
$F766	JSR $FAAC	;
$F769	JSR $F824	;
$F76C	LDA $F1  	;
$F76E	STA $06E9	;
$F771	LDA #$00	;
$F773	STA $F0  	;
$F775	STA $F1  	;
$F777	STA $F2  	;
$F779	STA $F3  	;
$F77B	RTS		;

$F77C	LDA $F4  	;
$F77E	AND #$06	;
$F780	BNE $F77B	;
$F782	LDA $F4  	;
$F784	AND #$f0	;
$F786	STA $F4  	;
$F788	LDX #$e9	;
$F78A	LDY #$f6	;
$F78C	JMP $F879	;


function_F78F:
$F78F	LDA $F6  	;
$F791	CMP #$20	;
$F793	BNE $F79F	;
$F795	INC $06E8	;

function_F798:
$F798	AND #$0f	;
$F79A	CMP #$0f	;
$F79C	BNE $F7A5	;
$F79E	TXA		;
$F79F	LDA $F4  	;
$F7A1	AND #$20	;
$F7A3	BNE $F7C7	;

function_F7A5:
$F7A5	LDA #$10	;
$F7A7	STA $400C	;Audio -> Noise control reg
$F7AA	STA $4000	;Audio -> Square 1
$F7AD	STA $4004	;Audio -> Square 2
$F7B0	LDA #$00	;
$F7B2	STA $F4  	;
$F7B4	STA $F5  	;
$F7B6	STA $F6  	;
$F7B8	STA $06FA	;
$F7BB	STA $F7  	;
$F7BD	STA $4008	;Audio -> Triangle
$F7C0	STA $4011	;Audio -> DPCM D/A data
$F7C3	STA $06F0	;
$F7C6	RTS		; (within an if statement) 
$F7C7	LDA #$10	;
$F7C9	STA $4004	;Audio -> Square 2
$F7CC	STA $400C	;Audio -> Noise control reg
$F7CF	LDA #$00	;
$F7D1	BEQ $F7B4	;
$F7D3	LDA #$00	;
$F7D5	STA $06FA	;
$F7D8	RTS		;

$F7D9	LDX #$f5	;
$F7DB	LDY #$f6	;
$F7DD	JMP $F879	;

$F7E0	INC $06FB	;
$F7E3	LDA $06FB	;
$F7E6	CMP #$10	;
$F7E8	BEQ $F7D9	;
$F7EA	CMP #$20	;
$F7EC	BEQ $F7D3	;
$F7EE	RTS		;

$F7EF	LDA #$00	;
$F7F1	STA $06FB	;
$F7F4	LDA #$f0	;
$F7F6	STA $06FA	;
$F7F9	LDX #$f1	;
$F7FB	LDY #$f6	;
$F7FD	JMP $F879	;

$F800	LDA $F4  	;
$F802	AND #$f0	;
$F804	ORA #$02	;
$F806	STA $F4  	;
$F808	LDA #$00	;
$F80A	STA $06F7	;
$F80D	LDX #$f1	;
$F80F	LDY #$f6	;
$F811	JMP $F879	;

$F814	INC $06F7	;
$F817	LDA $06F7	;
$F81A	CMP #$10	;
$F81C	BNE $F85B	;
$F81E	JMP $F89B	; (in an if statement) 
$F821	JMP $F7A5	; (in an if statement) 

function_F824:
$F824	LDA $F0  	;
$F826	LSR A		;
$F827	BCS $F821	;
$F829	LDA $F6  	;
$F82B	CMP #$df	;
$F82D	BEQ $F83B	;
$F82F	CMP #$7f	;
$F831	BEQ $F83B	;
$F833	CMP #$20	;
$F835	BEQ $F83B	;
$F837	LDA $F6  	;
$F839	BNE $F85B	;
$F83B	LDA $06FA	;
$F83E	CMP #$0f	;
$F840	BEQ $F7EF	;
$F842	CMP #$f0	;
$F844	BEQ $F7E0	;
$F846	LDA $F0  	;
$F848	LSR A		;
$F849	LSR A		;
$F84A	BCS $F800	;
$F84C	LSR A		;
$F84D	BCS $F85F	;
$F84F	LSR A		;
$F850	BCS $F85C	;
$F852	LDA $F4  	;
$F854	LSR A		;
$F855	LSR A		;
$F856	BCS $F814	;
$F858	LSR A		;
$F859	BCS $F87D	;
$F85B	RTS		; (within an if statement) 
$F85C	JMP $F77C	; (in an if statement) 
$F85F	LDA $F4  	;
$F861	AND #$80	;
$F863	BNE $F85B	;
$F865	LDA $F4  	;
$F867	AND #$f0	;
$F869	ORA #$04	;
$F86B	STA $F4  	;
$F86D	LDA #$00	;
$F86F	STA $06F3	;
$F872	STA $06F1	;
$F875	LDX #$ed	;
$F877	LDY #$f6	;
$F879	JSR $F68B	;
$F87C	RTS		; (within an if statement) 
$F87D	INC $06F3	;
$F880	LDA $06F3	;
$F883	CMP #$03	;
$F885	BNE $F8A1	;
$F887	LDA #$00	;
$F889	STA $06F3	;
$F88C	INC $06F1	;
$F88F	LDA $06F1	;
$F892	CMP #$10	;
$F894	BNE $F8A2	;
$F896	LDA #$10	;
$F898	STA $400C	;Audio -> Noise control reg
$F89B	LDA $F4  	;
$F89D	AND #$f0	;
$F89F	STA $F4  	;
$F8A1	RTS		;

$F8A2	STA $400E	;Audio -> Noise Frequency reg #1
$F8A5	RTS		;

$F8A6	LDA #$00	;
$F8A8	STA $06E0	;
$F8AB	CLC		;
$F8AC	LDA $1B  	;
$F8AE	AND #$07	;
$F8B0	ADC #$02	;
$F8B2	STA $06E1	;
$F8B5	LDA $F7  	;
$F8B7	AND #$00	;
$F8B9	ORA #$80	;
$F8BB	STA $F7  	;
$F8BD	BNE $F8E8	;
$F8BF	INC $06E0	;
$F8C2	LDA $06E0	;
$F8C5	CMP $06E1	;
$F8C8	BNE $F8E8	;
$F8CA	LDA #$10	;
$F8CC	STA $4000	;Audio -> Square 1
$F8CF	STA $4004	;Audio -> Square 2
$F8D2	LDA #$00	;
$F8D4	STA $F7  	;
$F8D6	LDA $F4  	;
$F8D8	AND #$0f	;
$F8DA	STA $F4  	;
$F8DC	RTS		; (within an if statement) 
$F8DD	JSR $F7A5	;
$F8E0	LDA #$80	;
$F8E2	STA $F4  	;
$F8E4	LDA #$02	;
$F8E6	STA $F0  	;
$F8E8	LDX #$f9	;
$F8EA	LDY #$f6	;
$F8EC	JSR $F683	;
$F8EF	LDA $1B  	;
$F8F1	AND #$0f	;
$F8F3	STA $4002	;Audio -> Square 1
$F8F6	LDX #$f9	;
$F8F8	LDY #$f6	;
$F8FA	JSR $F68F	;
$F8FD	LDA $1B  	;
$F8FF	LSR A		;
$F900	LSR A		;
$F901	AND #$0f	;
$F903	STA $4006	;Audio -> Square 2
$F906	RTS		;

$F907	JMP $F8A6	;


function_F90A:
$F90A	LDA $F6  	;
$F90C	BEQ $F91B	;
$F90E	CMP #$df	;
$F910	BEQ $F91B	;
$F912	LDA $F0  	;
$F914	AND #$e0	;
$F916	BEQ $F94E	;
$F918	JSR $F7A5	;
$F91B	LDA $F0  	;
$F91D	ASL A		;
$F91E	BCS $F8DD	;
$F920	ASL A		;
$F921	BCS $F952	;
$F923	ASL A		;
$F924	BCS $F965	;
$F926	LDA $F4  	;
$F928	ASL A		;
$F929	BCS $F8E8	;
$F92B	LDA $F4  	;
$F92D	AND #$e0	;
$F92F	BNE $F94E	;
$F931	LDA $F6  	;
$F933	CMP #$df	;
$F935	BEQ $F94B	;
$F937	LDA $F6  	;
$F939	BNE $F94E	;
$F93B	LDA $F3  	;
$F93D	ASL A		;
$F93E	BCS $F907	;
$F940	ASL A		;
$F941	BCS $F977	;
$F943	LDA $F7  	;
$F945	ASL A		;
$F946	BCS $F94F	;
$F948	ASL A		;
$F949	BCS $F993	;
$F94B	JSR $F725	;
$F94E	RTS		; (within an if statement) 
$F94F	JMP $F8BF	; (in an if statement) 
$F952	LDA #$0f	;
$F954	STA $06FA	;
$F957	LDA $F4  	;
$F959	AND #$0f	;
$F95B	ORA #$40	;
$F95D	STA $F4  	;
$F95F	LDX #$d1	;
$F961	LDY #$f9	;
$F963	BNE $F98F	;
$F965	LDA #$02	;
$F967	STA $F0  	;
$F969	LDA $F4  	;
$F96B	AND #$0f	;
$F96D	ORA #$20	;
$F96F	STA $F4  	;
$F971	LDX #$cd	;
$F973	LDY #$f9	;
$F975	BNE $F98F	;
$F977	LDA #$00	;
$F979	STA $06FC	;
$F97C	LDA $F7  	;
$F97E	AND #$00	;
$F980	ORA #$40	;
$F982	STA $F7  	;
$F984	LDX #$d5	;
$F986	LDY #$f9	;
$F988	JSR $F68F	;
$F98B	LDX #$d9	;
$F98D	LDY #$f9	;
$F98F	JSR $F683	;
$F992	RTS		; (within an if statement) 
$F993	INC $06FC	;
$F996	LDA $06FC	;
$F999	CMP #$12	;
$F99B	BEQ $F9CA	;
$F99D	CMP #$06	;
$F99F	BCC $F9B1	;
$F9A1	LDA $1B  	;
$F9A3	ORA #$10	;
$F9A5	AND #$7f	;
$F9A7	STA $06FE	;
$F9AA	ROL A		;
$F9AB	STA $06FD	;
$F9AE	JMP $F9BD	; (in an if statement) 
$F9B1	INC $06FD	;
$F9B4	INC $06FD	;
$F9B7	INC $06FE	;
$F9BA	INC $06FE	;
$F9BD	LDA $06FD	;
$F9C0	STA $4006	;Audio -> Square 2
$F9C3	LDA $06FE	;
$F9C6	STA $4002	;Audio -> Square 1
$F9C9	RTS		; (within an if statement) 
$F9CA	JMP $F8CA	;

$F9CD	CLV		;
$F9CE	CMP $20,X	;
$F9D0	BRK		;
$F9D1	.byte $9f	; INVALID OPCODE !!!
$F9D2	.byte $93	; INVALID OPCODE !!!
$F9D3	.byte $80	; INVALID OPCODE !!!
$F9D4	.byte $22	; INVALID OPCODE !!!
$F9D5	.byte $3f	; INVALID OPCODE !!!
$F9D6	TSX		;
$F9D7	CPX #$06	;
$F9D9	.byte $3f	; INVALID OPCODE !!!
$F9DA	.byte $bb	; INVALID OPCODE !!!
$F9DB	DEC $B806	;
$F9DE	.byte $93	; INVALID OPCODE !!!
$F9DF	BVC $F9E3	;
$F9E1	.byte $80	; INVALID OPCODE !!!
$F9E2	.byte $7f	; INVALID OPCODE !!!
$F9E3	RTS		;

$F9E4	PLA		;
$F9E5	.byte $80	; INVALID OPCODE !!!
$F9E6	.byte $7f	; INVALID OPCODE !!!
$F9E7	.byte $62	; INVALID OPCODE !!!
$F9E8	PLA		;
$F9E9	LDA $F5  	;
$F9EB	AND #$02	;
$F9ED	BNE $FA26	;
$F9EF	LDA $F6  	;
$F9F1	CMP #$df	;
$F9F3	BEQ $F9F9	;
$F9F5	LDA $F6  	;
$F9F7	BNE $FA26	;
$F9F9	LDA #$00	;
$F9FB	STA $06F9	;
$F9FE	LDA $F5  	;
$FA00	AND #$e0	;
$FA02	ORA #$02	;
$FA04	STA $F5  	;
$FA06	LDX #$dd	;
$FA08	LDY #$f9	;
$FA0A	BNE $FA7F	;
$FA0C	INC $06F9	;
$FA0F	LDA $06F9	;
$FA12	CMP #$07	;
$FA14	BNE $FA26	;
$FA16	LDA #$7f	;
$FA18	STA $4005	;Audio -> Square 2
$FA1B	LDA #$10	;
$FA1D	STA $4004	;Audio -> Square 2
$FA20	LDA $F5  	;
$FA22	AND #$e0	;
$FA24	STA $F5  	;
$FA26	RTS		; (within an if statement) 
$FA27	JSR $F7A5	;
$FA2A	LDX #$e1	;
$FA2C	LDY #$f9	;
$FA2E	JSR $F683	;
$FA31	LDX #$e5	;
$FA33	LDY #$f9	;
$FA35	JMP $FA7F	; (in an if statement) 

function_FA38:
$FA38	LDA $F6  	;
$FA3A	BEQ $FA42	;
$FA3C	AND #$0f	;
$FA3E	CMP #$0f	;
$FA40	BNE $FA63	;
$FA42	LDA $F4  	;
$FA44	AND #$80	;
$FA46	BNE $FA63	;
$FA48	LDA $F7  	;
$FA4A	AND #$c0	;
$FA4C	BNE $FA63	;
$FA4E	LDA $F1  	;
$FA50	LSR A		;
$FA51	BCS $FA27	;
$FA53	LSR A		;
$FA54	BCS $F9E9	;
$FA56	LSR A		;
$FA57	BCS $FA83	;
$FA59	LSR A		;
$FA5A	LSR A		;
$FA5B	BCS $FA64	;
$FA5D	LDA $F5  	;
$FA5F	LSR A		;
$FA60	LSR A		;
$FA61	BCS $FA0C	;
$FA63	RTS		; (within an if statement) 
$FA64	LDA $F6  	;
$FA66	BNE $FA63	;
$FA68	LDA $F5  	;
$FA6A	AND #$02	;
$FA6C	BNE $FA63	;
$FA6E	LDX #$8a	;
$FA70	LDY #$fa	;
$FA72	JSR $F68F	;
$FA75	LDA $1B  	;
$FA77	AND #$3f	;
$FA79	ORA #$10	;
$FA7B	STA $4006	;Audio -> Square 2
$FA7E	RTS		; (within an if statement) 
$FA7F	JSR $F68F	;
$FA82	RTS		; (within an if statement) 
$FA83	LDY #$0a	;
$FA85	LDA #$ef	;
$FA87	JMP $FBA5	;

$FA8A	CMP $A886,Y	;
$FA8D	PHA		;
$FA8E	PHP		;
$FA8F	.byte $7f	; INVALID OPCODE !!!
$FA90	RTI		;

$FA91	PLP		;
$FA92	PHP		;
$FA93	.byte $7f	; INVALID OPCODE !!!
$FA94	EOR $28  	;
$FA96	INC $06F6	;
$FA99	LDA $06F6	;
$FA9C	CMP #$04	;
$FA9E	BNE $FAD8	;
$FAA0	LDA $F5  	;
$FAA2	AND #$1f	;
$FAA4	STA $F5  	;
$FAA6	LDX #$92	;
$FAA8	LDY #$fa	;
$FAAA	BNE $FB00	;

function_FAAC:
$FAAC	LDA $F6  	;
$FAAE	BEQ $FABA	;
$FAB0	CMP #$08	;
$FAB2	BEQ $FABA	;
$FAB4	AND #$0f	;
$FAB6	CMP #$0f	;
$FAB8	BNE $FAD8	;
$FABA	LDA $F4  	;
$FABC	AND #$80	;
$FABE	BNE $FAD8	;
$FAC0	LDA $F1  	;
$FAC2	ASL A		;
$FAC3	BCS $FB17	;
$FAC5	ASL A		;
$FAC6	BCS $FAE2	;
$FAC8	LDA $F5  	;
$FACA	ASL A		;
$FACB	ASL A		;
$FACC	BCS $FA96	;
$FACE	LDA $F1  	;
$FAD0	AND #$20	;
$FAD2	BEQ $FAD9	;
$FAD4	LDA $F6  	;
$FAD6	BEQ $FB04	;
$FAD8	RTS		; (within an if statement) 
$FAD9	LDA $F6  	;
$FADB	CMP #$df	;
$FADD	BNE $FAD8	;
$FADF	JMP $F79F	; (in an if statement) 
$FAE2	LDA $F5  	;
$FAE4	AND #$1f	;
$FAE6	ORA #$40	;
$FAE8	STA $F5  	;
$FAEA	LDA #$00	;
$FAEC	STA $4008	;Audio -> Triangle
$FAEF	STA $F6  	;
$FAF1	STA $06F6	;
$FAF4	LDA #$10	;
$FAF6	STA $4004	;Audio -> Square 2
$FAF9	STA $400C	;Audio -> Noise control reg
$FAFC	LDX #$8e	;
$FAFE	LDY #$fa	;
$FB00	JSR $F687	;
$FB03	RTS		; (within an if statement) 
$FB04	LDA $06E9	;
$FB07	AND #$20	;
$FB09	BNE $FB10	;
$FB0B	LDA #$02	;
$FB0D	STA $06F5	;
$FB10	LDY #$08	;
$FB12	LDA #$df	;
$FB14	JMP $FBA5	; (in an if statement) 
$FB17	LDY #$04	;
$FB19	LDA #$7f	;
$FB1B	JMP $FBA5	;

$FB1E	LDY #$00	;
$FB20	LDA #$02	;
$FB22	JMP $FBC1	;


function_FB25:
$FB25	LDA $06E8	;
$FB28	BNE $FB5E	;
$FB2A	LDA $F2  	;
$FB2C	LSR A		;
$FB2D	BCS $FB82	;
$FB2F	LSR A		;
$FB30	BCS $FB1E	;
$FB32	LSR A		;
$FB33	BCS $FB4C	;
$FB35	LSR A		;
$FB36	BCS $FB7C	;
$FB38	LSR A		;
$FB39	BCS $FB69	;
$FB3B	LSR A		;
$FB3C	BCS $FB5E	;
$FB3E	LSR A		;
$FB3F	BCS $FB58	;
$FB41	LSR A		;
$FB42	BCS $FB52	;
$FB44	LDA $F6  	;
$FB46	BNE $FB49	;
$FB48	RTS		; (within an if statement) 
$FB49	JMP $F504	; (in an if statement) 
$FB4C	LDY #$02	;
$FB4E	LDA #$04	;
$FB50	BNE $FBA5	;
$FB52	LDY #$09	;
$FB54	LDA #$80	;
$FB56	BNE $FB6D	;
$FB58	LDY #$07	;
$FB5A	LDA #$40	;
$FB5C	BNE $FB6D	;
$FB5E	LDA #$00	;
$FB60	STA $06E8	;
$FB63	LDY #$06	;
$FB65	LDA #$20	;
$FB67	BNE $FBC1	;
$FB69	LDY #$05	;
$FB6B	LDA #$10	;
$FB6D	JSR $F6A8	;
$FB70	LDX #$fc	;
$FB72	LDY #$fc	;
$FB74	JSR $F712	;
$FB77	INC $06F0	;
$FB7A	BNE $FB49	;
$FB7C	LDY #$03	;
$FB7E	LDA #$08	;
$FB80	BNE $FB86	;
$FB82	LDY #$01	;
$FB84	LDA #$01	;
$FB86	JSR $F6A8	;
$FB89	LDX #$80	;
$FB8B	LDY #$80	;
$FB8D	JSR $F71A	;
$FB90	LDA #$83	;
$FB92	STA $4001	;Audio -> Square 1
$FB95	LDA #$7f	;
$FB97	STA $4005	;Audio -> Square 2
$FB9A	BNE $FBAF	;
$FB9C	JSR $F6A8	;
$FB9F	LDX #$04	;
$FBA1	LDY #$04	;
$FBA3	BNE $FBAC	;
$FBA5	JSR $F6A8	;
$FBA8	LDX #$80	;
$FBAA	LDY #$80	;
$FBAC	JSR $F712	;
$FBAF	LDA #$00	;
$FBB1	STA $06F0	;
$FBB4	LDA $F4  	;
$FBB6	AND #$20	;
$FBB8	BEQ $FB49	;
$FBBA	LDA #$d5	;
$FBBC	STA $4001	;Audio -> Square 1
$FBBF	BNE $FB49	;
$FBC1	JSR $F6A8	;
$FBC4	LDX #$80	;
$FBC6	LDY #$ba	;
$FBC8	BNE $FB8D	;
$FBCA	.byte $0b	; INVALID OPCODE !!!
$FBCB	.byte $14	; INVALID OPCODE !!!
$FBCC	ORA $2F26,X	;
$FBCF	SEC		;
$FBD0	EOR ($4A,X)	;
$FBD2	.byte $53	; INVALID OPCODE !!!
$FBD3	.byte $5c	; INVALID OPCODE !!!
$FBD4	ADC $0C  	;
$FBD6	.byte $02	; INVALID OPCODE !!!
$FBD7	.byte $ff	; INVALID OPCODE !!!
$FBD8	.byte $0b	; INVALID OPCODE !!!
$FBD9	.byte $ff	; INVALID OPCODE !!!
$FBDA	ASL $31FF,X	;
$FBDD	.byte $ff	; INVALID OPCODE !!!
$FBDE	ORA $18,X	;
$FBE0	INC $FE2A,X	;
$FBE3	ADC $FE  	;
$FBE5	STX $FE  	;
$FBE7	.byte $0c	; INVALID OPCODE !!!
$FBE8	ORA $00FE	;
$FBEB	BRK		;
$FBEC	.byte $13	; INVALID OPCODE !!!
$FBED	INC $0000,X	;
$FBF0	ORA $38,X	;
$FBF2	.byte $ff	; INVALID OPCODE !!!
$FBF3	.byte $5a	; INVALID OPCODE !!!
$FBF4	.byte $ff	; INVALID OPCODE !!!
$FBF5	ADC $94FF,Y	;
$FBF8	.byte $ff	; INVALID OPCODE !!!
$FBF9	BRK		;
$FBFA	BRK		;
$FBFB	BRK		;
$FBFC	.byte $d7	; INVALID OPCODE !!!
$FBFD	INC $FEED,X	;
$FC00	BRK		;
$FC01	BRK		;
$FC02	BRK		;
$FC03	.byte $b3	; INVALID OPCODE !!!
$FC04	.byte $ff	; INVALID OPCODE !!!
$FC05	CMP #$ff	;
$FC07	.byte $da	; INVALID OPCODE !!!
$FC08	.byte $ff	; INVALID OPCODE !!!
$FC09	.byte $ef	; INVALID OPCODE !!!
$FC0A	.byte $ff	; INVALID OPCODE !!!
$FC0B	ORA $A5,X	;
$FC0D	.byte $fc	; INVALID OPCODE !!!
$FC0E	ASL A		;
$FC0F	SBC $FD98,X	;
$FC12	CPX #$fd	;
$FC14	ORA $B2,X	;
$FC16	INC $0000,X	;
$FC19	CMP $FE  	;
$FC1B	BRK		;
$FC1C	BRK		;
$FC1D	ORA $00,X	;
$FC1F	BRK		;
$FC20	.byte $92	; INVALID OPCODE !!!
$FC21	INC $FEA1,X	;
$FC24	BRK		;
$FC25	BRK		;
$FC26	.byte $0c	; INVALID OPCODE !!!
$FC27	EOR $72FC,Y	; saved-to-battery RAM 
$FC2A	.byte $fc	; INVALID OPCODE !!!
$FC2B	STY $00FC	;
$FC2E	BRK		;
$FC2F	BRK		;
$FC30	BRK		;
$FC31	BRK		;
$FC32	SEC		;
$FC33	.byte $fc	; INVALID OPCODE !!!
$FC34	EOR #$fc	;
$FC36	BRK		;
$FC37	BRK		;
$FC38	.byte $82	; INVALID OPCODE !!!
$FC39	.byte $02	; INVALID OPCODE !!!
$FC3A	.byte $8b	; INVALID OPCODE !!!
$FC3B	.byte $02	; INVALID OPCODE !!!
$FC3C	.byte $80	; INVALID OPCODE !!!
$FC3D	PHP		;
$FC3E	.byte $02	; INVALID OPCODE !!!
$FC3F	BPL $FC43	;
$FC41	ASL $02,X	;
$FC43	.byte $52	; INVALID OPCODE !!!
$FC44	.byte $02	; INVALID OPCODE !!!
$FC45	.byte $02	; INVALID OPCODE !!!
$FC46	.byte $02	; INVALID OPCODE !!!
$FC47	.byte $1a	; INVALID OPCODE !!!
$FC48	BRK		;
$FC49	.byte $82	; INVALID OPCODE !!!
$FC4A	.byte $02	; INVALID OPCODE !!!
$FC4B	.byte $80	; INVALID OPCODE !!!
$FC4C	BPL $FC50	;
$FC4E	ASL $02,X	;
$FC50	.byte $52	; INVALID OPCODE !!!
$FC51	.byte $02	; INVALID OPCODE !!!
$FC52	.byte $5a	; INVALID OPCODE !!!
$FC53	.byte $02	; INVALID OPCODE !!!
$FC54	.byte $02	; INVALID OPCODE !!!
$FC55	.byte $02	; INVALID OPCODE !!!
$FC56	LSR $81,X	;
$FC58	.byte $02	; INVALID OPCODE !!!
$FC59	.byte $80	; INVALID OPCODE !!!
$FC5A	.byte $12	; INVALID OPCODE !!!
$FC5B	.byte $02	; INVALID OPCODE !!!
$FC5C	.byte $0c	; INVALID OPCODE !!!
$FC5D	.byte $02	; INVALID OPCODE !!!
$FC5E	.byte $04	; INVALID OPCODE !!!
$FC5F	.byte $02	; INVALID OPCODE !!!
$FC60	.byte $0c	; INVALID OPCODE !!!
$FC61	.byte $02	; INVALID OPCODE !!!
$FC62	.byte $04	; INVALID OPCODE !!!
$FC63	.byte $02	; INVALID OPCODE !!!
$FC64	ROL A		;
$FC65	.byte $02	; INVALID OPCODE !!!
$FC66	STA ($04,X)	;
$FC68	.byte $02	; INVALID OPCODE !!!
$FC69	.byte $80	; INVALID OPCODE !!!
$FC6A	.byte $04	; INVALID OPCODE !!!
$FC6B	.byte $02	; INVALID OPCODE !!!
$FC6C	STA ($04,X)	;
$FC6E	DEY		;
$FC6F	.byte $02	; INVALID OPCODE !!!
$FC70	.byte $02	; INVALID OPCODE !!!
$FC71	BRK		;
$FC72	DEY		;
$FC73	.byte $02	; INVALID OPCODE !!!
$FC74	.byte $02	; INVALID OPCODE !!!
$FC75	.byte $80	; INVALID OPCODE !!!
$FC76	.byte $04	; INVALID OPCODE !!!
$FC77	.byte $02	; INVALID OPCODE !!!
$FC78	ROL A		;
$FC79	.byte $02	; INVALID OPCODE !!!
$FC7A	BIT $02  	;
$FC7C	ROL A		;
$FC7D	.byte $02	; INVALID OPCODE !!!
$FC7E	BIT $02  	;
$FC80	.byte $1c	; INVALID OPCODE !!!
$FC81	.byte $02	; INVALID OPCODE !!!
$FC82	STA ($22,X)	;
$FC84	.byte $02	; INVALID OPCODE !!!
$FC85	.byte $80	; INVALID OPCODE !!!
$FC86	.byte $22	; INVALID OPCODE !!!
$FC87	.byte $02	; INVALID OPCODE !!!
$FC88	STA ($24,X)	;
$FC8A	DEY		;
$FC8B	.byte $02	; INVALID OPCODE !!!
$FC8C	DEY		;
$FC8D	.byte $02	; INVALID OPCODE !!!
$FC8E	.byte $80	; INVALID OPCODE !!!
$FC8F	LSR $02,X	;
$FC91	LSR $1202	;
$FC94	.byte $02	; INVALID OPCODE !!!
$FC95	LSR $1202	;
$FC98	.byte $02	; INVALID OPCODE !!!
$FC99	.byte $0c	; INVALID OPCODE !!!
$FC9A	.byte $02	; INVALID OPCODE !!!
$FC9B	STA ($10,X)	;
$FC9D	.byte $02	; INVALID OPCODE !!!
$FC9E	.byte $80	; INVALID OPCODE !!!
$FC9F	BPL $FCA3	;
$FCA1	STA ($12,X)	;
$FCA3	DEY		;
$FCA4	.byte $02	; INVALID OPCODE !!!
$FCA5	.byte $c3	; INVALID OPCODE !!!
$FCA6	STA ($02,X)	;
$FCA8	.byte $02	; INVALID OPCODE !!!
$FCA9	.byte $1c	; INVALID OPCODE !!!
$FCAA	.byte $02	; INVALID OPCODE !!!
$FCAB	.byte $02	; INVALID OPCODE !!!
$FCAC	.byte $02	; INVALID OPCODE !!!
$FCAD	.byte $1c	; INVALID OPCODE !!!
$FCAE	.byte $1c	; INVALID OPCODE !!!
$FCAF	.byte $ff	; INVALID OPCODE !!!
$FCB0	DEC $88  	;
$FCB2	.byte $1c	; INVALID OPCODE !!!
$FCB3	.byte $ff	; INVALID OPCODE !!!
$FCB4	.byte $c7	; INVALID OPCODE !!!
$FCB5	.byte $82	; INVALID OPCODE !!!
$FCB6	JMP $2A4C	;

$FCB9	JMP $C6FF	;

$FCBC	DEY		;
$FCBD	.byte $1c	; INVALID OPCODE !!!
$FCBE	.byte $ff	; INVALID OPCODE !!!
$FCBF	CPY $81  	;
$FCC1	LSR $02  	;
$FCC3	LSR $02  	;
$FCC5	.byte $32	; INVALID OPCODE !!!
$FCC6	.byte $02	; INVALID OPCODE !!!
$FCC7	LSR $80  	;
$FCC9	ROL $FF2E	;
$FCCC	.byte $c3	; INVALID OPCODE !!!
$FCCD	.byte $82	; INVALID OPCODE !!!
$FCCE	LSR $46  	;
$FCD0	STA ($32,X)	;
$FCD2	.byte $32	; INVALID OPCODE !!!
$FCD3	LSR $2E  	;
$FCD5	.byte $ff	; INVALID OPCODE !!!
$FCD6	.byte $80	; INVALID OPCODE !!!
$FCD7	.byte $0c	; INVALID OPCODE !!!
$FCD8	.byte $0c	; INVALID OPCODE !!!
$FCD9	STA ($46,X)	;
$FCDB	LSR $46  	;
$FCDD	.byte $80	; INVALID OPCODE !!!
$FCDE	.byte $04	; INVALID OPCODE !!!
$FCDF	.byte $04	; INVALID OPCODE !!!
$FCE0	STA ($46,X)	;
$FCE2	LSR $02  	;
$FCE4	INY		;
$FCE5	.byte $82	; INVALID OPCODE !!!
$FCE6	JMP $2A4C	;

$FCE9	JMP $C2FF	;

$FCEC	STA ($46,X)	;
$FCEE	.byte $80	; INVALID OPCODE !!!
$FCEF	.byte $32	; INVALID OPCODE !!!
$FCF0	.byte $32	; INVALID OPCODE !!!
$FCF1	.byte $82	; INVALID OPCODE !!!
$FCF2	LSR $04  	;
$FCF4	STA ($46,X)	;
$FCF6	ROL A		;
$FCF7	.byte $ff	; INVALID OPCODE !!!
$FCF8	.byte $c2	; INVALID OPCODE !!!
$FCF9	STA ($0C,X)	;
$FCFB	.byte $0c	; INVALID OPCODE !!!
$FCFC	.byte $80	; INVALID OPCODE !!!
$FCFD	.byte $04	; INVALID OPCODE !!!
$FCFE	.byte $04	; INVALID OPCODE !!!
$FCFF	STA ($04,X)	;
$FD01	.byte $80	; INVALID OPCODE !!!
$FD02	ROL $812E	;
$FD05	ROL $2482	;
$FD08	.byte $ff	; INVALID OPCODE !!!
$FD09	BRK		;
$FD0A	STA ($32,X)	;
$FD0C	.byte $02	; INVALID OPCODE !!!
$FD0D	.byte $02	; INVALID OPCODE !!!
$FD0E	ASL $0C  	;
$FD10	.byte $32	; INVALID OPCODE !!!
$FD11	.byte $02	; INVALID OPCODE !!!
$FD12	.byte $02	; INVALID OPCODE !!!
$FD13	TXA		;
$FD14	ROL $028B	;
$FD17	TXA		;
$FD18	ROL $028B	;
$FD1B	TXA		;
$FD1C	ROL $028B	;
$FD1F	DEY		;
$FD20	ROL $2E32	;
$FD23	BNE $FCB1	;
$FD25	BIT $FF24	;
$FD28	BNE $FD58	;
$FD2A	JSR $C3FF	;
$FD2D	.byte $80	; INVALID OPCODE !!!
$FD2E	PLP		;
$FD2F	.byte $02	; INVALID OPCODE !!!
$FD30	.byte $82	; INVALID OPCODE !!!
$FD31	.byte $02	; INVALID OPCODE !!!
$FD32	.byte $80	; INVALID OPCODE !!!
$FD33	BIT $3202	;
$FD36	.byte $02	; INVALID OPCODE !!!
$FD37	BIT $02  	;
$FD39	.byte $82	; INVALID OPCODE !!!
$FD3A	.byte $02	; INVALID OPCODE !!!
$FD3B	STA ($02,X)	;
$FD3D	.byte $80	; INVALID OPCODE !!!
$FD3E	PLP		;
$FD3F	.byte $02	; INVALID OPCODE !!!
$FD40	ASL $02  	;
$FD42	PLP		;
$FD43	.byte $02	; INVALID OPCODE !!!
$FD44	STA ($02,X)	;
$FD46	.byte $80	; INVALID OPCODE !!!
$FD47	BIT $02  	;
$FD49	.byte $32	; INVALID OPCODE !!!
$FD4A	.byte $02	; INVALID OPCODE !!!
$FD4B	BIT $02  	;
$FD4D	.byte $ff	; INVALID OPCODE !!!
$FD4E	.byte $80	; INVALID OPCODE !!!
$FD4F	PLP		;
$FD50	.byte $02	; INVALID OPCODE !!!
$FD51	.byte $82	; INVALID OPCODE !!!
$FD52	.byte $02	; INVALID OPCODE !!!
$FD53	.byte $80	; INVALID OPCODE !!!
$FD54	BIT $3202	;
$FD57	.byte $02	; INVALID OPCODE !!!
$FD58	BIT $02  	;
$FD5A	.byte $82	; INVALID OPCODE !!!
$FD5B	.byte $02	; INVALID OPCODE !!!
$FD5C	.byte $89	; INVALID OPCODE !!!
$FD5D	.byte $0c	; INVALID OPCODE !!!
$FD5E	ASL A		;
$FD5F	PHP		;
$FD60	ASL $32  	;
$FD62	BMI $FD92	;
$FD64	BIT $282A	;
$FD67	ROL $24  	;
$FD69	.byte $02	; INVALID OPCODE !!!
$FD6A	.byte $02	; INVALID OPCODE !!!
$FD6B	.byte $02	; INVALID OPCODE !!!
$FD6C	STX $02  	;
$FD6E	.byte $c7	; INVALID OPCODE !!!
$FD6F	STY $02  	;
$FD71	.byte $ff	; INVALID OPCODE !!!
$FD72	CPY $80  	;
$FD74	PLP		;
$FD75	.byte $02	; INVALID OPCODE !!!
$FD76	.byte $82	; INVALID OPCODE !!!
$FD77	.byte $02	; INVALID OPCODE !!!
$FD78	.byte $80	; INVALID OPCODE !!!
$FD79	BIT $3202	;
$FD7C	.byte $02	; INVALID OPCODE !!!
$FD7D	BIT $02  	;
$FD7F	.byte $82	; INVALID OPCODE !!!
$FD80	.byte $02	; INVALID OPCODE !!!
$FD81	STA ($02,X)	;
$FD83	.byte $80	; INVALID OPCODE !!!
$FD84	PLP		;
$FD85	.byte $02	; INVALID OPCODE !!!
$FD86	ASL $02  	;
$FD88	PLP		;
$FD89	.byte $02	; INVALID OPCODE !!!
$FD8A	STA ($02,X)	;
$FD8C	.byte $80	; INVALID OPCODE !!!
$FD8D	BIT $02  	;
$FD8F	.byte $32	; INVALID OPCODE !!!
$FD90	.byte $02	; INVALID OPCODE !!!
$FD91	BIT $02  	;
$FD93	.byte $ff	; INVALID OPCODE !!!
$FD94	INY		;
$FD95	STY $02  	;
$FD97	.byte $ff	; INVALID OPCODE !!!
$FD98	STA ($14,X)	;
$FD9A	.byte $02	; INVALID OPCODE !!!
$FD9B	.byte $02	; INVALID OPCODE !!!
$FD9C	.byte $14	; INVALID OPCODE !!!
$FD9D	.byte $1a	; INVALID OPCODE !!!
$FD9E	.byte $14	; INVALID OPCODE !!!
$FD9F	.byte $02	; INVALID OPCODE !!!
$FDA0	.byte $02	; INVALID OPCODE !!!
$FDA1	DEY		;
$FDA2	BPL $FDB4	;
$FDA4	BPL $FDB6	;
$FDA6	.byte $14	; INVALID OPCODE !!!
$FDA7	BPL $FD2E	;
$FDA9	.byte $3c	; INVALID OPCODE !!!
$FDAA	STA ($44,X)	;
$FDAC	STA $4A  	;
$FDAE	STA ($44,X)	;
$FDB0	DEY		;
$FDB1	PLP		;
$FDB2	BIT $20  	;
$FDB4	LSR $42  	;
$FDB6	RTI		;

$FDB7	DEC $81  	;
$FDB9	.byte $3c	; INVALID OPCODE !!!
$FDBA	.byte $02	; INVALID OPCODE !!!
$FDBB	.byte $02	; INVALID OPCODE !!!
$FDBC	.byte $44	; INVALID OPCODE !!!
$FDBD	.byte $02	; INVALID OPCODE !!!
$FDBE	.byte $02	; INVALID OPCODE !!!
$FDBF	.byte $02	; INVALID OPCODE !!!
$FDC0	LSR A		;
$FDC1	.byte $02	; INVALID OPCODE !!!
$FDC2	LSR $36  	;
$FDC4	ROL $38,X	;
$FDC6	SEC		;
$FDC7	.byte $02	; INVALID OPCODE !!!
$FDC8	.byte $3a	; INVALID OPCODE !!!
$FDC9	.byte $02	; INVALID OPCODE !!!
$FDCA	.byte $80	; INVALID OPCODE !!!
$FDCB	.byte $3c	; INVALID OPCODE !!!
$FDCC	.byte $3c	; INVALID OPCODE !!!
$FDCD	STA ($02,X)	;
$FDCF	BIT $02  	;
$FDD1	.byte $02	; INVALID OPCODE !!!
$FDD2	BIT $8824	;
$FDD5	BIT $1E  	;
$FDD7	LSR $36  	;
$FDD9	SEC		;
$FDDA	.byte $3a	; INVALID OPCODE !!!
$FDDB	.byte $ff	; INVALID OPCODE !!!
$FDDC	CPY $84  	;
$FDDE	.byte $02	; INVALID OPCODE !!!
$FDDF	.byte $ff	; INVALID OPCODE !!!
$FDE0	CLD		;
$FDE1	STA ($06,X)	;
$FDE3	.byte $ff	; INVALID OPCODE !!!
$FDE4	DEC $88  	;
$FDE6	ASL $FF  	;
$FDE8	.byte $c7	; INVALID OPCODE !!!
$FDE9	STA ($06,X)	;
$FDEB	ASL $80  	;
$FDED	ASL $06  	;
$FDEF	STA ($06,X)	;
$FDF1	ASL $80  	;
$FDF3	ASL $06  	;
$FDF5	STA ($06,X)	;
$FDF7	ASL $FF  	;
$FDF9	DEC $88  	;
$FDFB	ASL $FF  	;
$FDFD	CPX #$81	;
$FDFF	ASL $06  	;
$FE01	.byte $ff	; INVALID OPCODE !!!
$FE02	.byte $82	; INVALID OPCODE !!!
$FE03	.byte $0f	; INVALID OPCODE !!!
$FE04	STA ($06,X)	;
$FE06	ASL $EA  	;
$FE08	ASL $06  	;
$FE0A	ASL $06  	;
$FE0C	.byte $ff	; INVALID OPCODE !!!
$FE0D	CMP $80  	;
$FE0F	ASL $FF58	;
$FE12	BRK		;
$FE13	CMP $80  	;
$FE15	ASL $FF58	;
$FE18	.byte $82	; INVALID OPCODE !!!
$FE19	.byte $1c	; INVALID OPCODE !!!
$FE1A	.byte $1c	; INVALID OPCODE !!!
$FE1B	.byte $c3	; INVALID OPCODE !!!
$FE1C	.byte $82	; INVALID OPCODE !!!
$FE1D	.byte $1c	; INVALID OPCODE !!!
$FE1E	.byte $1c	; INVALID OPCODE !!!
$FE1F	STA ($1C,X)	;
$FE21	.byte $1c	; INVALID OPCODE !!!
$FE22	.byte $1c	; INVALID OPCODE !!!
$FE23	.byte $02	; INVALID OPCODE !!!
$FE24	.byte $ff	; INVALID OPCODE !!!
$FE25	.byte $c7	; INVALID OPCODE !!!
$FE26	DEY		;
$FE27	.byte $1c	; INVALID OPCODE !!!
$FE28	.byte $ff	; INVALID OPCODE !!!
$FE29	BRK		;
$FE2A	.byte $83	; INVALID OPCODE !!!
$FE2B	.byte $02	; INVALID OPCODE !!!
$FE2C	.byte $80	; INVALID OPCODE !!!
$FE2D	ASL $0E02	;
$FE30	.byte $02	; INVALID OPCODE !!!
$FE31	.byte $0c	; INVALID OPCODE !!!
$FE32	.byte $02	; INVALID OPCODE !!!
$FE33	ASL $4E02	; unknown register 
$FE36	.byte $02	; INVALID OPCODE !!!
$FE37	.byte $02	; INVALID OPCODE !!!
$FE38	.byte $02	; INVALID OPCODE !!!
$FE39	ASL $0C02	;
$FE3C	.byte $02	; INVALID OPCODE !!!
$FE3D	.byte $02	; INVALID OPCODE !!!
$FE3E	.byte $02	; INVALID OPCODE !!!
$FE3F	ASL $0C02	;
$FE42	.byte $02	; INVALID OPCODE !!!
$FE43	ASL $4E02	; unknown register 
$FE46	.byte $02	; INVALID OPCODE !!!
$FE47	.byte $02	; INVALID OPCODE !!!
$FE48	.byte $02	; INVALID OPCODE !!!
$FE49	ASL $0C02	;
$FE4C	.byte $02	; INVALID OPCODE !!!
$FE4D	ASL $0E02	;
$FE50	.byte $02	; INVALID OPCODE !!!
$FE51	.byte $0c	; INVALID OPCODE !!!
$FE52	.byte $02	; INVALID OPCODE !!!
$FE53	ASL $4E02	; unknown register 
$FE56	.byte $02	; INVALID OPCODE !!!
$FE57	.byte $02	; INVALID OPCODE !!!
$FE58	.byte $02	; INVALID OPCODE !!!
$FE59	ASL $0C02	;
$FE5C	.byte $02	; INVALID OPCODE !!!
$FE5D	DEY		;
$FE5E	LSR $1618	;
$FE61	.byte $12	; INVALID OPCODE !!!
$FE62	ASL $0E0C	;
$FE65	.byte $83	; INVALID OPCODE !!!
$FE66	.byte $02	; INVALID OPCODE !!!
$FE67	STA ($3E,X)	;
$FE69	ROL $4682,X	; unknown register 
$FE6C	.byte $1c	; INVALID OPCODE !!!
$FE6D	LSR $81  	;
$FE6F	.byte $02	; INVALID OPCODE !!!
$FE70	SEC		;
$FE71	ROL $8202,X	;
$FE74	LSR $1C  	;
$FE76	.byte $82	; INVALID OPCODE !!!
$FE77	PHA		;
$FE78	PHA		;
$FE79	STA ($3E,X)	;
$FE7B	ROL $3882,X	;
$FE7E	DEY		;
$FE7F	BIT $20  	;
$FE81	.byte $1c	; INVALID OPCODE !!!
$FE82	PHA		;
$FE83	LSR $42  	;
$FE85	ROL $0982,X	;
$FE88	ORA #$c6	;
$FE8A	.byte $82	; INVALID OPCODE !!!
$FE8B	.byte $03	; INVALID OPCODE !!!
$FE8C	.byte $0c	; INVALID OPCODE !!!
$FE8D	.byte $ff	; INVALID OPCODE !!!
$FE8E	DEC $88  	;
$FE90	ASL $FF  	;
$FE92	SBC $2A89	;
$FE95	.byte $02	; INVALID OPCODE !!!
$FE96	.byte $04	; INVALID OPCODE !!!
$FE97	.byte $0c	; INVALID OPCODE !!!
$FE98	.byte $02	; INVALID OPCODE !!!
$FE99	.byte $04	; INVALID OPCODE !!!
$FE9A	PHP		;
$FE9B	.byte $02	; INVALID OPCODE !!!
$FE9C	BMI $FEC4	;
$FE9E	.byte $02	; INVALID OPCODE !!!
$FE9F	BMI $FEA0	;
$FEA1	.byte $80	; INVALID OPCODE !!!
$FEA2	.byte $02	; INVALID OPCODE !!!
$FEA3	SBC $0C89	;
$FEA6	.byte $02	; INVALID OPCODE !!!
$FEA7	.byte $12	; INVALID OPCODE !!!
$FEA8	LSR $1202	;
$FEAB	CLC		;
$FEAC	.byte $02	; INVALID OPCODE !!!
$FEAD	ASL $0208	;
$FEB0	ASL $80FF	;
$FEB3	.byte $42	; INVALID OPCODE !!!
$FEB4	.byte $02	; INVALID OPCODE !!!
$FEB5	PHA		;
$FEB6	.byte $02	; INVALID OPCODE !!!
$FEB7	ASL $2402,X	;
$FEBA	.byte $02	; INVALID OPCODE !!!
$FEBB	.byte $02	; INVALID OPCODE !!!
$FEBC	.byte $02	; INVALID OPCODE !!!
$FEBD	ROL A		;
$FEBE	.byte $02	; INVALID OPCODE !!!
$FEBF	DEC $8C  	;
$FEC1	BMI $FEED	;
$FEC3	.byte $ff	; INVALID OPCODE !!!
$FEC4	BRK		;
$FEC5	.byte $80	; INVALID OPCODE !!!
$FEC6	BIT $02  	;
$FEC8	ROL A		;
$FEC9	.byte $02	; INVALID OPCODE !!!
$FECA	BMI $FECE	;
$FECC	ASL $02  	;
$FECE	.byte $02	; INVALID OPCODE !!!
$FECF	.byte $02	; INVALID OPCODE !!!
$FED0	.byte $0c	; INVALID OPCODE !!!
$FED1	.byte $02	; INVALID OPCODE !!!
$FED2	DEC $8C  	;
$FED4	.byte $12	; INVALID OPCODE !!!
$FED5	CLC		;
$FED6	.byte $ff	; INVALID OPCODE !!!
$FED7	.byte $80	; INVALID OPCODE !!!
$FED8	LSR $54,X	;
$FEDA	.byte $52	; INVALID OPCODE !!!
$FEDB	BVC $FE5E	;
$FEDD	.byte $02	; INVALID OPCODE !!!
$FEDE	.byte $80	; INVALID OPCODE !!!
$FEDF	LSR $545A,X	; MMC5 register or expansion RAM 
$FEE2	BVC $FEFC	;
$FEE4	.byte $14	; INVALID OPCODE !!!
$FEE5	BPL $FEF1	;
$FEE7	ASL $30  	;
$FEE9	BIT $0228	;
$FEEC	BRK		;
$FEED	.byte $80	; INVALID OPCODE !!!
$FEEE	.byte $1a	; INVALID OPCODE !!!
$FEEF	CLC		;
$FEF0	ASL $14,X	;
$FEF2	STA ($02,X)	;
$FEF4	.byte $80	; INVALID OPCODE !!!
$FEF5	.byte $02	; INVALID OPCODE !!!
$FEF6	LSR $545A,X	; MMC5 register or expansion RAM 
$FEF9	BVC $FF13	;
$FEFB	.byte $14	; INVALID OPCODE !!!
$FEFC	BPL $FF08	;
$FEFE	ASL $30  	;
$FF00	BIT $8228	;
$FF03	.byte $1c	; INVALID OPCODE !!!
$FF04	.byte $02	; INVALID OPCODE !!!
$FF05	.byte $1c	; INVALID OPCODE !!!
$FF06	.byte $02	; INVALID OPCODE !!!
$FF07	.byte $02	; INVALID OPCODE !!!
$FF08	.byte $1c	; INVALID OPCODE !!!
$FF09	.byte $1c	; INVALID OPCODE !!!
$FF0A	BRK		;
$FF0B	STA ($10,X)	;
$FF0D	ASL A		;
$FF0E	.byte $32	; INVALID OPCODE !!!
$FF0F	PLP		;
$FF10	.byte $80	; INVALID OPCODE !!!
$FF11	.byte $32	; INVALID OPCODE !!!
$FF12	.byte $02	; INVALID OPCODE !!!
$FF13	.byte $32	; INVALID OPCODE !!!
$FF14	.byte $02	; INVALID OPCODE !!!
$FF15	.byte $82	; INVALID OPCODE !!!
$FF16	.byte $32	; INVALID OPCODE !!!
$FF17	STA ($06,X)	;
$FF19	.byte $02	; INVALID OPCODE !!!
$FF1A	ASL $02  	;
$FF1C	.byte $82	; INVALID OPCODE !!!
$FF1D	.byte $32	; INVALID OPCODE !!!
$FF1E	STA ($54,X)	;
$FF20	.byte $1a	; INVALID OPCODE !!!
$FF21	BPL $FF2D	;
$FF23	.byte $80	; INVALID OPCODE !!!
$FF24	BPL $FF28	;
$FF26	BPL $FF2A	;
$FF28	.byte $82	; INVALID OPCODE !!!
$FF29	BPL $FEAC	;
$FF2B	ASL $02,X	;
$FF2D	ASL $02,X	;
$FF2F	.byte $82	; INVALID OPCODE !!!
$FF30	ASL A		;
$FF31	.byte $83	; INVALID OPCODE !!!
$FF32	.byte $03	; INVALID OPCODE !!!
$FF33	.byte $0c	; INVALID OPCODE !!!
$FF34	.byte $82	; INVALID OPCODE !!!
$FF35	.byte $03	; INVALID OPCODE !!!
$FF36	.byte $0c	; INVALID OPCODE !!!
$FF37	.byte $0c	; INVALID OPCODE !!!
$FF38	.byte $c2	; INVALID OPCODE !!!
$FF39	DEY		;
$FF3A	.byte $1c	; INVALID OPCODE !!!
$FF3B	.byte $1c	; INVALID OPCODE !!!
$FF3C	.byte $1c	; INVALID OPCODE !!!
$FF3D	.byte $1c	; INVALID OPCODE !!!
$FF3E	.byte $1c	; INVALID OPCODE !!!
$FF3F	.byte $1c	; INVALID OPCODE !!!
$FF40	.byte $83	; INVALID OPCODE !!!
$FF41	.byte $1c	; INVALID OPCODE !!!
$FF42	.byte $80	; INVALID OPCODE !!!
$FF43	.byte $04	; INVALID OPCODE !!!
$FF44	.byte $04	; INVALID OPCODE !!!
$FF45	ROL A		;
$FF46	.byte $02	; INVALID OPCODE !!!
$FF47	.byte $82	; INVALID OPCODE !!!
$FF48	.byte $1c	; INVALID OPCODE !!!
$FF49	.byte $ff	; INVALID OPCODE !!!
$FF4A	STA ($4C,X)	;
$FF4C	.byte $02	; INVALID OPCODE !!!
$FF4D	JMP $2A02	;

$FF50	.byte $02	; INVALID OPCODE !!!
$FF51	JMP $811C	;

$FF54	JMP $4C02	; unknown register 

$FF57	.byte $02	; INVALID OPCODE !!!
$FF58	JMP $8800	;

$FF5B	ROL $2E2E	;
$FF5E	BMI $FF64	;
$FF60	BMI $FF26	;
$FF62	.byte $80	; INVALID OPCODE !!!
$FF63	ROL $FF04	;
$FF66	.byte $83	; INVALID OPCODE !!!
$FF67	.byte $02	; INVALID OPCODE !!!
$FF68	DEY		;
$FF69	ROL $2E2E	;
$FF6C	BMI $FF72	;
$FF6E	BMI $FF34	;
$FF70	.byte $80	; INVALID OPCODE !!!
$FF71	ROL $FF04	;
$FF74	.byte $83	; INVALID OPCODE !!!
$FF75	.byte $02	; INVALID OPCODE !!!
$FF76	STY $02  	;
$FF78	.byte $02	; INVALID OPCODE !!!
$FF79	.byte $c2	; INVALID OPCODE !!!
$FF7A	DEY		;
$FF7B	ROL $3E3E,X	;
$FF7E	.byte $42	; INVALID OPCODE !!!
$FF7F	LSR $42  	;
$FF81	STY $3E  	;
$FF83	.byte $ff	; INVALID OPCODE !!!
$FF84	STA $3E  	;
$FF86	STA ($3E,X)	;
$FF88	DEY		;
$FF89	.byte $1c	; INVALID OPCODE !!!
$FF8A	LSR $1C  	;
$FF8C	STA ($02,X)	;
$FF8E	ROL $3E3E,X	;
$FF91	.byte $82	; INVALID OPCODE !!!
$FF92	.byte $34	; INVALID OPCODE !!!
$FF93	.byte $02	; INVALID OPCODE !!!
$FF94	.byte $c2	; INVALID OPCODE !!!
$FF95	DEY		;
$FF96	ASL $06  	;
$FF98	ASL $06  	;
$FF9A	ASL $06  	;
$FF9C	.byte $82	; INVALID OPCODE !!!
$FF9D	ASL $06  	;
$FF9F	ASL $06  	;
$FFA1	.byte $ff	; INVALID OPCODE !!!
$FFA2	.byte $c2	; INVALID OPCODE !!!
$FFA3	STA ($06,X)	;
$FFA5	ASL $80  	;
$FFA7	ASL $06  	;
$FFA9	STA ($06,X)	;
$FFAB	ASL $06  	;
$FFAD	ASL $80  	;
$FFAF	ASL $06  	;
$FFB1	.byte $ff	; INVALID OPCODE !!!
$FFB2	ORA #$80	;
$FFB4	BPL $FFB8	;
$FFB6	BPL $FFBA	;
$FFB8	BPL $FFBC	;
$FFBA	.byte $0c	; INVALID OPCODE !!!
$FFBB	.byte $0c	; INVALID OPCODE !!!
$FFBC	.byte $0c	; INVALID OPCODE !!!
$FFBD	.byte $02	; INVALID OPCODE !!!
$FFBE	.byte $0c	; INVALID OPCODE !!!
$FFBF	.byte $02	; INVALID OPCODE !!!
$FFC0	.byte $14	; INVALID OPCODE !!!
$FFC1	.byte $14	; INVALID OPCODE !!!
$FFC2	.byte $14	; INVALID OPCODE !!!
$FFC3	.byte $02	; INVALID OPCODE !!!
$FFC4	.byte $14	; INVALID OPCODE !!!
$FFC5	.byte $02	; INVALID OPCODE !!!
$FFC6	STA $10  	;
$FFC8	BRK		;
$FFC9	.byte $80	; INVALID OPCODE !!!
$FFCA	.byte $32	; INVALID OPCODE !!!
$FFCB	.byte $02	; INVALID OPCODE !!!
$FFCC	.byte $32	; INVALID OPCODE !!!
$FFCD	.byte $02	; INVALID OPCODE !!!
$FFCE	.byte $32	; INVALID OPCODE !!!
$FFCF	.byte $02	; INVALID OPCODE !!!
$FFD0	.byte $c2	; INVALID OPCODE !!!
$FFD1	.byte $32	; INVALID OPCODE !!!
$FFD2	.byte $32	; INVALID OPCODE !!!
$FFD3	.byte $32	; INVALID OPCODE !!!
$FFD4	.byte $02	; INVALID OPCODE !!!
$FFD5	.byte $32	; INVALID OPCODE !!!
$FFD6	.byte $02	; INVALID OPCODE !!!
$FFD7	.byte $ff	; INVALID OPCODE !!!
$FFD8	STA $32  	;
$FFDA	.byte $80	; INVALID OPCODE !!!
$FFDB	.byte $54	; INVALID OPCODE !!!
$FFDC	.byte $02	; INVALID OPCODE !!!
$FFDD	.byte $54	; INVALID OPCODE !!!
$FFDE	.byte $02	; INVALID OPCODE !!!
$FFDF	.byte $54	; INVALID OPCODE !!!
$FFE0	.byte $02	; INVALID OPCODE !!!
$FFE1	BVC $10033	;
$FFE3	BVC $FFE7	;
$FFE5	BVC $FFE9	;
$FFE7	LSR $56,X	;
$FFE9	LSR $02,X	;
$FFEB	LSR $02,X	;
$FFED	STA $54  	;
$FFEF	CPY $85  	;
$FFF1	.byte $0c	; INVALID OPCODE !!!
$FFF2	.byte $ff	; INVALID OPCODE !!!
$FFF3	.byte $ff	; INVALID OPCODE !!!
$FFF4	.byte $ff	; INVALID OPCODE !!!
$FFF5	.byte $ff	; INVALID OPCODE !!!
$FFF6	.byte $ff	; INVALID OPCODE !!!

function_FFF7:
$FFF7	JMP $F758	;

$FFFA	.word $C08A	;NMI/VBlank interrupt vector (has the address of function that handles these)
$FFFC	.word $C000	;RESET vector (has the address of function that handles these)
$FFFE	.word $00ED	;IRQ/BRK vector (has the address of function that handles these)
